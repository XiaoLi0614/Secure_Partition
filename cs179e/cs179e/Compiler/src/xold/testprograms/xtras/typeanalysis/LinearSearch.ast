CompilationUnit
	mainClass: MainClass
		name: Identifier
			token:  "LinearSearch"
		parameterName: Identifier
			token:  "a"
		varDeclarations: List
		statements: List
			[0]: Print
				argument: MethodCall
					receiver: Allocation
						className: Identifier
							token:  "LS"
					methodName: Identifier
						token:  "Start"
					arguments: List
						[0]: IntLiteral
							token:  "10"
	classes: List
		[0]: Class
			name: Identifier
				token:  "LS"
			varDeclarations: List
				[0]: VarDeclaration
					type: ArrayType
					identifier: Identifier
						token:  "number"
				[1]: VarDeclaration
					type: IntType
					identifier: Identifier
						token:  "size"
			methodDeclarations: List
				[0]: Method
					returnType: IntType
					name: Identifier
						token:  "Start"
					parameters: List
						[0]: Parameter
							type: IntType
							name: Identifier
								token:  "sz"
					varDeclarations: List
						[0]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "aux01"
						[1]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "aux02"
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "aux01"
							right: MethodCall
								receiver: This
								methodName: Identifier
									token:  "Init"
								arguments: List
									[0]: Identifier
										token:  "sz"
						[1]: Assign
							identifier: Identifier
								token:  "aux02"
							right: MethodCall
								receiver: This
								methodName: Identifier
									token:  "Print"
								arguments: List
						[2]: Print
							argument: IntLiteral
								token:  "9999"
						[3]: Print
							argument: MethodCall
								receiver: This
								methodName: Identifier
									token:  "Search"
								arguments: List
									[0]: IntLiteral
										token:  "8"
						[4]: Print
							argument: MethodCall
								receiver: This
								methodName: Identifier
									token:  "Search"
								arguments: List
									[0]: IntLiteral
										token:  "12"
						[5]: Print
							argument: MethodCall
								receiver: This
								methodName: Identifier
									token:  "Search"
								arguments: List
									[0]: IntLiteral
										token:  "17"
						[6]: Print
							argument: MethodCall
								receiver: This
								methodName: Identifier
									token:  "Search"
								arguments: List
									[0]: IntLiteral
										token:  "50"
					returnExpression: IntLiteral
						token:  "55"
				[1]: Method
					returnType: IntType
					name: Identifier
						token:  "Print"
					parameters: List
					varDeclarations: List
						[0]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "j"
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "j"
							right: IntLiteral
								token:  "1"
						[1]: While
							condition: LessThan
								operand1: Identifier
									token:  "j"
								operand2: Identifier
									token:  "size"
							body: Block
								statements: List
									[0]: Print
										argument: ArrayLookup
											array: Identifier
												token:  "number"
											index: Identifier
												token:  "j"
									[1]: Assign
										identifier: Identifier
											token:  "j"
										right: Plus
											operand1: Identifier
												token:  "j"
											operand2: IntLiteral
												token:  "1"
					returnExpression: IntLiteral
						token:  "0"
				[2]: Method
					returnType: IntType
					name: Identifier
						token:  "Search"
					parameters: List
						[0]: Parameter
							type: IntType
							name: Identifier
								token:  "num"
					varDeclarations: List
						[0]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "j"
						[1]: VarDeclaration
							type: BooleanType
							identifier: Identifier
								token:  "ls01"
						[2]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "ifound"
						[3]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "aux01"
						[4]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "aux02"
						[5]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "nt"
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "j"
							right: IntLiteral
								token:  "1"
						[1]: Assign
							identifier: Identifier
								token:  "ls01"
							right: FalseLiteral
						[2]: Assign
							identifier: Identifier
								token:  "ifound"
							right: IntLiteral
								token:  "0"
						[3]: While
							condition: LessThan
								operand1: Identifier
									token:  "j"
								operand2: Identifier
									token:  "size"
							body: Block
								statements: List
									[0]: Assign
										identifier: Identifier
											token:  "aux01"
										right: ArrayLookup
											array: Identifier
												token:  "number"
											index: Identifier
												token:  "j"
									[1]: Assign
										identifier: Identifier
											token:  "aux02"
										right: Plus
											operand1: Identifier
												token:  "num"
											operand2: IntLiteral
												token:  "1"
									[2]: If
										condition: LessThan
											operand1: Identifier
												token:  "aux01"
											operand2: Identifier
												token:  "num"
										ifStatement: Assign
											identifier: Identifier
												token:  "nt"
											right: IntLiteral
												token:  "0"
										elseStatement: If
											condition: Not
												operand: LessThan
													operand1: Identifier
														token:  "aux01"
													operand2: Identifier
														token:  "aux02"
											ifStatement: Assign
												identifier: Identifier
													token:  "nt"
												right: IntLiteral
													token:  "0"
											elseStatement: Block
												statements: List
													[0]: Assign
														identifier: Identifier
															token:  "ls01"
														right: TrueLiteral
													[1]: Assign
														identifier: Identifier
															token:  "ifound"
														right: IntLiteral
															token:  "1"
													[2]: Assign
														identifier: Identifier
															token:  "j"
														right: Identifier
															token:  "size"
									[3]: Assign
										identifier: Identifier
											token:  "j"
										right: Plus
											operand1: Identifier
												token:  "j"
											operand2: IntLiteral
												token:  "1"
					returnExpression: Identifier
						token:  "ifound"
				[3]: Method
					returnType: IntType
					name: Identifier
						token:  "Init"
					parameters: List
						[0]: Parameter
							type: IntType
							name: Identifier
								token:  "sz"
					varDeclarations: List
						[0]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "j"
						[1]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "k"
						[2]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "aux01"
						[3]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "aux02"
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "size"
							right: Identifier
								token:  "sz"
						[1]: Assign
							identifier: Identifier
								token:  "number"
							right: ArrayAllocation
								expression: Identifier
									token:  "sz"
						[2]: Assign
							identifier: Identifier
								token:  "j"
							right: IntLiteral
								token:  "1"
						[3]: Assign
							identifier: Identifier
								token:  "k"
							right: Plus
								operand1: Identifier
									token:  "size"
								operand2: IntLiteral
									token:  "1"
						[4]: While
							condition: LessThan
								operand1: Identifier
									token:  "j"
								operand2: Identifier
									token:  "size"
							body: Block
								statements: List
									[0]: Assign
										identifier: Identifier
											token:  "aux01"
										right: Mult
											operand1: IntLiteral
												token:  "2"
											operand2: Identifier
												token:  "j"
									[1]: Assign
										identifier: Identifier
											token:  "aux02"
										right: Minus
											operand1: Identifier
												token:  "k"
											operand2: IntLiteral
												token:  "3"
									[2]: ArrayAssign
										array: Identifier
											token:  "number"
										index: Identifier
											token:  "j"
										right: Plus
											operand1: Identifier
												token:  "aux01"
											operand2: Identifier
												token:  "aux02"
									[3]: Assign
										identifier: Identifier
											token:  "j"
										right: Plus
											operand1: Identifier
												token:  "j"
											operand2: IntLiteral
												token:  "1"
									[4]: Assign
										identifier: Identifier
											token:  "k"
										right: Minus
											operand1: Identifier
												token:  "k"
											operand2: IntLiteral
												token:  "1"
					returnExpression: IntLiteral
						token:  "0"
