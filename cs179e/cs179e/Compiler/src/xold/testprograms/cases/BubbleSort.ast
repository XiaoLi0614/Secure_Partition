CompilationUnit
	mainClass: MainClass
		name: Identifier
			token:  "BubbleSort"
		parameterName: Identifier
			token:  "a"
		varDeclarations: List
		statements: List
			[0]: Print
				argument: MethodCall
					receiver: Allocation
						className: Identifier
							token:  "BBS"
					methodName: Identifier
						token:  "Start"
					arguments: List
						[0]: IntLiteral
							token:  "10"
	classes: List
		[0]: Class
			name: Identifier
				token:  "BBS"
			varDeclarations: List
				[0]: VarDeclaration
					type: ArrayType
					identifier: Identifier
						token:  "number"
				[1]: VarDeclaration
					type: IntType
					identifier: Identifier
						token:  "size"
			methodDeclarations: List
				[0]: Method
					returnType: IntType
					name: Identifier
						token:  "Start"
					parameters: List
						[0]: Parameter
							type: IntType
							name: Identifier
								token:  "sz"
					varDeclarations: List
						[0]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "aux01"
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "aux01"
							right: MethodCall
								receiver: This
								methodName: Identifier
									token:  "Init"
								arguments: List
									[0]: Identifier
										token:  "sz"
						[1]: Assign
							identifier: Identifier
								token:  "aux01"
							right: MethodCall
								receiver: This
								methodName: Identifier
									token:  "Print"
								arguments: List
						[2]: Print
							argument: IntLiteral
								token:  "99999"
						[3]: Assign
							identifier: Identifier
								token:  "aux01"
							right: MethodCall
								receiver: This
								methodName: Identifier
									token:  "Sort"
								arguments: List
						[4]: Assign
							identifier: Identifier
								token:  "aux01"
							right: MethodCall
								receiver: This
								methodName: Identifier
									token:  "Print"
								arguments: List
					returnExpression: IntLiteral
						token:  "0"
				[1]: Method
					returnType: IntType
					name: Identifier
						token:  "Sort"
					parameters: List
					varDeclarations: List
						[0]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "nt"
						[1]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "i"
						[2]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "aux02"
						[3]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "aux04"
						[4]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "aux05"
						[5]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "aux06"
						[6]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "aux07"
						[7]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "j"
						[8]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "t"
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "i"
							right: Minus
								operand1: Identifier
									token:  "size"
								operand2: IntLiteral
									token:  "1"
						[1]: Assign
							identifier: Identifier
								token:  "aux02"
							right: Minus
								operand1: IntLiteral
									token:  "0"
								operand2: IntLiteral
									token:  "1"
						[2]: While
							condition: LessThan
								operand1: Identifier
									token:  "aux02"
								operand2: Identifier
									token:  "i"
							body: Block
								statements: List
									[0]: Assign
										identifier: Identifier
											token:  "j"
										right: IntLiteral
											token:  "1"
									[1]: While
										condition: LessThan
											operand1: Identifier
												token:  "j"
											operand2: Plus
												operand1: Identifier
													token:  "i"
												operand2: IntLiteral
													token:  "1"
										body: Block
											statements: List
												[0]: Assign
													identifier: Identifier
														token:  "aux07"
													right: Minus
														operand1: Identifier
															token:  "j"
														operand2: IntLiteral
															token:  "1"
												[1]: Assign
													identifier: Identifier
														token:  "aux04"
													right: ArrayLookup
														array: Identifier
															token:  "number"
														index: Identifier
															token:  "aux07"
												[2]: Assign
													identifier: Identifier
														token:  "aux05"
													right: ArrayLookup
														array: Identifier
															token:  "number"
														index: Identifier
															token:  "j"
												[3]: If
													condition: LessThan
														operand1: Identifier
															token:  "aux05"
														operand2: Identifier
															token:  "aux04"
													ifStatement: Block
														statements: List
															[0]: Assign
																identifier: Identifier
																	token:  "aux06"
																right: Minus
																	operand1: Identifier
																		token:  "j"
																	operand2: IntLiteral
																		token:  "1"
															[1]: Assign
																identifier: Identifier
																	token:  "t"
																right: ArrayLookup
																	array: Identifier
																		token:  "number"
																	index: Identifier
																		token:  "aux06"
															[2]: ArrayAssign
																array: Identifier
																	token:  "number"
																index: Identifier
																	token:  "aux06"
																right: ArrayLookup
																	array: Identifier
																		token:  "number"
																	index: Identifier
																		token:  "j"
															[3]: ArrayAssign
																array: Identifier
																	token:  "number"
																index: Identifier
																	token:  "j"
																right: Identifier
																	token:  "t"
													elseStatement: Assign
														identifier: Identifier
															token:  "nt"
														right: IntLiteral
															token:  "0"
												[4]: Assign
													identifier: Identifier
														token:  "j"
													right: Plus
														operand1: Identifier
															token:  "j"
														operand2: IntLiteral
															token:  "1"
									[2]: Assign
										identifier: Identifier
											token:  "i"
										right: Minus
											operand1: Identifier
												token:  "i"
											operand2: IntLiteral
												token:  "1"
					returnExpression: IntLiteral
						token:  "0"
				[2]: Method
					returnType: IntType
					name: Identifier
						token:  "Print"
					parameters: List
					varDeclarations: List
						[0]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "j"
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "j"
							right: IntLiteral
								token:  "0"
						[1]: While
							condition: LessThan
								operand1: Identifier
									token:  "j"
								operand2: Identifier
									token:  "size"
							body: Block
								statements: List
									[0]: Print
										argument: ArrayLookup
											array: Identifier
												token:  "number"
											index: Identifier
												token:  "j"
									[1]: Assign
										identifier: Identifier
											token:  "j"
										right: Plus
											operand1: Identifier
												token:  "j"
											operand2: IntLiteral
												token:  "1"
					returnExpression: IntLiteral
						token:  "0"
				[3]: Method
					returnType: IntType
					name: Identifier
						token:  "Init"
					parameters: List
						[0]: Parameter
							type: IntType
							name: Identifier
								token:  "sz"
					varDeclarations: List
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "size"
							right: Identifier
								token:  "sz"
						[1]: Assign
							identifier: Identifier
								token:  "number"
							right: ArrayAllocation
								expression: Identifier
									token:  "sz"
						[2]: ArrayAssign
							array: Identifier
								token:  "number"
							index: IntLiteral
								token:  "0"
							right: IntLiteral
								token:  "20"
						[3]: ArrayAssign
							array: Identifier
								token:  "number"
							index: IntLiteral
								token:  "1"
							right: IntLiteral
								token:  "7"
						[4]: ArrayAssign
							array: Identifier
								token:  "number"
							index: IntLiteral
								token:  "2"
							right: IntLiteral
								token:  "12"
						[5]: ArrayAssign
							array: Identifier
								token:  "number"
							index: IntLiteral
								token:  "3"
							right: IntLiteral
								token:  "18"
						[6]: ArrayAssign
							array: Identifier
								token:  "number"
							index: IntLiteral
								token:  "4"
							right: IntLiteral
								token:  "2"
						[7]: ArrayAssign
							array: Identifier
								token:  "number"
							index: IntLiteral
								token:  "5"
							right: IntLiteral
								token:  "11"
						[8]: ArrayAssign
							array: Identifier
								token:  "number"
							index: IntLiteral
								token:  "6"
							right: IntLiteral
								token:  "6"
						[9]: ArrayAssign
							array: Identifier
								token:  "number"
							index: IntLiteral
								token:  "7"
							right: IntLiteral
								token:  "9"
						[10]: ArrayAssign
							array: Identifier
								token:  "number"
							index: IntLiteral
								token:  "8"
							right: IntLiteral
								token:  "19"
						[11]: ArrayAssign
							array: Identifier
								token:  "number"
							index: IntLiteral
								token:  "9"
							right: IntLiteral
								token:  "5"
					returnExpression: IntLiteral
						token:  "0"
