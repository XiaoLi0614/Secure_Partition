CompilationUnit
	mainClass: MainClass
		name: Identifier
			token:  "QuickSort"
		parameterName: Identifier
			token:  "a"
		varDeclarations: List
		statements: List
			[0]: Print
				argument: MethodCall
					receiver: Allocation
						className: Identifier
							token:  "QS"
					methodName: Identifier
						token:  "Start"
					arguments: List
						[0]: IntLiteral
							token:  "10"
	classes: List
		[0]: Class
			name: Identifier
				token:  "QS"
			varDeclarations: List
				[0]: VarDeclaration
					type: IntType
					identifier: Identifier
						token:  "number"
				[1]: VarDeclaration
					type: IntType
					identifier: Identifier
						token:  "size"
			methodDeclarations: List
				[0]: Method
					returnType: IntType
					name: Identifier
						token:  "Start"
					parameters: List
						[0]: Parameter
							type: IntType
							name: Identifier
								token:  "sz"
					varDeclarations: List
						[0]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "aux01"
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "aux01"
							right: MethodCall
								receiver: This
								methodName: Identifier
									token:  "Init"
								arguments: List
									[0]: Identifier
										token:  "sz"
						[1]: Assign
							identifier: Identifier
								token:  "aux01"
							right: MethodCall
								receiver: This
								methodName: Identifier
									token:  "Print"
								arguments: List
						[2]: Print
							argument: IntLiteral
								token:  "9999"
						[3]: Assign
							identifier: Identifier
								token:  "aux01"
							right: Minus
								operand1: Identifier
									token:  "size"
								operand2: IntLiteral
									token:  "1"
						[4]: Assign
							identifier: Identifier
								token:  "aux01"
							right: MethodCall
								receiver: This
								methodName: Identifier
									token:  "Sort"
								arguments: List
									[0]: IntLiteral
										token:  "0"
									[1]: Identifier
										token:  "aux01"
						[5]: Assign
							identifier: Identifier
								token:  "aux01"
							right: MethodCall
								receiver: This
								methodName: Identifier
									token:  "Print"
								arguments: List
					returnExpression: IntLiteral
						token:  "0"
				[1]: Method
					returnType: IntType
					name: Identifier
						token:  "Sort"
					parameters: List
						[0]: Parameter
							type: IntType
							name: Identifier
								token:  "left"
						[1]: Parameter
							type: IntType
							name: Identifier
								token:  "right"
					varDeclarations: List
						[0]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "v"
						[1]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "i"
						[2]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "j"
						[3]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "nt"
						[4]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "t"
						[5]: VarDeclaration
							type: BooleanType
							identifier: Identifier
								token:  "cont01"
						[6]: VarDeclaration
							type: BooleanType
							identifier: Identifier
								token:  "cont02"
						[7]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "aux03"
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "t"
							right: IntLiteral
								token:  "0"
						[1]: If
							condition: LessThan
								operand1: Identifier
									token:  "left"
								operand2: Identifier
									token:  "right"
							ifStatement: Block
								statements: List
									[0]: Assign
										identifier: Identifier
											token:  "v"
										right: ArrayLookup
											array: Identifier
												token:  "number"
											index: Identifier
												token:  "right"
									[1]: Assign
										identifier: Identifier
											token:  "i"
										right: Minus
											operand1: Identifier
												token:  "left"
											operand2: IntLiteral
												token:  "1"
									[2]: Assign
										identifier: Identifier
											token:  "j"
										right: Identifier
											token:  "right"
									[3]: Assign
										identifier: Identifier
											token:  "cont01"
										right: TrueLiteral
									[4]: While
										condition: Identifier
											token:  "cont01"
										body: Block
											statements: List
												[0]: Assign
													identifier: Identifier
														token:  "cont02"
													right: TrueLiteral
												[1]: While
													condition: Identifier
														token:  "cont02"
													body: Block
														statements: List
															[0]: Assign
																identifier: Identifier
																	token:  "i"
																right: Plus
																	operand1: Identifier
																		token:  "i"
																	operand2: IntLiteral
																		token:  "1"
															[1]: Assign
																identifier: Identifier
																	token:  "aux03"
																right: ArrayLookup
																	array: Identifier
																		token:  "number"
																	index: Identifier
																		token:  "i"
															[2]: If
																condition: Not
																	operand: LessThan
																		operand1: Identifier
																			token:  "aux03"
																		operand2: Identifier
																			token:  "v"
																ifStatement: Assign
																	identifier: Identifier
																		token:  "cont02"
																	right: FalseLiteral
																elseStatement: Assign
																	identifier: Identifier
																		token:  "cont02"
																	right: TrueLiteral
												[2]: Assign
													identifier: Identifier
														token:  "cont02"
													right: TrueLiteral
												[3]: While
													condition: Identifier
														token:  "cont02"
													body: Block
														statements: List
															[0]: Assign
																identifier: Identifier
																	token:  "j"
																right: Minus
																	operand1: Identifier
																		token:  "j"
																	operand2: IntLiteral
																		token:  "1"
															[1]: Assign
																identifier: Identifier
																	token:  "aux03"
																right: ArrayLookup
																	array: Identifier
																		token:  "number"
																	index: Identifier
																		token:  "j"
															[2]: If
																condition: Not
																	operand: LessThan
																		operand1: Identifier
																			token:  "v"
																		operand2: Identifier
																			token:  "aux03"
																ifStatement: Assign
																	identifier: Identifier
																		token:  "cont02"
																	right: FalseLiteral
																elseStatement: Assign
																	identifier: Identifier
																		token:  "cont02"
																	right: TrueLiteral
												[4]: Assign
													identifier: Identifier
														token:  "t"
													right: ArrayLookup
														array: Identifier
															token:  "number"
														index: Identifier
															token:  "i"
												[5]: ArrayAssign
													array: Identifier
														token:  "number"
													index: Identifier
														token:  "i"
													right: ArrayLookup
														array: Identifier
															token:  "number"
														index: Identifier
															token:  "j"
												[6]: ArrayAssign
													array: Identifier
														token:  "number"
													index: Identifier
														token:  "j"
													right: Identifier
														token:  "t"
												[7]: If
													condition: LessThan
														operand1: Identifier
															token:  "j"
														operand2: Plus
															operand1: Identifier
																token:  "i"
															operand2: IntLiteral
																token:  "1"
													ifStatement: Assign
														identifier: Identifier
															token:  "cont01"
														right: FalseLiteral
													elseStatement: Assign
														identifier: Identifier
															token:  "cont01"
														right: TrueLiteral
									[5]: ArrayAssign
										array: Identifier
											token:  "number"
										index: Identifier
											token:  "j"
										right: ArrayLookup
											array: Identifier
												token:  "number"
											index: Identifier
												token:  "i"
									[6]: ArrayAssign
										array: Identifier
											token:  "number"
										index: Identifier
											token:  "i"
										right: ArrayLookup
											array: Identifier
												token:  "number"
											index: Identifier
												token:  "right"
									[7]: ArrayAssign
										array: Identifier
											token:  "number"
										index: Identifier
											token:  "right"
										right: Identifier
											token:  "t"
									[8]: Assign
										identifier: Identifier
											token:  "nt"
										right: MethodCall
											receiver: This
											methodName: Identifier
												token:  "Sort"
											arguments: List
												[0]: Identifier
													token:  "left"
												[1]: Minus
													operand1: Identifier
														token:  "i"
													operand2: IntLiteral
														token:  "1"
									[9]: Assign
										identifier: Identifier
											token:  "nt"
										right: MethodCall
											receiver: This
											methodName: Identifier
												token:  "Sort"
											arguments: List
												[0]: Plus
													operand1: Identifier
														token:  "i"
													operand2: IntLiteral
														token:  "1"
												[1]: Identifier
													token:  "right"
							elseStatement: Assign
								identifier: Identifier
									token:  "nt"
								right: IntLiteral
									token:  "0"
					returnExpression: IntLiteral
						token:  "0"
				[2]: Method
					returnType: IntType
					name: Identifier
						token:  "Print"
					parameters: List
					varDeclarations: List
						[0]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "j"
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "j"
							right: IntLiteral
								token:  "0"
						[1]: While
							condition: LessThan
								operand1: Identifier
									token:  "j"
								operand2: Identifier
									token:  "size"
							body: Block
								statements: List
									[0]: Print
										argument: ArrayLookup
											array: Identifier
												token:  "number"
											index: Identifier
												token:  "j"
									[1]: Assign
										identifier: Identifier
											token:  "j"
										right: Plus
											operand1: Identifier
												token:  "j"
											operand2: IntLiteral
												token:  "1"
					returnExpression: IntLiteral
						token:  "0"
				[3]: Method
					returnType: IntType
					name: Identifier
						token:  "Init"
					parameters: List
						[0]: Parameter
							type: IntType
							name: Identifier
								token:  "sz"
					varDeclarations: List
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "size"
							right: Identifier
								token:  "sz"
						[1]: Assign
							identifier: Identifier
								token:  "number"
							right: ArrayAllocation
								expression: Identifier
									token:  "sz"
						[2]: ArrayAssign
							array: Identifier
								token:  "number"
							index: IntLiteral
								token:  "0"
							right: IntLiteral
								token:  "20"
						[3]: ArrayAssign
							array: Identifier
								token:  "number"
							index: IntLiteral
								token:  "1"
							right: IntLiteral
								token:  "7"
						[4]: ArrayAssign
							array: Identifier
								token:  "number"
							index: IntLiteral
								token:  "2"
							right: IntLiteral
								token:  "12"
						[5]: ArrayAssign
							array: Identifier
								token:  "number"
							index: IntLiteral
								token:  "3"
							right: IntLiteral
								token:  "18"
						[6]: ArrayAssign
							array: Identifier
								token:  "number"
							index: IntLiteral
								token:  "4"
							right: IntLiteral
								token:  "2"
						[7]: ArrayAssign
							array: Identifier
								token:  "number"
							index: IntLiteral
								token:  "5"
							right: IntLiteral
								token:  "11"
						[8]: ArrayAssign
							array: Identifier
								token:  "number"
							index: IntLiteral
								token:  "6"
							right: IntLiteral
								token:  "6"
						[9]: ArrayAssign
							array: Identifier
								token:  "number"
							index: IntLiteral
								token:  "7"
							right: IntLiteral
								token:  "9"
						[10]: ArrayAssign
							array: Identifier
								token:  "number"
							index: IntLiteral
								token:  "8"
							right: IntLiteral
								token:  "19"
						[11]: ArrayAssign
							array: Identifier
								token:  "number"
							index: IntLiteral
								token:  "9"
							right: IntLiteral
								token:  "5"
					returnExpression: IntLiteral
						token:  "0"
