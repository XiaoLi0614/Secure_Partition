class Timer__closure__2 : public x10::lang::Value {
    public:
    
    static x10::lang::Fun_0_1<x10_int, x10_double>::itable<Timer__closure__2> _itable;
    static x10aux::itable_entry _itables[2];
    
    virtual x10aux::itable_entry* _getITables() { return _itables; }
    
    // closure body
    x10_double apply(x10_int id2) {
        
        //#line 22 "/media/MOHSENHD/1.Works/3.Research/0.Research/2.Plasma/2.Project/Project/src/x10/translated/hand/mapreduce/generic/MapReduceLauncher.x10"
        return 0.0;
        
    }
    
    // captured environment
    
    x10aux::serialization_id_t _get_serialization_id() {
        return _serialization_id;
    }
    
    void _serialize_body(x10aux::serialization_buffer &buf, x10aux::addr_map& m) {
        
    }
    
    template<class __T> static x10aux::ref<__T> _deserialize(x10aux::deserialization_buffer &buf) {
        x10aux::ref<Timer__closure__2> this_ = new (x10aux::alloc<Timer__closure__2>()) Timer__closure__2(x10aux::SERIALIZATION_MARKER());
        return this_;
    }
    
    Timer__closure__2(x10aux::SERIALIZATION_MARKER) { }
    
    Timer__closure__2() {
        
    }
    
    static const x10aux::serialization_id_t _serialization_id;
    
    static const x10aux::RuntimeType* getRTT() { return x10aux::getRTT<x10::lang::Fun_0_1<x10_int, x10_double> >(); }
    virtual const x10aux::RuntimeType *_type() const { return x10aux::getRTT<x10::lang::Fun_0_1<x10_int, x10_double> >(); }
    
    x10aux::ref<x10::lang::String> toString() {
        return x10::lang::String::Lit("/media/MOHSENHD/1.Works/3.Research/0.Research/2.Plasma/2.Project/Project/src/x10/translatedbenchs/hand/mapreduce/generic/MapReduceLauncher.x10:22");
    }

};

x10::lang::Fun_0_1<x10_int, x10_double>::itable<Timer__closure__2>Timer__closure__2::_itable(&Timer__closure__2::apply);x10aux::itable_entry Timer__closure__2::_itables[2] = {x10aux::itable_entry(&x10::lang::Fun_0_1<x10_int, x10_double>::rtt, &Timer__closure__2::_itable),x10aux::itable_entry(NULL, NULL)};
const x10aux::serialization_id_t Timer__closure__2::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Timer__closure__2::_deserialize<x10::lang::Ref>);

class Timer__closure__1 : public x10::lang::Value {
    public:
    
    static x10::lang::Fun_0_1<x10_int, x10_double>::itable<Timer__closure__1> _itable;
    static x10aux::itable_entry _itables[2];
    
    virtual x10aux::itable_entry* _getITables() { return _itables; }
    
    // closure body
    x10_double apply(x10_int id1) {
        
        //#line 21 "/media/MOHSENHD/1.Works/3.Research/0.Research/2.Plasma/2.Project/Project/src/x10/translated/hand/mapreduce/generic/MapReduceLauncher.x10"
        return 0.0;
        
    }
    
    // captured environment
    
    x10aux::serialization_id_t _get_serialization_id() {
        return _serialization_id;
    }
    
    void _serialize_body(x10aux::serialization_buffer &buf, x10aux::addr_map& m) {
        
    }
    
    template<class __T> static x10aux::ref<__T> _deserialize(x10aux::deserialization_buffer &buf) {
        x10aux::ref<Timer__closure__1> this_ = new (x10aux::alloc<Timer__closure__1>()) Timer__closure__1(x10aux::SERIALIZATION_MARKER());
        return this_;
    }
    
    Timer__closure__1(x10aux::SERIALIZATION_MARKER) { }
    
    Timer__closure__1() {
        
    }
    
    static const x10aux::serialization_id_t _serialization_id;
    
    static const x10aux::RuntimeType* getRTT() { return x10aux::getRTT<x10::lang::Fun_0_1<x10_int, x10_double> >(); }
    virtual const x10aux::RuntimeType *_type() const { return x10aux::getRTT<x10::lang::Fun_0_1<x10_int, x10_double> >(); }
    
    x10aux::ref<x10::lang::String> toString() {
        return x10::lang::String::Lit("/media/MOHSENHD/1.Works/3.Research/0.Research/2.Plasma/2.Project/Project/src/x10/translatedbenchs/hand/mapreduce/generic/MapReduceLauncher.x10:21");
    }

};

x10::lang::Fun_0_1<x10_int, x10_double>::itable<Timer__closure__1>Timer__closure__1::_itable(&Timer__closure__1::apply);x10aux::itable_entry Timer__closure__1::_itables[2] = {x10aux::itable_entry(&x10::lang::Fun_0_1<x10_int, x10_double>::rtt, &Timer__closure__1::_itable),x10aux::itable_entry(NULL, NULL)};
const x10aux::serialization_id_t Timer__closure__1::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Timer__closure__1::_deserialize<x10::lang::Ref>);

class Timer__closure__0 : public x10::lang::Value {
    public:
    
    static x10::lang::Fun_0_1<x10_int, x10_double>::itable<Timer__closure__0> _itable;
    static x10aux::itable_entry _itables[2];
    
    virtual x10aux::itable_entry* _getITables() { return _itables; }
    
    // closure body
    x10_double apply(x10_int id0) {
        
        //#line 20 "/media/MOHSENHD/1.Works/3.Research/0.Research/2.Plasma/2.Project/Project/src/x10/translated/hand/mapreduce/generic/MapReduceLauncher.x10"
        return 0.0;
        
    }
    
    // captured environment
    
    x10aux::serialization_id_t _get_serialization_id() {
        return _serialization_id;
    }
    
    void _serialize_body(x10aux::serialization_buffer &buf, x10aux::addr_map& m) {
        
    }
    
    template<class __T> static x10aux::ref<__T> _deserialize(x10aux::deserialization_buffer &buf) {
        x10aux::ref<Timer__closure__0> this_ = new (x10aux::alloc<Timer__closure__0>()) Timer__closure__0(x10aux::SERIALIZATION_MARKER());
        return this_;
    }
    
    Timer__closure__0(x10aux::SERIALIZATION_MARKER) { }
    
    Timer__closure__0() {
        
    }
    
    static const x10aux::serialization_id_t _serialization_id;
    
    static const x10aux::RuntimeType* getRTT() { return x10aux::getRTT<x10::lang::Fun_0_1<x10_int, x10_double> >(); }
    virtual const x10aux::RuntimeType *_type() const { return x10aux::getRTT<x10::lang::Fun_0_1<x10_int, x10_double> >(); }
    
    x10aux::ref<x10::lang::String> toString() {
        return x10::lang::String::Lit("/media/MOHSENHD/1.Works/3.Research/0.Research/2.Plasma/2.Project/Project/src/x10/translatedbenchs/hand/mapreduce/generic/MapReduceLauncher.x10:20");
    }

};

x10::lang::Fun_0_1<x10_int, x10_double>::itable<Timer__closure__0>Timer__closure__0::_itable(&Timer__closure__0::apply);x10aux::itable_entry Timer__closure__0::_itables[2] = {x10aux::itable_entry(&x10::lang::Fun_0_1<x10_int, x10_double>::rtt, &Timer__closure__0::_itable),x10aux::itable_entry(NULL, NULL)};
const x10aux::serialization_id_t Timer__closure__0::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Timer__closure__0::_deserialize<x10::lang::Ref>);


extern "C" { const char* LNMAP__Timer_inc = "N{\"Timer.inc\"} F{0:\"/media/MOHSENHD/1.Works/3.Research/0.Research/2.Plasma/2.Project/Project/src/x10/translatedbenchs/hand/mapreduce/generic/MapReduceLauncher.x10\",} L{13->0:22,15->0:22,} M{}"; }
