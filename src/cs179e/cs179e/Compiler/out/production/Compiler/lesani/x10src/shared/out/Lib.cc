#include <Lib.h>


#include "Lib.inc"

void Lib::_instance_init() {
    _I_("Doing initialisation for class: Lib");
    
}


//#line 6 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<x10::lang::NullType> Lib::f() {
    
    //#line 7 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return x10aux::null;
    
}

//#line 20 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
void Lib::error(x10aux::ref<x10::lang::String> s) {
    
    //#line 21 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(x10::io::Console::FMGL(OUT__get)())->x10::io::Printer::println(
      x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Any> >(s));
    
    //#line 22 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Throw_c
    x10aux::throwException(x10aux::nullCheck(x10::lang::RuntimeException::_make()));
}

//#line 39 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::eq(x10_boolean x, x10_boolean y) {
    
    //#line 40 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return (x10aux::struct_equals(x, y));
    
}

//#line 44 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10aux::ref<BooleanMatrix> x, x10aux::ref<BooleanMatrix> y) {
    
    //#line 45 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->FMGL(n), x10aux::nullCheck(y)->
                                                                  FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m))))) {
        
        //#line 46 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 48 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 49 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 51 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 52 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__0>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__0)))Lib__closure__0(x, y)))));
    
    //#line 60 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 65 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10_boolean x,
                                   x10aux::ref<BooleanMatrix> y) {
    
    //#line 66 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 67 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 69 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 70 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__1>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__1)))Lib__closure__1(x, y)))));
    
    //#line 78 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 81 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10aux::ref<BooleanMatrix> x,
                                   x10_boolean y) {
    
    //#line 82 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 83 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 85 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 86 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__2>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__2)))Lib__closure__2(x, y)))));
    
    //#line 95 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 102 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::neq(x10_boolean x, x10_boolean y) {
    
    //#line 103 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return (!x10aux::struct_equals(x, y));
    
}

//#line 107 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10aux::ref<BooleanMatrix> x,
                                    x10aux::ref<BooleanMatrix> y) {
    
    //#line 108 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 109 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 111 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 112 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 114 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 115 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__3>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__3)))Lib__closure__3(x, y)))));
    
    //#line 123 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 128 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10_boolean x,
                                    x10aux::ref<BooleanMatrix> y) {
    
    //#line 129 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 130 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 132 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 133 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__4>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__4)))Lib__closure__4(x, y)))));
    
    //#line 141 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 144 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10aux::ref<BooleanMatrix> x,
                                    x10_boolean y) {
    
    //#line 145 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 146 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 148 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 149 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__5>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__5)))Lib__closure__5(x, y)))));
    
    //#line 158 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 166 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::_kwd__not(x10_boolean x) {
    
    //#line 167 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return (!(x));
    
}

//#line 169 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__not(
  x10aux::ref<BooleanMatrix> x) {
    
    //#line 170 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 171 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 173 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 174 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__6>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__6)))Lib__closure__6(x)))));
    
    //#line 180 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 185 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::minus(x10_boolean x) {
    
    //#line 186 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return x ? (x10_int)(((x10_int)-1)) : (x10_int)(((x10_int)0));
    
}

//#line 189 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::minus(x10aux::ref<BooleanMatrix> x) {
    
    //#line 190 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 191 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 193 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 194 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__7>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__7)))Lib__closure__7(x)))));
    
    //#line 200 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 206 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::times(x10_boolean a, x10_boolean b) {
    
    //#line 207 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return (a && b) ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
}

//#line 210 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::times(x10aux::ref<BooleanMatrix> a,
                                  x10aux::ref<BooleanMatrix> b) {
    
    //#line 211 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int rowsA = x10aux::nullCheck(a)->
                      FMGL(n);
    
    //#line 212 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int columnsA = x10aux::nullCheck(a)->
                         FMGL(m);
    
    //#line 213 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int rowsB = x10aux::nullCheck(b)->
                      FMGL(n);
    
    //#line 214 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int columnsB = x10aux::nullCheck(b)->
                         FMGL(m);
    
    //#line 216 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(columnsA,
                                rowsB))) {
        
        //#line 217 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(x10aux::string_utils::lit("At matrix multiplication: Dimension mismatch."));
    }
    
    //#line 219 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((rowsA) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((columnsB) - (((x10_int)1))))));
    
    //#line 220 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__8>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__8)))Lib__closure__8(columnsA, a, b)))));
    
    //#line 233 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, rowsA,
                            columnsB);
    
}

//#line 235 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::times(x10_boolean a,
                                  x10aux::ref<BooleanMatrix> b) {
    
    //#line 236 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(b)->FMGL(n);
    
    //#line 237 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(b)->FMGL(m);
    
    //#line 239 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 240 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__9>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__9)))Lib__closure__9(a, b)))));
    
    //#line 250 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 252 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::times(x10aux::ref<BooleanMatrix> a,
                                  x10_boolean b) {
    
    //#line 253 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(a)->FMGL(n);
    
    //#line 254 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(a)->FMGL(m);
    
    //#line 256 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 257 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__10>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__10)))Lib__closure__10(a, b)))));
    
    //#line 267 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 273 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
void Lib::disp(x10aux::ref<x10::lang::String> x) {
    
    //#line 274 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(x10::io::Console::FMGL(OUT__get)())->x10::io::Printer::println(
      x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Any> >(x));
}

//#line 288 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<Tuple2<x10_int, x10_int> > Lib::size(
  x10aux::ref<IntMatrix> x) {
    
    //#line 289 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return Tuple2<x10_int, x10_int>::_make(x10aux::nullCheck(x)->
                                             FMGL(n),
                                           x10aux::nullCheck(x)->
                                             FMGL(m));
    
}

//#line 293 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
void Lib::disp(x10_int x) {
    
    //#line 294 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(x10::io::Console::FMGL(OUT__get)())->x10::io::Printer::println(
      x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Any> >(x));
}

//#line 297 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
void Lib::disp(x10aux::ref<IntMatrix> x) {
    
    //#line 298 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(x10::io::Console::FMGL(OUT__get)())->x10::io::Printer::println(
      x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Any> >(x));
}

//#line 301 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::tupleToVector(
  x10aux::ref<Tuple2<x10_int, x10_int> > tuple) {
    
    //#line 302 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(((x10_int)2));
    
    //#line 303 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_int>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_1),
      ((x10_int)0));
    
    //#line 304 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_int>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_2),
      ((x10_int)1));
    
    //#line 305 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array);
    
}

//#line 307 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::tupleToVector(
  x10aux::ref<Tuple3<x10_int, x10_int, x10_int> > tuple) {
    
    //#line 308 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(((x10_int)3));
    
    //#line 309 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_int>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_1),
      ((x10_int)0));
    
    //#line 310 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_int>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_2),
      ((x10_int)1));
    
    //#line 311 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_int>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_3),
      ((x10_int)2));
    
    //#line 312 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array);
    
}

//#line 314 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::tupleToVector(
  x10aux::ref<Tuple4<x10_int, x10_int, x10_int, x10_int> > tuple) {
    
    //#line 315 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(((x10_int)4));
    
    //#line 316 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_int>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_1),
      ((x10_int)0));
    
    //#line 317 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_int>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_2),
      ((x10_int)1));
    
    //#line 318 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_int>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_3),
      ((x10_int)2));
    
    //#line 319 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_int>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_4),
      ((x10_int)3));
    
    //#line 320 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array);
    
}

//#line 322 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::tupleToVector(
  x10aux::ref<Tuple5<x10_int, x10_int, x10_int, x10_int, x10_int> > tuple) {
    
    //#line 323 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(((x10_int)5));
    
    //#line 324 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_int>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_1),
      ((x10_int)0));
    
    //#line 325 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_int>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_2),
      ((x10_int)1));
    
    //#line 326 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_int>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_3),
      ((x10_int)2));
    
    //#line 327 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_int>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_4),
      ((x10_int)3));
    
    //#line 328 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_int>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_5),
      ((x10_int)4));
    
    //#line 329 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array);
    
}

//#line 339 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<Tuple2<x10_int, x10_int> > Lib::size(
  x10aux::ref<DoubleMatrix> x) {
    
    //#line 340 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return Tuple2<x10_int, x10_int>::_make(x10aux::nullCheck(x)->
                                             FMGL(n),
                                           x10aux::nullCheck(x)->
                                             FMGL(m));
    
}

//#line 344 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
void Lib::disp(x10_double x) {
    
    //#line 345 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(x10::io::Console::FMGL(OUT__get)())->x10::io::Printer::println(
      x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Any> >(x));
}

//#line 348 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
void Lib::disp(x10aux::ref<DoubleMatrix> x) {
    
    //#line 349 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(x10::io::Console::FMGL(OUT__get)())->x10::io::Printer::println(
      x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Any> >(x));
}

//#line 352 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::tupleToVector(
  x10aux::ref<Tuple2<x10_double, x10_double> > tuple) {
    
    //#line 353 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(((x10_int)2));
    
    //#line 354 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_double>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_1),
      ((x10_int)0));
    
    //#line 355 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_double>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_2),
      ((x10_int)1));
    
    //#line 356 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array);
    
}

//#line 358 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::tupleToVector(
  x10aux::ref<Tuple3<x10_double, x10_double, x10_double> > tuple) {
    
    //#line 359 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(((x10_int)3));
    
    //#line 360 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_double>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_1),
      ((x10_int)0));
    
    //#line 361 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_double>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_2),
      ((x10_int)1));
    
    //#line 362 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_double>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_3),
      ((x10_int)2));
    
    //#line 363 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array);
    
}

//#line 365 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::tupleToVector(
  x10aux::ref<Tuple4<x10_double, x10_double, x10_double, x10_double> > tuple) {
    
    //#line 366 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(((x10_int)4));
    
    //#line 367 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_double>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_1),
      ((x10_int)0));
    
    //#line 368 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_double>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_2),
      ((x10_int)1));
    
    //#line 369 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_double>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_3),
      ((x10_int)2));
    
    //#line 370 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_double>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_4),
      ((x10_int)3));
    
    //#line 371 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array);
    
}

//#line 373 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::tupleToVector(
  x10aux::ref<Tuple5<x10_double, x10_double, x10_double, x10_double, x10_double> > tuple) {
    
    //#line 374 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(((x10_int)5));
    
    //#line 375 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_double>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_1),
      ((x10_int)0));
    
    //#line 376 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_double>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_2),
      ((x10_int)1));
    
    //#line 377 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_double>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_3),
      ((x10_int)2));
    
    //#line 378 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_double>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_4),
      ((x10_int)3));
    
    //#line 379 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_double>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_5),
      ((x10_int)4));
    
    //#line 380 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array);
    
}

//#line 390 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<Tuple2<x10_int, x10_int> > Lib::size(
  x10aux::ref<BooleanMatrix> x) {
    
    //#line 391 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return Tuple2<x10_int, x10_int>::_make(x10aux::nullCheck(x)->
                                             FMGL(n),
                                           x10aux::nullCheck(x)->
                                             FMGL(m));
    
}

//#line 395 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
void Lib::disp(x10_boolean x) {
    
    //#line 396 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(x10::io::Console::FMGL(OUT__get)())->x10::io::Printer::println(
      x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Any> >(x));
}

//#line 399 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
void Lib::disp(x10aux::ref<BooleanMatrix> x) {
    
    //#line 400 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(x10::io::Console::FMGL(OUT__get)())->x10::io::Printer::println(
      x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Any> >(x));
}

//#line 403 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::tupleToVector(
  x10aux::ref<Tuple2<x10_boolean, x10_boolean> > tuple) {
    
    //#line 404 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(((x10_int)2));
    
    //#line 405 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_boolean>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_1),
      ((x10_int)0));
    
    //#line 406 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_boolean>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_2),
      ((x10_int)1));
    
    //#line 407 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array);
    
}

//#line 409 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::tupleToVector(
  x10aux::ref<Tuple3<x10_boolean, x10_boolean, x10_boolean> > tuple) {
    
    //#line 410 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(((x10_int)3));
    
    //#line 411 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_boolean>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_1),
      ((x10_int)0));
    
    //#line 412 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_boolean>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_2),
      ((x10_int)1));
    
    //#line 413 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_boolean>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_3),
      ((x10_int)2));
    
    //#line 414 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array);
    
}

//#line 416 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::tupleToVector(
  x10aux::ref<Tuple4<x10_boolean, x10_boolean, x10_boolean, x10_boolean> > tuple) {
    
    //#line 417 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(((x10_int)4));
    
    //#line 418 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_boolean>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_1),
      ((x10_int)0));
    
    //#line 419 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_boolean>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_2),
      ((x10_int)1));
    
    //#line 420 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_boolean>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_3),
      ((x10_int)2));
    
    //#line 421 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_boolean>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_4),
      ((x10_int)3));
    
    //#line 422 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array);
    
}

//#line 424 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::tupleToVector(
  x10aux::ref<Tuple5<x10_boolean, x10_boolean, x10_boolean, x10_boolean, x10_boolean> > tuple) {
    
    //#line 425 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(((x10_int)5));
    
    //#line 426 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_boolean>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_1),
      ((x10_int)0));
    
    //#line 427 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_boolean>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_2),
      ((x10_int)1));
    
    //#line 428 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_boolean>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_3),
      ((x10_int)2));
    
    //#line 429 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_boolean>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_4),
      ((x10_int)3));
    
    //#line 430 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
    x10aux::nullCheck(array)->x10::array::Array<x10_boolean>::set(
      x10aux::nullCheck(tuple)->
        FMGL(_5),
      ((x10_int)4));
    
    //#line 431 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array);
    
}

//#line 440 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::logical(x10_int x) {
    
    //#line 441 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return (!x10aux::struct_equals(x, ((x10_int)0)));
    
}

//#line 444 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::logical(x10aux::ref<IntMatrix> x) {
    
    //#line 445 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 446 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 448 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 449 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__11>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__11)))Lib__closure__11(x)))));
    
    //#line 455 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 461 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::_kwd__not(x10_int x) {
    
    //#line 462 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return (!((!x10aux::struct_equals(x, ((x10_int)0)))));
    
}

//#line 465 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__not(
  x10aux::ref<IntMatrix> x) {
    
    //#line 466 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 467 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 469 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 470 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__12>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__12)))Lib__closure__12(x)))));
    
    //#line 476 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 481 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::minus(x10_int x) {
    
    //#line 482 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x10_int) -(x));
    
}

//#line 485 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::minus(x10aux::ref<IntMatrix> x) {
    
    //#line 486 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 487 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 489 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 490 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__13>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__13)))Lib__closure__13(x)))));
    
    //#line 496 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 501 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::times(x10_boolean a, x10_int b) {
    
    //#line 502 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return a ? (x10_int)(b) : (x10_int)(((x10_int)0));
    
}

//#line 504 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::times(x10_int a, x10_boolean b) {
    
    //#line 505 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return b ? (x10_int)(a) : (x10_int)(((x10_int)0));
    
}

//#line 507 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::times(x10aux::ref<BooleanMatrix> a,
                                  x10aux::ref<IntMatrix> b) {
    
    //#line 508 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int rowsA = x10aux::nullCheck(a)->
                      FMGL(n);
    
    //#line 509 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int columnsA = x10aux::nullCheck(a)->
                         FMGL(m);
    
    //#line 510 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int rowsB = x10aux::nullCheck(b)->
                      FMGL(n);
    
    //#line 511 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int columnsB = x10aux::nullCheck(b)->
                         FMGL(m);
    
    //#line 513 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(columnsA,
                                rowsB))) {
        
        //#line 514 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(x10aux::string_utils::lit("At matrix multiplication: Dimension mismatch."));
    }
    
    //#line 516 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((rowsA) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((columnsB) - (((x10_int)1))))));
    
    //#line 517 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__14>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__14)))Lib__closure__14(columnsA, a, b)))));
    
    //#line 531 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, rowsA,
                            columnsB);
    
}

//#line 533 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::times(x10aux::ref<IntMatrix> a,
                                  x10aux::ref<BooleanMatrix> b) {
    
    //#line 534 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int rowsA = x10aux::nullCheck(a)->
                      FMGL(n);
    
    //#line 535 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int columnsA = x10aux::nullCheck(a)->
                         FMGL(m);
    
    //#line 536 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int rowsB = x10aux::nullCheck(b)->
                      FMGL(n);
    
    //#line 537 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int columnsB = x10aux::nullCheck(b)->
                         FMGL(m);
    
    //#line 539 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(columnsA,
                                rowsB))) {
        
        //#line 540 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(x10aux::string_utils::lit("At matrix multiplication: Dimension mismatch."));
    }
    
    //#line 542 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((rowsA) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((columnsB) - (((x10_int)1))))));
    
    //#line 543 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__15>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__15)))Lib__closure__15(columnsA, b, a)))));
    
    //#line 557 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, rowsA,
                            columnsB);
    
}

//#line 559 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::times(x10aux::ref<BooleanMatrix> a,
                                  x10_int b) {
    
    //#line 560 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(a)->FMGL(n);
    
    //#line 561 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(a)->FMGL(m);
    
    //#line 563 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 564 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__16>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__16)))Lib__closure__16(a, b)))));
    
    //#line 574 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 576 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::times(x10aux::ref<IntMatrix> a,
                                  x10_boolean b) {
    
    //#line 577 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(a)->FMGL(n);
    
    //#line 578 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(a)->FMGL(m);
    
    //#line 580 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 581 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__17>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__17)))Lib__closure__17(b, a)))));
    
    //#line 591 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 593 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::times(x10_boolean a,
                                  x10aux::ref<IntMatrix> b) {
    
    //#line 594 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(b)->FMGL(n);
    
    //#line 595 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(b)->FMGL(m);
    
    //#line 597 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 598 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__18>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__18)))Lib__closure__18(a, b)))));
    
    //#line 608 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 610 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::times(x10_int a,
                                  x10aux::ref<BooleanMatrix> b) {
    
    //#line 611 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(b)->FMGL(n);
    
    //#line 612 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(b)->FMGL(m);
    
    //#line 614 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 615 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__19>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__19)))Lib__closure__19(b, a)))));
    
    //#line 625 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 637 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::logical(x10_double x) {
    
    //#line 638 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return (!x10aux::struct_equals(x, ((x10_double) (((x10_int)0)))));
    
}

//#line 641 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::logical(x10aux::ref<DoubleMatrix> x) {
    
    //#line 642 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 643 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 645 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 646 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__20>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__20)))Lib__closure__20(x)))));
    
    //#line 652 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 658 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::_kwd__not(x10_double x) {
    
    //#line 659 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return (!((!x10aux::struct_equals(x, ((x10_double) (((x10_int)0)))))));
    
}

//#line 662 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__not(
  x10aux::ref<DoubleMatrix> x) {
    
    //#line 663 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 664 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 666 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 667 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__21>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__21)))Lib__closure__21(x)))));
    
    //#line 673 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 678 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::minus(x10_double x) {
    
    //#line 679 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return (-(x));
    
}

//#line 682 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::minus(x10aux::ref<DoubleMatrix> x) {
    
    //#line 683 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 684 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 686 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 687 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__22>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__22)))Lib__closure__22(x)))));
    
    //#line 693 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 698 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::times(x10_boolean a, x10_double b) {
    
    //#line 699 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return a ? (x10_double)(b) : (x10_double)(((x10_int)0));
    
}

//#line 701 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::times(x10_double a, x10_boolean b) {
    
    //#line 702 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return b ? (x10_double)(a) : (x10_double)(((x10_int)0));
    
}

//#line 704 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::times(x10aux::ref<BooleanMatrix> a,
                                     x10aux::ref<DoubleMatrix> b) {
    
    //#line 705 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int rowsA = x10aux::nullCheck(a)->
                      FMGL(n);
    
    //#line 706 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int columnsA = x10aux::nullCheck(a)->
                         FMGL(m);
    
    //#line 707 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int rowsB = x10aux::nullCheck(b)->
                      FMGL(n);
    
    //#line 708 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int columnsB = x10aux::nullCheck(b)->
                         FMGL(m);
    
    //#line 710 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(columnsA,
                                rowsB))) {
        
        //#line 711 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(x10aux::string_utils::lit("At matrix multiplication: Dimension mismatch."));
    }
    
    //#line 713 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((rowsA) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((columnsB) - (((x10_int)1))))));
    
    //#line 714 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__23>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__23)))Lib__closure__23(columnsA, a, b)))));
    
    //#line 728 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, rowsA,
                               columnsB);
    
}

//#line 730 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::times(x10aux::ref<DoubleMatrix> a,
                                     x10aux::ref<BooleanMatrix> b) {
    
    //#line 731 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int rowsA = x10aux::nullCheck(a)->
                      FMGL(n);
    
    //#line 732 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int columnsA = x10aux::nullCheck(a)->
                         FMGL(m);
    
    //#line 733 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int rowsB = x10aux::nullCheck(b)->
                      FMGL(n);
    
    //#line 734 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int columnsB = x10aux::nullCheck(b)->
                         FMGL(m);
    
    //#line 736 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(columnsA,
                                rowsB))) {
        
        //#line 737 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(x10aux::string_utils::lit("At matrix multiplication: Dimension mismatch."));
    }
    
    //#line 739 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((rowsA) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((columnsB) - (((x10_int)1))))));
    
    //#line 740 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__24>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__24)))Lib__closure__24(columnsA, b, a)))));
    
    //#line 754 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, rowsA,
                               columnsB);
    
}

//#line 756 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::times(x10aux::ref<BooleanMatrix> a,
                                     x10_double b) {
    
    //#line 757 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(a)->FMGL(n);
    
    //#line 758 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(a)->FMGL(m);
    
    //#line 760 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 761 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__25>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__25)))Lib__closure__25(a, b)))));
    
    //#line 771 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 773 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::times(x10aux::ref<DoubleMatrix> a,
                                     x10_boolean b) {
    
    //#line 774 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(a)->FMGL(n);
    
    //#line 775 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(a)->FMGL(m);
    
    //#line 777 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 778 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__26>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__26)))Lib__closure__26(b, a)))));
    
    //#line 788 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 790 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::times(x10_boolean a,
                                     x10aux::ref<DoubleMatrix> b) {
    
    //#line 791 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(b)->FMGL(n);
    
    //#line 792 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(b)->FMGL(m);
    
    //#line 794 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 795 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__27>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__27)))Lib__closure__27(a, b)))));
    
    //#line 805 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 807 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::times(x10_double a,
                                     x10aux::ref<BooleanMatrix> b) {
    
    //#line 808 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(b)->FMGL(n);
    
    //#line 809 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(b)->FMGL(m);
    
    //#line 811 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 812 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__28>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__28)))Lib__closure__28(b, a)))));
    
    //#line 822 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 834 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::times(x10_int a, x10_int b) {
    
    //#line 835 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x10_int) ((a) * (b)));
    
}

//#line 837 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::times(x10aux::ref<IntMatrix> a,
                                  x10aux::ref<IntMatrix> b) {
    
    //#line 838 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int rowsA = x10aux::nullCheck(a)->
                      FMGL(n);
    
    //#line 839 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int columnsA = x10aux::nullCheck(a)->
                         FMGL(m);
    
    //#line 840 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int rowsB = x10aux::nullCheck(b)->
                      FMGL(n);
    
    //#line 841 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int columnsB = x10aux::nullCheck(b)->
                         FMGL(m);
    
    //#line 843 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(columnsA,
                                rowsB))) {
        
        //#line 844 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(x10aux::string_utils::lit("At matrix multiplication: Dimension mismatch."));
    }
    
    //#line 846 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((rowsA) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((columnsB) - (((x10_int)1))))));
    
    //#line 847 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__29>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__29)))Lib__closure__29(columnsA, a, b)))));
    
    //#line 861 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, rowsA,
                            columnsB);
    
}

//#line 863 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::times(x10_int a,
                                  x10aux::ref<IntMatrix> b) {
    
    //#line 864 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(b)->FMGL(n);
    
    //#line 865 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(b)->FMGL(m);
    
    //#line 867 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 868 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__30>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__30)))Lib__closure__30(a, b)))));
    
    //#line 878 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 880 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::times(x10aux::ref<IntMatrix> a,
                                  x10_int b) {
    
    //#line 881 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(a)->FMGL(n);
    
    //#line 882 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(a)->FMGL(m);
    
    //#line 884 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 885 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__31>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__31)))Lib__closure__31(a, b)))));
    
    //#line 895 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 905 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::times(x10_int a, x10_double b) {
    
    //#line 906 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((((x10_double) (a))) * (b));
    
}

//#line 908 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::times(x10aux::ref<IntMatrix> a,
                                     x10aux::ref<DoubleMatrix> b) {
    
    //#line 909 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int rowsA = x10aux::nullCheck(a)->
                      FMGL(n);
    
    //#line 910 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int columnsA = x10aux::nullCheck(a)->
                         FMGL(m);
    
    //#line 911 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int rowsB = x10aux::nullCheck(b)->
                      FMGL(n);
    
    //#line 912 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int columnsB = x10aux::nullCheck(b)->
                         FMGL(m);
    
    //#line 914 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(columnsA,
                                rowsB))) {
        
        //#line 915 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(x10aux::string_utils::lit("At matrix multiplication: Dimension mismatch."));
    }
    
    //#line 917 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((rowsA) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((columnsB) - (((x10_int)1))))));
    
    //#line 918 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__32>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__32)))Lib__closure__32(columnsA, a, b)))));
    
    //#line 932 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, rowsA,
                               columnsB);
    
}

//#line 934 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::times(x10_int a,
                                     x10aux::ref<DoubleMatrix> b) {
    
    //#line 935 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(b)->FMGL(n);
    
    //#line 936 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(b)->FMGL(m);
    
    //#line 938 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 939 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__33>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__33)))Lib__closure__33(a, b)))));
    
    //#line 949 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 951 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::times(x10aux::ref<IntMatrix> a,
                                     x10_double b) {
    
    //#line 952 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(a)->FMGL(n);
    
    //#line 953 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(a)->FMGL(m);
    
    //#line 955 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 956 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__34>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__34)))Lib__closure__34(a, b)))));
    
    //#line 966 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 976 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::times(x10_double a, x10_int b) {
    
    //#line 977 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((a) * (((x10_double) (b))));
    
}

//#line 979 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::times(x10aux::ref<DoubleMatrix> a,
                                     x10aux::ref<IntMatrix> b) {
    
    //#line 980 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int rowsA = x10aux::nullCheck(a)->
                      FMGL(n);
    
    //#line 981 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int columnsA = x10aux::nullCheck(a)->
                         FMGL(m);
    
    //#line 982 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int rowsB = x10aux::nullCheck(b)->
                      FMGL(n);
    
    //#line 983 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int columnsB = x10aux::nullCheck(b)->
                         FMGL(m);
    
    //#line 985 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(columnsA,
                                rowsB))) {
        
        //#line 986 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(x10aux::string_utils::lit("At matrix multiplication: Dimension mismatch."));
    }
    
    //#line 988 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((rowsA) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((columnsB) - (((x10_int)1))))));
    
    //#line 989 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__35>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__35)))Lib__closure__35(columnsA, a, b)))));
    
    //#line 1003 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, rowsA,
                               columnsB);
    
}

//#line 1005 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::times(x10_double a,
                                     x10aux::ref<IntMatrix> b) {
    
    //#line 1006 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(b)->FMGL(n);
    
    //#line 1007 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(b)->FMGL(m);
    
    //#line 1009 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1010 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__36>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__36)))Lib__closure__36(a, b)))));
    
    //#line 1020 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 1022 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::times(x10aux::ref<DoubleMatrix> a,
                                     x10_int b) {
    
    //#line 1023 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(a)->FMGL(n);
    
    //#line 1024 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(a)->FMGL(m);
    
    //#line 1026 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1027 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__37>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__37)))Lib__closure__37(a, b)))));
    
    //#line 1037 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 1047 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::times(x10_double a, x10_double b) {
    
    //#line 1048 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((a) * (b));
    
}

//#line 1050 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::times(x10aux::ref<DoubleMatrix> a,
                                     x10aux::ref<DoubleMatrix> b) {
    
    //#line 1051 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int rowsA = x10aux::nullCheck(a)->
                      FMGL(n);
    
    //#line 1052 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int columnsA = x10aux::nullCheck(a)->
                         FMGL(m);
    
    //#line 1053 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int rowsB = x10aux::nullCheck(b)->
                      FMGL(n);
    
    //#line 1054 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int columnsB = x10aux::nullCheck(b)->
                         FMGL(m);
    
    //#line 1056 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(columnsA,
                                rowsB))) {
        
        //#line 1057 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(x10aux::string_utils::lit("At matrix multiplication: Dimension mismatch."));
    }
    
    //#line 1059 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((rowsA) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((columnsB) - (((x10_int)1))))));
    
    //#line 1060 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__38>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__38)))Lib__closure__38(columnsA, a, b)))));
    
    //#line 1074 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, rowsA,
                               columnsB);
    
}

//#line 1076 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::times(x10_double a,
                                     x10aux::ref<DoubleMatrix> b) {
    
    //#line 1077 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(b)->FMGL(n);
    
    //#line 1078 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(b)->FMGL(m);
    
    //#line 1080 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1081 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__39>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__39)))Lib__closure__39(a, b)))));
    
    //#line 1091 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 1093 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::times(x10aux::ref<DoubleMatrix> a,
                                     x10_double b) {
    
    //#line 1094 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(a)->FMGL(n);
    
    //#line 1095 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(a)->FMGL(m);
    
    //#line 1097 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1098 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__40>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__40)))Lib__closure__40(a, b)))));
    
    //#line 1108 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 1122 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10aux::ref<IntMatrix> x,
                                   x10aux::ref<IntMatrix> y) {
    
    //#line 1123 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 1124 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 1126 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1127 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1129 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1130 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__41>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__41)))Lib__closure__41(x, y)))));
    
    //#line 1138 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1142 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10_int x,
                                   x10aux::ref<IntMatrix> y) {
    
    //#line 1143 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 1144 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 1146 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1147 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__42>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__42)))Lib__closure__42(x, y)))));
    
    //#line 1155 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1158 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10aux::ref<IntMatrix> x,
                                   x10_int y) {
    
    //#line 1159 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1160 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1162 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1163 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__43>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__43)))Lib__closure__43(x, y)))));
    
    //#line 1171 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1184 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10aux::ref<IntMatrix> x,
                                    x10aux::ref<IntMatrix> y) {
    
    //#line 1185 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 1186 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 1188 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1189 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1191 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1192 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__44>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__44)))Lib__closure__44(x, y)))));
    
    //#line 1200 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1204 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10_int x,
                                    x10aux::ref<IntMatrix> y) {
    
    //#line 1205 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 1206 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 1208 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1209 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__45>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__45)))Lib__closure__45(x, y)))));
    
    //#line 1217 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1220 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10aux::ref<IntMatrix> x,
                                    x10_int y) {
    
    //#line 1221 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1222 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1224 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1225 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__46>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__46)))Lib__closure__46(x, y)))));
    
    //#line 1233 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1246 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10aux::ref<IntMatrix> x,
                                   x10aux::ref<IntMatrix> y) {
    
    //#line 1247 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 1248 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 1250 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1251 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1253 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1254 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__47>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__47)))Lib__closure__47(x, y)))));
    
    //#line 1262 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1266 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10_int x,
                                   x10aux::ref<IntMatrix> y) {
    
    //#line 1267 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 1268 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 1270 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1271 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__48>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__48)))Lib__closure__48(x, y)))));
    
    //#line 1279 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1282 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10aux::ref<IntMatrix> x,
                                   x10_int y) {
    
    //#line 1283 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1284 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1286 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1287 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__49>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__49)))Lib__closure__49(x, y)))));
    
    //#line 1295 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1308 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10aux::ref<IntMatrix> x,
                                     x10aux::ref<IntMatrix> y) {
    
    //#line 1309 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 1310 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 1312 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1313 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1315 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1316 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__50>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__50)))Lib__closure__50(x, y)))));
    
    //#line 1324 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1328 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10_int x,
                                     x10aux::ref<IntMatrix> y) {
    
    //#line 1329 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 1330 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 1332 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1333 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__51>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__51)))Lib__closure__51(x, y)))));
    
    //#line 1341 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1344 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10aux::ref<IntMatrix> x,
                                     x10_int y) {
    
    //#line 1345 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1346 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1348 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1349 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__52>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__52)))Lib__closure__52(x, y)))));
    
    //#line 1357 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1370 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10aux::ref<IntMatrix> x,
                                   x10aux::ref<IntMatrix> y) {
    
    //#line 1371 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 1372 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 1374 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1375 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1377 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1378 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__53>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__53)))Lib__closure__53(x, y)))));
    
    //#line 1386 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1390 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10_int x,
                                   x10aux::ref<IntMatrix> y) {
    
    //#line 1391 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 1392 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 1394 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1395 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__54>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__54)))Lib__closure__54(x, y)))));
    
    //#line 1403 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1406 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10aux::ref<IntMatrix> x,
                                   x10_int y) {
    
    //#line 1407 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1408 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1410 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1411 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__55>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__55)))Lib__closure__55(x, y)))));
    
    //#line 1419 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1432 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gteq(x10aux::ref<IntMatrix> x,
                                     x10aux::ref<IntMatrix> y) {
    
    //#line 1433 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 1434 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 1436 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1437 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1439 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1440 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__56>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__56)))Lib__closure__56(x, y)))));
    
    //#line 1448 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1452 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gteq(x10_int x,
                                     x10aux::ref<IntMatrix> y) {
    
    //#line 1453 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 1454 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 1456 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1457 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__57>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__57)))Lib__closure__57(x, y)))));
    
    //#line 1465 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1468 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gteq(x10aux::ref<IntMatrix> x,
                                     x10_int y) {
    
    //#line 1469 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1470 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1472 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1473 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__58>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__58)))Lib__closure__58(x, y)))));
    
    //#line 1481 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1494 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10aux::ref<IntMatrix> x,
                                   x10aux::ref<DoubleMatrix> y) {
    
    //#line 1495 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 1496 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 1498 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1499 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1501 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1502 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__59>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__59)))Lib__closure__59(x, y)))));
    
    //#line 1510 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1514 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10_int x,
                                   x10aux::ref<DoubleMatrix> y) {
    
    //#line 1515 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 1516 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 1518 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1519 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__60>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__60)))Lib__closure__60(x, y)))));
    
    //#line 1527 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1530 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10aux::ref<IntMatrix> x,
                                   x10_double y) {
    
    //#line 1531 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1532 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1534 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1535 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__61>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__61)))Lib__closure__61(x, y)))));
    
    //#line 1543 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1556 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10aux::ref<IntMatrix> x,
                                    x10aux::ref<DoubleMatrix> y) {
    
    //#line 1557 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 1558 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 1560 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1561 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1563 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1564 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__62>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__62)))Lib__closure__62(x, y)))));
    
    //#line 1572 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1576 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10_int x,
                                    x10aux::ref<DoubleMatrix> y) {
    
    //#line 1577 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 1578 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 1580 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1581 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__63>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__63)))Lib__closure__63(x, y)))));
    
    //#line 1589 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1592 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10aux::ref<IntMatrix> x,
                                    x10_double y) {
    
    //#line 1593 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1594 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1596 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1597 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__64>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__64)))Lib__closure__64(x, y)))));
    
    //#line 1605 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1618 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10aux::ref<IntMatrix> x,
                                   x10aux::ref<DoubleMatrix> y) {
    
    //#line 1619 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 1620 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 1622 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1623 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1625 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1626 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__65>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__65)))Lib__closure__65(x, y)))));
    
    //#line 1634 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1638 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10_int x,
                                   x10aux::ref<DoubleMatrix> y) {
    
    //#line 1639 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 1640 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 1642 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1643 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__66>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__66)))Lib__closure__66(x, y)))));
    
    //#line 1651 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1654 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10aux::ref<IntMatrix> x,
                                   x10_double y) {
    
    //#line 1655 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1656 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1658 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1659 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__67>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__67)))Lib__closure__67(x, y)))));
    
    //#line 1667 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1680 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10aux::ref<IntMatrix> x,
                                     x10aux::ref<DoubleMatrix> y) {
    
    //#line 1681 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 1682 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 1684 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1685 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1687 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1688 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__68>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__68)))Lib__closure__68(x, y)))));
    
    //#line 1696 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1700 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10_int x,
                                     x10aux::ref<DoubleMatrix> y) {
    
    //#line 1701 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 1702 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 1704 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1705 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__69>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__69)))Lib__closure__69(x, y)))));
    
    //#line 1713 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1716 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10aux::ref<IntMatrix> x,
                                     x10_double y) {
    
    //#line 1717 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1718 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1720 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1721 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__70>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__70)))Lib__closure__70(x, y)))));
    
    //#line 1729 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1742 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10aux::ref<IntMatrix> x,
                                   x10aux::ref<DoubleMatrix> y) {
    
    //#line 1743 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 1744 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 1746 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1747 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1749 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1750 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__71>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__71)))Lib__closure__71(x, y)))));
    
    //#line 1758 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1762 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10_int x,
                                   x10aux::ref<DoubleMatrix> y) {
    
    //#line 1763 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 1764 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 1766 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1767 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__72>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__72)))Lib__closure__72(x, y)))));
    
    //#line 1775 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1778 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10aux::ref<IntMatrix> x,
                                   x10_double y) {
    
    //#line 1779 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1780 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1782 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1783 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__73>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__73)))Lib__closure__73(x, y)))));
    
    //#line 1791 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1804 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gteq(x10aux::ref<IntMatrix> x,
                                     x10aux::ref<DoubleMatrix> y) {
    
    //#line 1805 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 1806 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 1808 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1809 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1811 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1812 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__74>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__74)))Lib__closure__74(x, y)))));
    
    //#line 1820 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1824 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gteq(x10_int x,
                                     x10aux::ref<DoubleMatrix> y) {
    
    //#line 1825 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 1826 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 1828 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1829 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__75>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__75)))Lib__closure__75(x, y)))));
    
    //#line 1837 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1840 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gteq(x10aux::ref<IntMatrix> x,
                                     x10_double y) {
    
    //#line 1841 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1842 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1844 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1845 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__76>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__76)))Lib__closure__76(x, y)))));
    
    //#line 1853 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1866 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10aux::ref<DoubleMatrix> x,
                                   x10aux::ref<IntMatrix> y) {
    
    //#line 1867 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 1868 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 1870 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1871 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1873 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1874 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__77>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__77)))Lib__closure__77(x, y)))));
    
    //#line 1882 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1886 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10_double x,
                                   x10aux::ref<IntMatrix> y) {
    
    //#line 1887 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 1888 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 1890 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1891 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__78>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__78)))Lib__closure__78(x, y)))));
    
    //#line 1899 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1902 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10aux::ref<DoubleMatrix> x,
                                   x10_int y) {
    
    //#line 1903 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1904 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1906 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1907 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__79>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__79)))Lib__closure__79(x, y)))));
    
    //#line 1915 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1928 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10aux::ref<DoubleMatrix> x,
                                    x10aux::ref<IntMatrix> y) {
    
    //#line 1929 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 1930 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 1932 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1933 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1935 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1936 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__80>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__80)))Lib__closure__80(x, y)))));
    
    //#line 1944 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1948 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10_double x,
                                    x10aux::ref<IntMatrix> y) {
    
    //#line 1949 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 1950 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 1952 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1953 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__81>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__81)))Lib__closure__81(x, y)))));
    
    //#line 1961 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1964 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10aux::ref<DoubleMatrix> x,
                                    x10_int y) {
    
    //#line 1965 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1966 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1968 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1969 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__82>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__82)))Lib__closure__82(x, y)))));
    
    //#line 1977 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 1990 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10aux::ref<DoubleMatrix> x,
                                   x10aux::ref<IntMatrix> y) {
    
    //#line 1991 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 1992 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 1994 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 1995 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 1997 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 1998 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__83>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__83)))Lib__closure__83(x, y)))));
    
    //#line 2006 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2010 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10_double x,
                                   x10aux::ref<IntMatrix> y) {
    
    //#line 2011 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 2012 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 2014 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2015 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__84>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__84)))Lib__closure__84(x, y)))));
    
    //#line 2023 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2026 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10aux::ref<DoubleMatrix> x,
                                   x10_int y) {
    
    //#line 2027 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2028 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2030 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2031 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__85>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__85)))Lib__closure__85(x, y)))));
    
    //#line 2039 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2052 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10aux::ref<DoubleMatrix> x,
                                     x10aux::ref<IntMatrix> y) {
    
    //#line 2053 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 2054 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 2056 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2057 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2059 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2060 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__86>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__86)))Lib__closure__86(x, y)))));
    
    //#line 2068 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2072 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10_double x,
                                     x10aux::ref<IntMatrix> y) {
    
    //#line 2073 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 2074 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 2076 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2077 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__87>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__87)))Lib__closure__87(x, y)))));
    
    //#line 2085 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2088 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10aux::ref<DoubleMatrix> x,
                                     x10_int y) {
    
    //#line 2089 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2090 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2092 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2093 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__88>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__88)))Lib__closure__88(x, y)))));
    
    //#line 2101 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2114 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10aux::ref<DoubleMatrix> x,
                                   x10aux::ref<IntMatrix> y) {
    
    //#line 2115 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 2116 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 2118 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2119 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2121 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2122 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__89>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__89)))Lib__closure__89(x, y)))));
    
    //#line 2130 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2134 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10_double x,
                                   x10aux::ref<IntMatrix> y) {
    
    //#line 2135 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 2136 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 2138 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2139 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__90>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__90)))Lib__closure__90(x, y)))));
    
    //#line 2147 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2150 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10aux::ref<DoubleMatrix> x,
                                   x10_int y) {
    
    //#line 2151 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2152 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2154 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2155 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__91>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__91)))Lib__closure__91(x, y)))));
    
    //#line 2163 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2176 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gteq(x10aux::ref<DoubleMatrix> x,
                                     x10aux::ref<IntMatrix> y) {
    
    //#line 2177 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 2178 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 2180 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2181 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2183 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2184 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__92>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__92)))Lib__closure__92(x, y)))));
    
    //#line 2192 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2196 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gteq(x10_double x,
                                     x10aux::ref<IntMatrix> y) {
    
    //#line 2197 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 2198 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 2200 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2201 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__93>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__93)))Lib__closure__93(x, y)))));
    
    //#line 2209 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2212 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gteq(x10aux::ref<DoubleMatrix> x,
                                     x10_int y) {
    
    //#line 2213 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2214 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2216 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2217 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__94>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__94)))Lib__closure__94(x, y)))));
    
    //#line 2225 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2238 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10aux::ref<DoubleMatrix> x,
                                   x10aux::ref<DoubleMatrix> y) {
    
    //#line 2239 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 2240 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 2242 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2243 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2245 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2246 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__95>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__95)))Lib__closure__95(x, y)))));
    
    //#line 2254 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2258 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10_double x,
                                   x10aux::ref<DoubleMatrix> y) {
    
    //#line 2259 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 2260 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 2262 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2263 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__96>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__96)))Lib__closure__96(x, y)))));
    
    //#line 2271 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2274 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10aux::ref<DoubleMatrix> x,
                                   x10_double y) {
    
    //#line 2275 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2276 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2278 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2279 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__97>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__97)))Lib__closure__97(x, y)))));
    
    //#line 2287 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2300 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10aux::ref<DoubleMatrix> x,
                                    x10aux::ref<DoubleMatrix> y) {
    
    //#line 2301 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 2302 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 2304 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2305 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2307 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2308 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__98>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__98)))Lib__closure__98(x, y)))));
    
    //#line 2316 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2320 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10_double x,
                                    x10aux::ref<DoubleMatrix> y) {
    
    //#line 2321 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 2322 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 2324 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2325 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__99>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__99)))Lib__closure__99(x, y)))));
    
    //#line 2333 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2336 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10aux::ref<DoubleMatrix> x,
                                    x10_double y) {
    
    //#line 2337 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2338 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2340 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2341 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__100>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__100)))Lib__closure__100(x, y)))));
    
    //#line 2349 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2362 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10aux::ref<DoubleMatrix> x,
                                   x10aux::ref<DoubleMatrix> y) {
    
    //#line 2363 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 2364 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 2366 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2367 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2369 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2370 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__101>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__101)))Lib__closure__101(x, y)))));
    
    //#line 2378 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2382 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10_double x,
                                   x10aux::ref<DoubleMatrix> y) {
    
    //#line 2383 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 2384 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 2386 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2387 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__102>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__102)))Lib__closure__102(x, y)))));
    
    //#line 2395 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2398 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10aux::ref<DoubleMatrix> x,
                                   x10_double y) {
    
    //#line 2399 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2400 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2402 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2403 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__103>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__103)))Lib__closure__103(x, y)))));
    
    //#line 2411 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2424 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10aux::ref<DoubleMatrix> x,
                                     x10aux::ref<DoubleMatrix> y) {
    
    //#line 2425 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 2426 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 2428 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2429 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2431 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2432 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__104>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__104)))Lib__closure__104(x, y)))));
    
    //#line 2440 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2444 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10_double x,
                                     x10aux::ref<DoubleMatrix> y) {
    
    //#line 2445 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 2446 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 2448 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2449 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__105>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__105)))Lib__closure__105(x, y)))));
    
    //#line 2457 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2460 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10aux::ref<DoubleMatrix> x,
                                     x10_double y) {
    
    //#line 2461 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2462 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2464 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2465 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__106>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__106)))Lib__closure__106(x, y)))));
    
    //#line 2473 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2486 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10aux::ref<DoubleMatrix> x,
                                   x10aux::ref<DoubleMatrix> y) {
    
    //#line 2487 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 2488 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 2490 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2491 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2493 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2494 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__107>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__107)))Lib__closure__107(x, y)))));
    
    //#line 2502 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2506 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10_double x,
                                   x10aux::ref<DoubleMatrix> y) {
    
    //#line 2507 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 2508 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 2510 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2511 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__108>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__108)))Lib__closure__108(x, y)))));
    
    //#line 2519 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2522 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10aux::ref<DoubleMatrix> x,
                                   x10_double y) {
    
    //#line 2523 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2524 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2526 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2527 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__109>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__109)))Lib__closure__109(x, y)))));
    
    //#line 2535 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2548 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gteq(x10aux::ref<DoubleMatrix> x,
                                     x10aux::ref<DoubleMatrix> y) {
    
    //#line 2549 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 2550 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 2552 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2553 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2555 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2556 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__110>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__110)))Lib__closure__110(x, y)))));
    
    //#line 2564 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2568 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gteq(x10_double x,
                                     x10aux::ref<DoubleMatrix> y) {
    
    //#line 2569 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 2570 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 2572 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2573 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__111>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__111)))Lib__closure__111(x, y)))));
    
    //#line 2581 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2584 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gteq(x10aux::ref<DoubleMatrix> x,
                                     x10_double y) {
    
    //#line 2585 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2586 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2588 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2589 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__112>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__112)))Lib__closure__112(x, y)))));
    
    //#line 2597 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2608 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::eq(x10_boolean x, x10_int y) {
    
    //#line 2609 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return (x10aux::struct_equals((x ? (x10_int)(((x10_int)1))
                                     : (x10_int)(((x10_int)0))),
                                  y));
    
}

//#line 2612 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::eq(x10_int x, x10_boolean y) {
    
    //#line 2613 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return (x10aux::struct_equals(x, (y ? (x10_int)(((x10_int)1))
                                        : (x10_int)(((x10_int)0)))));
    
}

//#line 2617 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10aux::ref<BooleanMatrix> x,
                                   x10aux::ref<IntMatrix> y) {
    
    //#line 2618 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 2619 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 2621 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2622 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2624 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2625 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__113>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__113)))Lib__closure__113(x, y)))));
    
    //#line 2633 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2635 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10aux::ref<IntMatrix> x,
                                   x10aux::ref<BooleanMatrix> y) {
    
    //#line 2636 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 2637 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 2639 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2640 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2642 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2643 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__114>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__114)))Lib__closure__114(x, y)))));
    
    //#line 2651 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2655 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10_boolean x,
                                   x10aux::ref<IntMatrix> y) {
    
    //#line 2656 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 2657 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 2659 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2660 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__115>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__115)))Lib__closure__115(x, y)))));
    
    //#line 2668 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2670 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10_int x,
                                   x10aux::ref<BooleanMatrix> y) {
    
    //#line 2671 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 2672 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 2674 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2675 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__116>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__116)))Lib__closure__116(x, y)))));
    
    //#line 2683 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2686 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10aux::ref<BooleanMatrix> x,
                                   x10_int y) {
    
    //#line 2687 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2688 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2690 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2691 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__117>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__117)))Lib__closure__117(x, y)))));
    
    //#line 2699 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2701 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10aux::ref<IntMatrix> x,
                                   x10_boolean y) {
    
    //#line 2702 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2703 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2705 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2706 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__118>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__118)))Lib__closure__118(x, y)))));
    
    //#line 2714 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2729 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::neq(x10_boolean x, x10_int y) {
    
    //#line 2730 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return (!x10aux::struct_equals((x ? (x10_int)(((x10_int)1))
                                      : (x10_int)(((x10_int)0))),
                                   y));
    
}

//#line 2733 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::neq(x10_int x, x10_boolean y) {
    
    //#line 2734 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return (!x10aux::struct_equals(x, (y ? (x10_int)(((x10_int)1))
                                         : (x10_int)(((x10_int)0)))));
    
}

//#line 2738 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10aux::ref<BooleanMatrix> x,
                                    x10aux::ref<IntMatrix> y) {
    
    //#line 2739 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 2740 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 2742 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2743 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2745 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2746 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__119>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__119)))Lib__closure__119(x, y)))));
    
    //#line 2754 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2756 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10aux::ref<IntMatrix> x,
                                    x10aux::ref<BooleanMatrix> y) {
    
    //#line 2757 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 2758 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 2760 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2761 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2763 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2764 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__120>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__120)))Lib__closure__120(x, y)))));
    
    //#line 2772 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2776 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10_boolean x,
                                    x10aux::ref<IntMatrix> y) {
    
    //#line 2777 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 2778 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 2780 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2781 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__121>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__121)))Lib__closure__121(x, y)))));
    
    //#line 2789 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2791 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10_int x,
                                    x10aux::ref<BooleanMatrix> y) {
    
    //#line 2792 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 2793 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 2795 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2796 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__122>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__122)))Lib__closure__122(x, y)))));
    
    //#line 2804 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2807 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10aux::ref<BooleanMatrix> x,
                                    x10_int y) {
    
    //#line 2808 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2809 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2811 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2812 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__123>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__123)))Lib__closure__123(x, y)))));
    
    //#line 2820 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2822 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10aux::ref<IntMatrix> x,
                                    x10_boolean y) {
    
    //#line 2823 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2824 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2826 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2827 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__124>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__124)))Lib__closure__124(x, y)))));
    
    //#line 2835 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2850 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::lt(x10_boolean x, x10_int y) {
    
    //#line 2851 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x ? (x10_int)(((x10_int)1)) : (x10_int)(((x10_int)0))) < (y));
    
}

//#line 2854 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::lt(x10_int x, x10_boolean y) {
    
    //#line 2855 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x) < (y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))));
    
}

//#line 2859 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10aux::ref<BooleanMatrix> x,
                                   x10aux::ref<IntMatrix> y) {
    
    //#line 2860 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 2861 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 2863 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2864 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2866 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2867 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__125>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__125)))Lib__closure__125(x, y)))));
    
    //#line 2875 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2877 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10aux::ref<IntMatrix> x,
                                   x10aux::ref<BooleanMatrix> y) {
    
    //#line 2878 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 2879 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 2881 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2882 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2884 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2885 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__126>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__126)))Lib__closure__126(x, y)))));
    
    //#line 2893 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2897 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10_boolean x,
                                   x10aux::ref<IntMatrix> y) {
    
    //#line 2898 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 2899 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 2901 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2902 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__127>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__127)))Lib__closure__127(x, y)))));
    
    //#line 2910 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2912 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10_int x,
                                   x10aux::ref<BooleanMatrix> y) {
    
    //#line 2913 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 2914 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 2916 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2917 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__128>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__128)))Lib__closure__128(x, y)))));
    
    //#line 2925 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2928 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10aux::ref<BooleanMatrix> x,
                                   x10_int y) {
    
    //#line 2929 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2930 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2932 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2933 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__129>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__129)))Lib__closure__129(x, y)))));
    
    //#line 2941 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2943 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10aux::ref<IntMatrix> x,
                                   x10_boolean y) {
    
    //#line 2944 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2945 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2947 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2948 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__130>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__130)))Lib__closure__130(x, y)))));
    
    //#line 2956 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2971 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::lteq(x10_boolean x, x10_int y) {
    
    //#line 2972 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x ? (x10_int)(((x10_int)1)) : (x10_int)(((x10_int)0))) <= (y));
    
}

//#line 2975 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::lteq(x10_int x, x10_boolean y) {
    
    //#line 2976 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x) <= (y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))));
    
}

//#line 2980 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10aux::ref<BooleanMatrix> x,
                                     x10aux::ref<IntMatrix> y) {
    
    //#line 2981 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 2982 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 2984 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 2985 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 2987 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 2988 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__131>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__131)))Lib__closure__131(x, y)))));
    
    //#line 2996 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 2998 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10aux::ref<IntMatrix> x,
                                     x10aux::ref<BooleanMatrix> y) {
    
    //#line 2999 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 3000 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 3002 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3003 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3005 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3006 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__132>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__132)))Lib__closure__132(x, y)))));
    
    //#line 3014 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3018 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10_boolean x,
                                     x10aux::ref<IntMatrix> y) {
    
    //#line 3019 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 3020 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 3022 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3023 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__133>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__133)))Lib__closure__133(x, y)))));
    
    //#line 3031 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3033 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10_int x,
                                     x10aux::ref<BooleanMatrix> y) {
    
    //#line 3034 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 3035 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 3037 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3038 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__134>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__134)))Lib__closure__134(x, y)))));
    
    //#line 3046 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3049 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10aux::ref<BooleanMatrix> x,
                                     x10_int y) {
    
    //#line 3050 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3051 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3053 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3054 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__135>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__135)))Lib__closure__135(x, y)))));
    
    //#line 3062 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3064 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10aux::ref<IntMatrix> x,
                                     x10_boolean y) {
    
    //#line 3065 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3066 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3068 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3069 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__136>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__136)))Lib__closure__136(x, y)))));
    
    //#line 3077 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3092 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::gt(x10_boolean x, x10_int y) {
    
    //#line 3093 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x ? (x10_int)(((x10_int)1)) : (x10_int)(((x10_int)0))) > (y));
    
}

//#line 3096 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::gt(x10_int x, x10_boolean y) {
    
    //#line 3097 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x) > (y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))));
    
}

//#line 3101 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10aux::ref<BooleanMatrix> x,
                                   x10aux::ref<IntMatrix> y) {
    
    //#line 3102 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 3103 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 3105 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3106 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3108 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3109 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__137>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__137)))Lib__closure__137(x, y)))));
    
    //#line 3117 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3119 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10aux::ref<IntMatrix> x,
                                   x10aux::ref<BooleanMatrix> y) {
    
    //#line 3120 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 3121 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 3123 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3124 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3126 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3127 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__138>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__138)))Lib__closure__138(x, y)))));
    
    //#line 3135 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3139 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10_boolean x,
                                   x10aux::ref<IntMatrix> y) {
    
    //#line 3140 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 3141 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 3143 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3144 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__139>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__139)))Lib__closure__139(x, y)))));
    
    //#line 3152 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3154 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10_int x,
                                   x10aux::ref<BooleanMatrix> y) {
    
    //#line 3155 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 3156 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 3158 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3159 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__140>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__140)))Lib__closure__140(x, y)))));
    
    //#line 3167 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3170 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10aux::ref<BooleanMatrix> x,
                                   x10_int y) {
    
    //#line 3171 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3172 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3174 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3175 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__141>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__141)))Lib__closure__141(x, y)))));
    
    //#line 3183 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3185 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10aux::ref<IntMatrix> x,
                                   x10_boolean y) {
    
    //#line 3186 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3187 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3189 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3190 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__142>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__142)))Lib__closure__142(x, y)))));
    
    //#line 3198 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3213 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::eq(x10_boolean x, x10_double y) {
    
    //#line 3214 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return (x10aux::struct_equals(((x10_double) (x
                                    ? (x10_int)(((x10_int)1))
                                    : (x10_int)(((x10_int)0)))),
                                  y));
    
}

//#line 3217 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::eq(x10_double x, x10_boolean y) {
    
    //#line 3218 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return (x10aux::struct_equals(x, ((x10_double) (y
                                    ? (x10_int)(((x10_int)1))
                                    : (x10_int)(((x10_int)0))))));
    
}

//#line 3222 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10aux::ref<BooleanMatrix> x,
                                   x10aux::ref<DoubleMatrix> y) {
    
    //#line 3223 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 3224 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 3226 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3227 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3229 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3230 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__143>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__143)))Lib__closure__143(x, y)))));
    
    //#line 3238 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3240 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10aux::ref<DoubleMatrix> x,
                                   x10aux::ref<BooleanMatrix> y) {
    
    //#line 3241 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 3242 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 3244 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3245 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3247 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3248 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__144>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__144)))Lib__closure__144(x, y)))));
    
    //#line 3256 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3260 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10_boolean x,
                                   x10aux::ref<DoubleMatrix> y) {
    
    //#line 3261 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 3262 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 3264 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3265 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__145>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__145)))Lib__closure__145(x, y)))));
    
    //#line 3273 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3275 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10_double x,
                                   x10aux::ref<BooleanMatrix> y) {
    
    //#line 3276 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 3277 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 3279 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3280 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__146>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__146)))Lib__closure__146(x, y)))));
    
    //#line 3288 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3291 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10aux::ref<BooleanMatrix> x,
                                   x10_double y) {
    
    //#line 3292 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3293 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3295 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3296 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__147>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__147)))Lib__closure__147(x, y)))));
    
    //#line 3304 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3306 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::eq(x10aux::ref<DoubleMatrix> x,
                                   x10_boolean y) {
    
    //#line 3307 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3308 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3310 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3311 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__148>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__148)))Lib__closure__148(x, y)))));
    
    //#line 3319 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3334 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::neq(x10_boolean x, x10_double y) {
    
    //#line 3335 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return (!x10aux::struct_equals(((x10_double) (x
                                     ? (x10_int)(((x10_int)1))
                                     : (x10_int)(((x10_int)0)))),
                                   y));
    
}

//#line 3338 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::neq(x10_double x, x10_boolean y) {
    
    //#line 3339 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return (!x10aux::struct_equals(x, ((x10_double) (y
                                     ? (x10_int)(((x10_int)1))
                                     : (x10_int)(((x10_int)0))))));
    
}

//#line 3343 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10aux::ref<BooleanMatrix> x,
                                    x10aux::ref<DoubleMatrix> y) {
    
    //#line 3344 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 3345 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 3347 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3348 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3350 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3351 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__149>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__149)))Lib__closure__149(x, y)))));
    
    //#line 3359 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3361 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10aux::ref<DoubleMatrix> x,
                                    x10aux::ref<BooleanMatrix> y) {
    
    //#line 3362 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 3363 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 3365 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3366 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3368 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3369 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__150>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__150)))Lib__closure__150(x, y)))));
    
    //#line 3377 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3381 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10_boolean x,
                                    x10aux::ref<DoubleMatrix> y) {
    
    //#line 3382 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 3383 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 3385 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3386 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__151>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__151)))Lib__closure__151(x, y)))));
    
    //#line 3394 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3396 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10_double x,
                                    x10aux::ref<BooleanMatrix> y) {
    
    //#line 3397 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 3398 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 3400 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3401 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__152>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__152)))Lib__closure__152(x, y)))));
    
    //#line 3409 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3412 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10aux::ref<BooleanMatrix> x,
                                    x10_double y) {
    
    //#line 3413 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3414 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3416 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3417 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__153>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__153)))Lib__closure__153(x, y)))));
    
    //#line 3425 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3427 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::neq(x10aux::ref<DoubleMatrix> x,
                                    x10_boolean y) {
    
    //#line 3428 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3429 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3431 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3432 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__154>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__154)))Lib__closure__154(x, y)))));
    
    //#line 3440 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3455 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::lt(x10_boolean x, x10_double y) {
    
    //#line 3456 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((((x10_double) (x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))))) < (y));
    
}

//#line 3459 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::lt(x10_double x, x10_boolean y) {
    
    //#line 3460 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x) < (((x10_double) (y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))))));
    
}

//#line 3464 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10aux::ref<BooleanMatrix> x,
                                   x10aux::ref<DoubleMatrix> y) {
    
    //#line 3465 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 3466 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 3468 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3469 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3471 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3472 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__155>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__155)))Lib__closure__155(x, y)))));
    
    //#line 3480 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3482 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10aux::ref<DoubleMatrix> x,
                                   x10aux::ref<BooleanMatrix> y) {
    
    //#line 3483 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 3484 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 3486 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3487 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3489 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3490 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__156>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__156)))Lib__closure__156(x, y)))));
    
    //#line 3498 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3502 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10_boolean x,
                                   x10aux::ref<DoubleMatrix> y) {
    
    //#line 3503 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 3504 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 3506 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3507 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__157>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__157)))Lib__closure__157(x, y)))));
    
    //#line 3515 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3517 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10_double x,
                                   x10aux::ref<BooleanMatrix> y) {
    
    //#line 3518 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 3519 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 3521 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3522 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__158>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__158)))Lib__closure__158(x, y)))));
    
    //#line 3530 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3533 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10aux::ref<BooleanMatrix> x,
                                   x10_double y) {
    
    //#line 3534 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3535 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3537 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3538 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__159>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__159)))Lib__closure__159(x, y)))));
    
    //#line 3546 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3548 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10aux::ref<DoubleMatrix> x,
                                   x10_boolean y) {
    
    //#line 3549 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3550 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3552 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3553 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__160>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__160)))Lib__closure__160(x, y)))));
    
    //#line 3561 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3576 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::lteq(x10_boolean x, x10_double y) {
    
    //#line 3577 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((((x10_double) (x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))))) <= (y));
    
}

//#line 3580 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::lteq(x10_double x, x10_boolean y) {
    
    //#line 3581 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x) <= (((x10_double) (y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))))));
    
}

//#line 3585 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10aux::ref<BooleanMatrix> x,
                                     x10aux::ref<DoubleMatrix> y) {
    
    //#line 3586 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 3587 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 3589 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3590 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3592 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3593 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__161>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__161)))Lib__closure__161(x, y)))));
    
    //#line 3601 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3603 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10aux::ref<DoubleMatrix> x,
                                     x10aux::ref<BooleanMatrix> y) {
    
    //#line 3604 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 3605 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 3607 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3608 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3610 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3611 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__162>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__162)))Lib__closure__162(x, y)))));
    
    //#line 3619 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3623 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10_boolean x,
                                     x10aux::ref<DoubleMatrix> y) {
    
    //#line 3624 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 3625 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 3627 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3628 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__163>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__163)))Lib__closure__163(x, y)))));
    
    //#line 3636 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3638 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10_double x,
                                     x10aux::ref<BooleanMatrix> y) {
    
    //#line 3639 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 3640 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 3642 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3643 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__164>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__164)))Lib__closure__164(x, y)))));
    
    //#line 3651 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3654 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10aux::ref<BooleanMatrix> x,
                                     x10_double y) {
    
    //#line 3655 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3656 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3658 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3659 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__165>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__165)))Lib__closure__165(x, y)))));
    
    //#line 3667 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3669 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10aux::ref<DoubleMatrix> x,
                                     x10_boolean y) {
    
    //#line 3670 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3671 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3673 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3674 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__166>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__166)))Lib__closure__166(x, y)))));
    
    //#line 3682 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3697 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::gt(x10_boolean x, x10_double y) {
    
    //#line 3698 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((((x10_double) (x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))))) > (y));
    
}

//#line 3701 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::gt(x10_double x, x10_boolean y) {
    
    //#line 3702 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x) > (((x10_double) (y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))))));
    
}

//#line 3706 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10aux::ref<BooleanMatrix> x,
                                   x10aux::ref<DoubleMatrix> y) {
    
    //#line 3707 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 3708 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 3710 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3711 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3713 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3714 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__167>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__167)))Lib__closure__167(x, y)))));
    
    //#line 3722 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3724 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10aux::ref<DoubleMatrix> x,
                                   x10aux::ref<BooleanMatrix> y) {
    
    //#line 3725 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 3726 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 3728 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3729 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3731 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3732 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__168>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__168)))Lib__closure__168(x, y)))));
    
    //#line 3740 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3744 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10_boolean x,
                                   x10aux::ref<DoubleMatrix> y) {
    
    //#line 3745 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 3746 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 3748 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3749 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__169>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__169)))Lib__closure__169(x, y)))));
    
    //#line 3757 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3759 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10_double x,
                                   x10aux::ref<BooleanMatrix> y) {
    
    //#line 3760 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 3761 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 3763 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3764 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__170>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__170)))Lib__closure__170(x, y)))));
    
    //#line 3772 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3775 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10aux::ref<BooleanMatrix> x,
                                   x10_double y) {
    
    //#line 3776 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3777 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3779 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3780 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__171>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__171)))Lib__closure__171(x, y)))));
    
    //#line 3788 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3790 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10aux::ref<DoubleMatrix> x,
                                   x10_boolean y) {
    
    //#line 3791 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3792 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3794 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3795 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__172>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__172)))Lib__closure__172(x, y)))));
    
    //#line 3803 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3817 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::lt(x10_boolean x, x10_boolean y) {
    
    //#line 3818 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x ? (x10_int)(((x10_int)1)) : (x10_int)(((x10_int)0))) < (y
      ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))));
    
}

//#line 3822 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10aux::ref<BooleanMatrix> x,
                                   x10aux::ref<BooleanMatrix> y) {
    
    //#line 3823 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 3824 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 3826 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3827 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3829 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3830 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__173>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__173)))Lib__closure__173(x, y)))));
    
    //#line 3838 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3843 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10_boolean x,
                                   x10aux::ref<BooleanMatrix> y) {
    
    //#line 3844 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 3845 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 3847 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3848 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__174>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__174)))Lib__closure__174(x, y)))));
    
    //#line 3856 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3859 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lt(x10aux::ref<BooleanMatrix> x,
                                   x10_boolean y) {
    
    //#line 3860 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3861 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3863 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3864 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__175>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__175)))Lib__closure__175(x, y)))));
    
    //#line 3873 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3883 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::lteq(x10_boolean x, x10_boolean y) {
    
    //#line 3884 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x ? (x10_int)(((x10_int)1)) : (x10_int)(((x10_int)0))) <= (y
      ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))));
    
}

//#line 3888 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10aux::ref<BooleanMatrix> x,
                                     x10aux::ref<BooleanMatrix> y) {
    
    //#line 3889 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 3890 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 3892 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3893 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3895 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3896 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__176>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__176)))Lib__closure__176(x, y)))));
    
    //#line 3904 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3909 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10_boolean x,
                                     x10aux::ref<BooleanMatrix> y) {
    
    //#line 3910 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 3911 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 3913 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3914 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__177>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__177)))Lib__closure__177(x, y)))));
    
    //#line 3922 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3925 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::lteq(x10aux::ref<BooleanMatrix> x,
                                     x10_boolean y) {
    
    //#line 3926 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3927 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3929 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3930 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__178>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__178)))Lib__closure__178(x, y)))));
    
    //#line 3939 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3949 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::gt(x10_boolean x, x10_boolean y) {
    
    //#line 3950 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x ? (x10_int)(((x10_int)1)) : (x10_int)(((x10_int)0))) > (y
      ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))));
    
}

//#line 3954 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10aux::ref<BooleanMatrix> x,
                                   x10aux::ref<BooleanMatrix> y) {
    
    //#line 3955 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 3956 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 3958 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3959 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3961 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3962 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__179>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__179)))Lib__closure__179(x, y)))));
    
    //#line 3970 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3975 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10_boolean x,
                                   x10aux::ref<BooleanMatrix> y) {
    
    //#line 3976 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 3977 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 3979 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3980 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__180>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__180)))Lib__closure__180(x, y)))));
    
    //#line 3988 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 3991 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gt(x10aux::ref<BooleanMatrix> x,
                                   x10_boolean y) {
    
    //#line 3992 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 3993 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 3995 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 3996 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__181>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__181)))Lib__closure__181(x, y)))));
    
    //#line 4005 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4015 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::gteq(x10_boolean x, x10_boolean y) {
    
    //#line 4016 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x ? (x10_int)(((x10_int)1)) : (x10_int)(((x10_int)0))) >= (y
      ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))));
    
}

//#line 4020 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gteq(x10aux::ref<BooleanMatrix> x,
                                     x10aux::ref<BooleanMatrix> y) {
    
    //#line 4021 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 4022 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At == op: Mismatch of Operand Dimensions."));
    }
    
    //#line 4024 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 4025 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 4027 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4028 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__182>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__182)))Lib__closure__182(x, y)))));
    
    //#line 4036 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4041 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gteq(x10_boolean x,
                                     x10aux::ref<BooleanMatrix> y) {
    
    //#line 4042 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 4043 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 4045 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4046 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__183>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__183)))Lib__closure__183(x, y)))));
    
    //#line 4054 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4057 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::gteq(x10aux::ref<BooleanMatrix> x,
                                     x10_boolean y) {
    
    //#line 4058 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 4059 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 4061 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4062 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__184>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__184)))Lib__closure__184(x, y)))));
    
    //#line 4071 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4080 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::_kwd__and(x10_int x, x10_int y) {
    
    //#line 4083 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1;
    
    //#line 4084 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(x, ((x10_int)0))))
    {
        
        //#line 4085 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          true;
    }
    else
    {
        
        //#line 4087 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          false;
    }
    
    //#line 4088 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2;
    
    //#line 4089 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(y, ((x10_int)0))))
    {
        
        //#line 4090 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          true;
    }
    else
    {
        
        //#line 4092 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          false;
    }
    
    //#line 4094 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return b1 && b2;
    
}

//#line 4098 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__and(
  x10aux::ref<IntMatrix> x,
  x10aux::ref<IntMatrix> y) {
    
    //#line 4099 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 4100 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At & op: Mismatch of Operand Dimensions."));
    }
    
    //#line 4102 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 4103 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 4105 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4106 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__185>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__185)))Lib__closure__185(x, y)))));
    
    //#line 4127 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4131 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__and(
  x10_int x,
  x10aux::ref<IntMatrix> y) {
    
    //#line 4132 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 4133 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 4136 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1;
    
    //#line 4137 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(x, ((x10_int)0))))
    {
        
        //#line 4138 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          true;
    }
    else
    {
        
        //#line 4140 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          false;
    }
    
    //#line 4142 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4143 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__186>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__186)))Lib__closure__186(y, b1)))));
    
    //#line 4158 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4161 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__and(
  x10aux::ref<IntMatrix> x,
  x10_int y) {
    
    //#line 4162 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 4163 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 4166 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2;
    
    //#line 4167 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(y, ((x10_int)0))))
    {
        
        //#line 4168 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          true;
    }
    else
    {
        
        //#line 4170 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          false;
    }
    
    //#line 4172 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4173 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__187>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__187)))Lib__closure__187(x, b2)))));
    
    //#line 4188 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4198 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::_kwd__or(x10_int x, x10_int y) {
    
    //#line 4201 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1;
    
    //#line 4202 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(x, ((x10_int)0))))
    {
        
        //#line 4203 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          true;
    }
    else
    {
        
        //#line 4205 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          false;
    }
    
    //#line 4206 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2;
    
    //#line 4207 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(y, ((x10_int)0))))
    {
        
        //#line 4208 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          true;
    }
    else
    {
        
        //#line 4210 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          false;
    }
    
    //#line 4212 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return b1 || b2;
    
}

//#line 4216 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__or(
  x10aux::ref<IntMatrix> x,
  x10aux::ref<IntMatrix> y) {
    
    //#line 4217 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 4218 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At & op: Mismatch of Operand Dimensions."));
    }
    
    //#line 4220 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 4221 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 4223 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4224 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__188>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__188)))Lib__closure__188(x, y)))));
    
    //#line 4245 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4249 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__or(
  x10_int x,
  x10aux::ref<IntMatrix> y) {
    
    //#line 4250 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 4251 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 4254 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1;
    
    //#line 4255 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(x, ((x10_int)0))))
    {
        
        //#line 4256 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          true;
    }
    else
    {
        
        //#line 4258 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          false;
    }
    
    //#line 4260 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4261 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__189>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__189)))Lib__closure__189(y, b1)))));
    
    //#line 4276 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4279 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__or(
  x10aux::ref<IntMatrix> x,
  x10_int y) {
    
    //#line 4280 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 4281 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 4284 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2;
    
    //#line 4285 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(y, ((x10_int)0))))
    {
        
        //#line 4286 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          true;
    }
    else
    {
        
        //#line 4288 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          false;
    }
    
    //#line 4290 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4291 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__190>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__190)))Lib__closure__190(x, b2)))));
    
    //#line 4306 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4316 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::_kwd__and(x10_int x, x10_double y) {
    
    //#line 4319 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1;
    
    //#line 4320 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(x, ((x10_int)0))))
    {
        
        //#line 4321 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          true;
    }
    else
    {
        
        //#line 4323 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          false;
    }
    
    //#line 4324 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2;
    
    //#line 4325 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(y, ((x10_double) (((x10_int)0))))))
    {
        
        //#line 4326 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          true;
    }
    else
    {
        
        //#line 4328 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          false;
    }
    
    //#line 4330 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return b1 && b2;
    
}

//#line 4334 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__and(
  x10aux::ref<IntMatrix> x,
  x10aux::ref<DoubleMatrix> y) {
    
    //#line 4335 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 4336 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At & op: Mismatch of Operand Dimensions."));
    }
    
    //#line 4338 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 4339 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 4341 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4342 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__191>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__191)))Lib__closure__191(x, y)))));
    
    //#line 4363 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4367 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__and(
  x10_int x,
  x10aux::ref<DoubleMatrix> y) {
    
    //#line 4368 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 4369 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 4372 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1;
    
    //#line 4373 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(x, ((x10_int)0))))
    {
        
        //#line 4374 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          true;
    }
    else
    {
        
        //#line 4376 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          false;
    }
    
    //#line 4378 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4379 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__192>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__192)))Lib__closure__192(y, b1)))));
    
    //#line 4394 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4397 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__and(
  x10aux::ref<IntMatrix> x,
  x10_double y) {
    
    //#line 4398 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 4399 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 4402 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2;
    
    //#line 4403 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(y, ((x10_double) (((x10_int)0))))))
    {
        
        //#line 4404 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          true;
    }
    else
    {
        
        //#line 4406 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          false;
    }
    
    //#line 4408 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4409 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__193>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__193)))Lib__closure__193(x, b2)))));
    
    //#line 4424 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4434 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::_kwd__or(x10_int x, x10_double y) {
    
    //#line 4437 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1;
    
    //#line 4438 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(x, ((x10_int)0))))
    {
        
        //#line 4439 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          true;
    }
    else
    {
        
        //#line 4441 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          false;
    }
    
    //#line 4442 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2;
    
    //#line 4443 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(y, ((x10_double) (((x10_int)0))))))
    {
        
        //#line 4444 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          true;
    }
    else
    {
        
        //#line 4446 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          false;
    }
    
    //#line 4448 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return b1 || b2;
    
}

//#line 4452 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__or(
  x10aux::ref<IntMatrix> x,
  x10aux::ref<DoubleMatrix> y) {
    
    //#line 4453 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 4454 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At & op: Mismatch of Operand Dimensions."));
    }
    
    //#line 4456 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 4457 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 4459 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4460 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__194>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__194)))Lib__closure__194(x, y)))));
    
    //#line 4481 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4485 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__or(
  x10_int x,
  x10aux::ref<DoubleMatrix> y) {
    
    //#line 4486 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 4487 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 4490 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1;
    
    //#line 4491 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(x, ((x10_int)0))))
    {
        
        //#line 4492 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          true;
    }
    else
    {
        
        //#line 4494 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          false;
    }
    
    //#line 4496 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4497 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__195>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__195)))Lib__closure__195(y, b1)))));
    
    //#line 4512 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4515 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__or(
  x10aux::ref<IntMatrix> x,
  x10_double y) {
    
    //#line 4516 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 4517 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 4520 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2;
    
    //#line 4521 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(y, ((x10_double) (((x10_int)0))))))
    {
        
        //#line 4522 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          true;
    }
    else
    {
        
        //#line 4524 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          false;
    }
    
    //#line 4526 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4527 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__196>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__196)))Lib__closure__196(x, b2)))));
    
    //#line 4542 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4552 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::_kwd__and(x10_double x, x10_int y) {
    
    //#line 4555 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1;
    
    //#line 4556 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(x, ((x10_double) (((x10_int)0))))))
    {
        
        //#line 4557 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          true;
    }
    else
    {
        
        //#line 4559 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          false;
    }
    
    //#line 4560 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2;
    
    //#line 4561 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(y, ((x10_int)0))))
    {
        
        //#line 4562 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          true;
    }
    else
    {
        
        //#line 4564 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          false;
    }
    
    //#line 4566 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return b1 && b2;
    
}

//#line 4570 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__and(
  x10aux::ref<DoubleMatrix> x,
  x10aux::ref<IntMatrix> y) {
    
    //#line 4571 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 4572 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At & op: Mismatch of Operand Dimensions."));
    }
    
    //#line 4574 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 4575 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 4577 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4578 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__197>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__197)))Lib__closure__197(x, y)))));
    
    //#line 4599 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4603 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__and(
  x10_double x,
  x10aux::ref<IntMatrix> y) {
    
    //#line 4604 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 4605 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 4608 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1;
    
    //#line 4609 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(x, ((x10_double) (((x10_int)0))))))
    {
        
        //#line 4610 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          true;
    }
    else
    {
        
        //#line 4612 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          false;
    }
    
    //#line 4614 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4615 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__198>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__198)))Lib__closure__198(y, b1)))));
    
    //#line 4630 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4633 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__and(
  x10aux::ref<DoubleMatrix> x,
  x10_int y) {
    
    //#line 4634 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 4635 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 4638 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2;
    
    //#line 4639 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(y, ((x10_int)0))))
    {
        
        //#line 4640 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          true;
    }
    else
    {
        
        //#line 4642 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          false;
    }
    
    //#line 4644 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4645 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__199>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__199)))Lib__closure__199(x, b2)))));
    
    //#line 4660 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4670 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::_kwd__or(x10_double x, x10_int y) {
    
    //#line 4673 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1;
    
    //#line 4674 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(x, ((x10_double) (((x10_int)0))))))
    {
        
        //#line 4675 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          true;
    }
    else
    {
        
        //#line 4677 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          false;
    }
    
    //#line 4678 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2;
    
    //#line 4679 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(y, ((x10_int)0))))
    {
        
        //#line 4680 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          true;
    }
    else
    {
        
        //#line 4682 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          false;
    }
    
    //#line 4684 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return b1 || b2;
    
}

//#line 4688 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__or(
  x10aux::ref<DoubleMatrix> x,
  x10aux::ref<IntMatrix> y) {
    
    //#line 4689 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 4690 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At & op: Mismatch of Operand Dimensions."));
    }
    
    //#line 4692 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 4693 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 4695 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4696 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__200>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__200)))Lib__closure__200(x, y)))));
    
    //#line 4717 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4721 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__or(
  x10_double x,
  x10aux::ref<IntMatrix> y) {
    
    //#line 4722 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 4723 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 4726 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1;
    
    //#line 4727 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(x, ((x10_double) (((x10_int)0))))))
    {
        
        //#line 4728 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          true;
    }
    else
    {
        
        //#line 4730 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          false;
    }
    
    //#line 4732 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4733 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__201>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__201)))Lib__closure__201(y, b1)))));
    
    //#line 4748 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4751 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__or(
  x10aux::ref<DoubleMatrix> x,
  x10_int y) {
    
    //#line 4752 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 4753 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 4756 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2;
    
    //#line 4757 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(y, ((x10_int)0))))
    {
        
        //#line 4758 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          true;
    }
    else
    {
        
        //#line 4760 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          false;
    }
    
    //#line 4762 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4763 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__202>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__202)))Lib__closure__202(x, b2)))));
    
    //#line 4778 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4788 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::_kwd__and(x10_double x, x10_double y) {
    
    //#line 4791 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1;
    
    //#line 4792 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(x, ((x10_double) (((x10_int)0))))))
    {
        
        //#line 4793 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          true;
    }
    else
    {
        
        //#line 4795 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          false;
    }
    
    //#line 4796 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2;
    
    //#line 4797 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(y, ((x10_double) (((x10_int)0))))))
    {
        
        //#line 4798 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          true;
    }
    else
    {
        
        //#line 4800 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          false;
    }
    
    //#line 4802 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return b1 && b2;
    
}

//#line 4806 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__and(
  x10aux::ref<DoubleMatrix> x,
  x10aux::ref<DoubleMatrix> y) {
    
    //#line 4807 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 4808 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At & op: Mismatch of Operand Dimensions."));
    }
    
    //#line 4810 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 4811 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 4813 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4814 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__203>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__203)))Lib__closure__203(x, y)))));
    
    //#line 4835 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4839 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__and(
  x10_double x,
  x10aux::ref<DoubleMatrix> y) {
    
    //#line 4840 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 4841 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 4844 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1;
    
    //#line 4845 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(x, ((x10_double) (((x10_int)0))))))
    {
        
        //#line 4846 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          true;
    }
    else
    {
        
        //#line 4848 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          false;
    }
    
    //#line 4850 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4851 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__204>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__204)))Lib__closure__204(y, b1)))));
    
    //#line 4866 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4869 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__and(
  x10aux::ref<DoubleMatrix> x,
  x10_double y) {
    
    //#line 4870 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 4871 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 4874 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2;
    
    //#line 4875 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(y, ((x10_double) (((x10_int)0))))))
    {
        
        //#line 4876 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          true;
    }
    else
    {
        
        //#line 4878 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          false;
    }
    
    //#line 4880 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4881 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__205>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__205)))Lib__closure__205(x, b2)))));
    
    //#line 4896 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4906 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::_kwd__or(x10_double x, x10_double y) {
    
    //#line 4909 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1;
    
    //#line 4910 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(x, ((x10_double) (((x10_int)0))))))
    {
        
        //#line 4911 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          true;
    }
    else
    {
        
        //#line 4913 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          false;
    }
    
    //#line 4914 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2;
    
    //#line 4915 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(y, ((x10_double) (((x10_int)0))))))
    {
        
        //#line 4916 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          true;
    }
    else
    {
        
        //#line 4918 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          false;
    }
    
    //#line 4920 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return b1 || b2;
    
}

//#line 4924 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__or(
  x10aux::ref<DoubleMatrix> x,
  x10aux::ref<DoubleMatrix> y) {
    
    //#line 4925 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 4926 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At & op: Mismatch of Operand Dimensions."));
    }
    
    //#line 4928 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 4929 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 4931 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4932 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__206>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__206)))Lib__closure__206(x, y)))));
    
    //#line 4953 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4957 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__or(
  x10_double x,
  x10aux::ref<DoubleMatrix> y) {
    
    //#line 4958 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 4959 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 4962 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1;
    
    //#line 4963 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(x, ((x10_double) (((x10_int)0))))))
    {
        
        //#line 4964 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          true;
    }
    else
    {
        
        //#line 4966 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          false;
    }
    
    //#line 4968 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4969 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__207>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__207)))Lib__closure__207(y, b1)))));
    
    //#line 4984 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 4987 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__or(
  x10aux::ref<DoubleMatrix> x,
  x10_double y) {
    
    //#line 4988 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 4989 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 4992 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2;
    
    //#line 4993 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(y, ((x10_double) (((x10_int)0))))))
    {
        
        //#line 4994 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          true;
    }
    else
    {
        
        //#line 4996 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          false;
    }
    
    //#line 4998 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 4999 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__208>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__208)))Lib__closure__208(x, b2)))));
    
    //#line 5014 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 5025 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::_kwd__and(x10_int x, x10_boolean y) {
    
    //#line 5026 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1;
    
    //#line 5027 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(x, ((x10_int)0))))
    {
        
        //#line 5028 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          true;
    }
    else
    {
        
        //#line 5030 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          false;
    }
    
    //#line 5031 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2 = y;
    
    //#line 5033 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return b1 && b2;
    
}

//#line 5035 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::_kwd__and(x10_boolean x,
                           x10_int y) {
    
    //#line 5036 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1 = x;
    
    //#line 5037 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2;
    
    //#line 5038 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(y, ((x10_int)0))))
    {
        
        //#line 5039 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          true;
    }
    else
    {
        
        //#line 5041 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          false;
    }
    
    //#line 5043 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return b1 && b2;
    
}

//#line 5047 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__and(
  x10aux::ref<IntMatrix> x,
  x10aux::ref<BooleanMatrix> y) {
    
    //#line 5048 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 5049 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At & op: Mismatch of Operand Dimensions."));
    }
    
    //#line 5051 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 5052 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 5054 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 5055 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__209>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__209)))Lib__closure__209(x, y)))));
    
    //#line 5070 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 5073 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__and(
  x10aux::ref<BooleanMatrix> x,
  x10aux::ref<IntMatrix> y) {
    
    //#line 5074 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 5075 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At & op: Mismatch of Operand Dimensions."));
    }
    
    //#line 5077 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 5078 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 5080 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 5081 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__210>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__210)))Lib__closure__210(x, y)))));
    
    //#line 5095 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 5210 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::_kwd__or(x10_int x, x10_boolean y) {
    
    //#line 5211 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1;
    
    //#line 5212 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(x, ((x10_int)0))))
    {
        
        //#line 5213 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          true;
    }
    else
    {
        
        //#line 5215 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          false;
    }
    
    //#line 5216 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2 = y;
    
    //#line 5218 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return b1 || b2;
    
}

//#line 5220 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::_kwd__or(x10_boolean x, x10_int y) {
    
    //#line 5221 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1 = x;
    
    //#line 5222 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2;
    
    //#line 5223 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(y, ((x10_int)0))))
    {
        
        //#line 5224 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          true;
    }
    else
    {
        
        //#line 5226 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          false;
    }
    
    //#line 5228 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return b1 || b2;
    
}

//#line 5232 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__or(
  x10aux::ref<IntMatrix> x,
  x10aux::ref<BooleanMatrix> y) {
    
    //#line 5233 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 5234 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At & op: Mismatch of Operand Dimensions."));
    }
    
    //#line 5236 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 5237 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 5239 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 5240 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__211>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__211)))Lib__closure__211(x, y)))));
    
    //#line 5255 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 5258 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__or(
  x10aux::ref<BooleanMatrix> x,
  x10aux::ref<IntMatrix> y) {
    
    //#line 5259 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 5260 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At & op: Mismatch of Operand Dimensions."));
    }
    
    //#line 5262 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 5263 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 5265 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 5266 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__212>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__212)))Lib__closure__212(x, y)))));
    
    //#line 5280 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 5395 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::_kwd__and(x10_double x, x10_boolean y) {
    
    //#line 5396 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1;
    
    //#line 5397 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(x, ((x10_double) (((x10_int)0))))))
    {
        
        //#line 5398 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          true;
    }
    else
    {
        
        //#line 5400 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          false;
    }
    
    //#line 5401 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2 = y;
    
    //#line 5403 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return b1 && b2;
    
}

//#line 5405 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::_kwd__and(x10_boolean x,
                           x10_double y) {
    
    //#line 5406 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1 = x;
    
    //#line 5407 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2;
    
    //#line 5408 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(y, ((x10_double) (((x10_int)0))))))
    {
        
        //#line 5409 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          true;
    }
    else
    {
        
        //#line 5411 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          false;
    }
    
    //#line 5413 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return b1 && b2;
    
}

//#line 5417 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__and(
  x10aux::ref<DoubleMatrix> x,
  x10aux::ref<BooleanMatrix> y) {
    
    //#line 5418 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 5419 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At & op: Mismatch of Operand Dimensions."));
    }
    
    //#line 5421 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 5422 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 5424 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 5425 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__213>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__213)))Lib__closure__213(x, y)))));
    
    //#line 5440 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 5443 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__and(
  x10aux::ref<BooleanMatrix> x,
  x10aux::ref<DoubleMatrix> y) {
    
    //#line 5444 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 5445 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At & op: Mismatch of Operand Dimensions."));
    }
    
    //#line 5447 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 5448 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 5450 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 5451 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__214>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__214)))Lib__closure__214(x, y)))));
    
    //#line 5465 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 5580 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::_kwd__or(x10_double x, x10_boolean y) {
    
    //#line 5581 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1;
    
    //#line 5582 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(x, ((x10_double) (((x10_int)0))))))
    {
        
        //#line 5583 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          true;
    }
    else
    {
        
        //#line 5585 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b1 =
          false;
    }
    
    //#line 5586 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2 = y;
    
    //#line 5588 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return b1 || b2;
    
}

//#line 5590 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::_kwd__or(x10_boolean x, x10_double y) {
    
    //#line 5591 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b1 = x;
    
    //#line 5592 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_boolean b2;
    
    //#line 5593 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if ((!x10aux::struct_equals(y, ((x10_double) (((x10_int)0))))))
    {
        
        //#line 5594 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          true;
    }
    else
    {
        
        //#line 5596 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        b2 =
          false;
    }
    
    //#line 5598 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return b1 || b2;
    
}

//#line 5602 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__or(
  x10aux::ref<DoubleMatrix> x,
  x10aux::ref<BooleanMatrix> y) {
    
    //#line 5603 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 5604 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At & op: Mismatch of Operand Dimensions."));
    }
    
    //#line 5606 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 5607 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 5609 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 5610 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__215>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__215)))Lib__closure__215(x, y)))));
    
    //#line 5625 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 5628 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__or(
  x10aux::ref<BooleanMatrix> x,
  x10aux::ref<DoubleMatrix> y) {
    
    //#line 5629 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 5630 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At & op: Mismatch of Operand Dimensions."));
    }
    
    //#line 5632 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 5633 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 5635 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 5636 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__216>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__216)))Lib__closure__216(x, y)))));
    
    //#line 5650 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 5765 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::_kwd__and(x10_boolean x,
                           x10_boolean y) {
    
    //#line 5766 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return x && y;
    
}

//#line 5769 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__and(
  x10aux::ref<BooleanMatrix> x,
  x10aux::ref<BooleanMatrix> y) {
    
    //#line 5770 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 5771 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At | op: Mismatch of Operand Dimensions."));
    }
    
    //#line 5773 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 5774 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 5776 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 5777 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__217>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__217)))Lib__closure__217(x, y)))));
    
    //#line 5783 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 5785 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__and(
  x10_boolean x,
  x10aux::ref<BooleanMatrix> y) {
    
    //#line 5787 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 5788 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 5790 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 5791 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__218>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__218)))Lib__closure__218(x, y)))));
    
    //#line 5797 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 5799 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__and(
  x10aux::ref<BooleanMatrix> x,
  x10_boolean y) {
    
    //#line 5801 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 5802 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 5804 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 5805 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__219>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__219)))Lib__closure__219(x, y)))));
    
    //#line 5811 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 5822 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_boolean Lib::_kwd__or(x10_boolean x, x10_boolean y) {
    
    //#line 5823 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return x || y;
    
}

//#line 5826 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__or(
  x10aux::ref<BooleanMatrix> x,
  x10aux::ref<BooleanMatrix> y) {
    
    //#line 5827 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 5828 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At | op: Mismatch of Operand Dimensions."));
    }
    
    //#line 5830 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 5831 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 5833 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 5834 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__220>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__220)))Lib__closure__220(x, y)))));
    
    //#line 5840 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 5842 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__or(
  x10_boolean x,
  x10aux::ref<BooleanMatrix> y) {
    
    //#line 5844 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 5845 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 5847 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 5848 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__221>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__221)))Lib__closure__221(x, y)))));
    
    //#line 5854 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 5856 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<BooleanMatrix> Lib::_kwd__or(
  x10aux::ref<BooleanMatrix> x,
  x10_boolean y) {
    
    //#line 5858 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 5859 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 5861 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 5862 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_boolean> > array =
      x10::array::Array<x10_boolean>::_make(r,
                                            x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(x10aux::ref<Lib__closure__222>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >(sizeof(Lib__closure__222)))Lib__closure__222(x, y)))));
    
    //#line 5868 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return BooleanMatrix::_make(array, n,
                                m);
    
}

//#line 5880 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::plus(x10_int x, x10_int y) {
    
    //#line 5881 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x10_int) ((x) + (y)));
    
}

//#line 5886 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::plus(x10aux::ref<IntMatrix> x,
                                 x10aux::ref<IntMatrix> y) {
    
    //#line 5887 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 5888 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 5890 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 5891 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 5893 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 5894 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__223>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__223)))Lib__closure__223(x, y)))));
    
    //#line 5902 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 5906 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::plus(x10_int x,
                                 x10aux::ref<IntMatrix> y) {
    
    //#line 5907 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 5908 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 5910 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 5911 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__224>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__224)))Lib__closure__224(x, y)))));
    
    //#line 5919 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 5922 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::plus(x10aux::ref<IntMatrix> x,
                                 x10_int y) {
    
    //#line 5923 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 5924 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 5926 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 5927 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__225>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__225)))Lib__closure__225(x, y)))));
    
    //#line 5935 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 5962 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::minus(x10_int x, x10_int y) {
    
    //#line 5963 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x10_int) ((x) - (y)));
    
}

//#line 5968 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::minus(x10aux::ref<IntMatrix> x,
                                  x10aux::ref<IntMatrix> y) {
    
    //#line 5969 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 5970 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 5972 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 5973 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 5975 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 5976 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__226>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__226)))Lib__closure__226(x, y)))));
    
    //#line 5984 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 5988 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::minus(x10_int x,
                                  x10aux::ref<IntMatrix> y) {
    
    //#line 5989 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 5990 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 5992 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 5993 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__227>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__227)))Lib__closure__227(x, y)))));
    
    //#line 6001 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 6004 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::minus(x10aux::ref<IntMatrix> x,
                                  x10_int y) {
    
    //#line 6005 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6006 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6008 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6009 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__228>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__228)))Lib__closure__228(x, y)))));
    
    //#line 6017 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 6044 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::dotTimes(x10_int x, x10_int y) {
    
    //#line 6045 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x10_int) ((x) * (y)));
    
}

//#line 6050 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotTimes(x10aux::ref<IntMatrix> x,
                                     x10aux::ref<IntMatrix> y) {
    
    //#line 6051 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 6052 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 6054 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6055 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6057 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6058 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__229>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__229)))Lib__closure__229(x, y)))));
    
    //#line 6066 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 6070 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotTimes(x10_int x,
                                     x10aux::ref<IntMatrix> y) {
    
    //#line 6071 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 6072 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 6074 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6075 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__230>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__230)))Lib__closure__230(x, y)))));
    
    //#line 6083 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 6086 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotTimes(x10aux::ref<IntMatrix> x,
                                     x10_int y) {
    
    //#line 6087 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6088 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6090 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6091 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__231>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__231)))Lib__closure__231(x, y)))));
    
    //#line 6099 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 6126 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::dotDivide(x10_int x, x10_int y) {
    
    //#line 6127 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x10_int) ((x) / (y)));
    
}

//#line 6132 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotDivide(x10aux::ref<IntMatrix> x,
                                      x10aux::ref<IntMatrix> y) {
    
    //#line 6133 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 6134 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 6136 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6137 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6139 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6140 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__232>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__232)))Lib__closure__232(x, y)))));
    
    //#line 6148 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 6152 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotDivide(x10_int x,
                                      x10aux::ref<IntMatrix> y) {
    
    //#line 6153 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 6154 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 6156 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6157 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__233>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__233)))Lib__closure__233(x, y)))));
    
    //#line 6165 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 6168 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotDivide(x10aux::ref<IntMatrix> x,
                                      x10_int y) {
    
    //#line 6169 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6170 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6172 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6173 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__234>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__234)))Lib__closure__234(x, y)))));
    
    //#line 6181 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 6208 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::plus(x10_int x, x10_double y) {
    
    //#line 6209 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((((x10_double) (x))) + (y));
    
}

//#line 6214 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::plus(x10aux::ref<IntMatrix> x,
                                    x10aux::ref<DoubleMatrix> y) {
    
    //#line 6215 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 6216 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 6218 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6219 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6221 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6222 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__235>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__235)))Lib__closure__235(x, y)))));
    
    //#line 6230 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6234 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::plus(x10_int x,
                                    x10aux::ref<DoubleMatrix> y) {
    
    //#line 6235 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 6236 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 6238 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6239 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__236>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__236)))Lib__closure__236(x, y)))));
    
    //#line 6247 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6250 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::plus(x10aux::ref<IntMatrix> x,
                                    x10_double y) {
    
    //#line 6251 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6252 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6254 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6255 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__237>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__237)))Lib__closure__237(x, y)))));
    
    //#line 6263 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6290 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::minus(x10_int x, x10_double y) {
    
    //#line 6291 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((((x10_double) (x))) - (y));
    
}

//#line 6296 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::minus(x10aux::ref<IntMatrix> x,
                                     x10aux::ref<DoubleMatrix> y) {
    
    //#line 6297 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 6298 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 6300 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6301 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6303 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6304 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__238>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__238)))Lib__closure__238(x, y)))));
    
    //#line 6312 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6316 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::minus(x10_int x,
                                     x10aux::ref<DoubleMatrix> y) {
    
    //#line 6317 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 6318 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 6320 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6321 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__239>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__239)))Lib__closure__239(x, y)))));
    
    //#line 6329 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6332 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::minus(x10aux::ref<IntMatrix> x,
                                     x10_double y) {
    
    //#line 6333 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6334 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6336 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6337 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__240>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__240)))Lib__closure__240(x, y)))));
    
    //#line 6345 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6372 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::dotTimes(x10_int x, x10_double y) {
    
    //#line 6373 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((((x10_double) (x))) * (y));
    
}

//#line 6378 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotTimes(x10aux::ref<IntMatrix> x,
                                        x10aux::ref<DoubleMatrix> y) {
    
    //#line 6379 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 6380 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 6382 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6383 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6385 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6386 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__241>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__241)))Lib__closure__241(x, y)))));
    
    //#line 6394 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6398 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotTimes(x10_int x,
                                        x10aux::ref<DoubleMatrix> y) {
    
    //#line 6399 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 6400 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 6402 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6403 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__242>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__242)))Lib__closure__242(x, y)))));
    
    //#line 6411 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6414 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotTimes(x10aux::ref<IntMatrix> x,
                                        x10_double y) {
    
    //#line 6415 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6416 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6418 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6419 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__243>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__243)))Lib__closure__243(x, y)))));
    
    //#line 6427 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6454 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::dotDivide(x10_int x, x10_double y) {
    
    //#line 6455 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((((x10_double) (x))) / (y));
    
}

//#line 6460 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotDivide(
  x10aux::ref<IntMatrix> x,
  x10aux::ref<DoubleMatrix> y) {
    
    //#line 6461 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 6462 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 6464 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6465 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6467 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6468 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__244>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__244)))Lib__closure__244(x, y)))));
    
    //#line 6476 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6480 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotDivide(
  x10_int x,
  x10aux::ref<DoubleMatrix> y) {
    
    //#line 6481 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 6482 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 6484 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6485 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__245>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__245)))Lib__closure__245(x, y)))));
    
    //#line 6493 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6496 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotDivide(
  x10aux::ref<IntMatrix> x,
  x10_double y) {
    
    //#line 6497 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6498 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6500 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6501 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__246>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__246)))Lib__closure__246(x, y)))));
    
    //#line 6509 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6536 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::plus(x10_double x, x10_int y) {
    
    //#line 6537 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x) + (((x10_double) (y))));
    
}

//#line 6542 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::plus(x10aux::ref<DoubleMatrix> x,
                                    x10aux::ref<IntMatrix> y) {
    
    //#line 6543 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 6544 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 6546 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6547 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6549 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6550 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__247>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__247)))Lib__closure__247(x, y)))));
    
    //#line 6558 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6562 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::plus(x10_double x,
                                    x10aux::ref<IntMatrix> y) {
    
    //#line 6563 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 6564 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 6566 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6567 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__248>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__248)))Lib__closure__248(x, y)))));
    
    //#line 6575 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6578 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::plus(x10aux::ref<DoubleMatrix> x,
                                    x10_int y) {
    
    //#line 6579 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6580 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6582 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6583 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__249>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__249)))Lib__closure__249(x, y)))));
    
    //#line 6591 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6618 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::minus(x10_double x, x10_int y) {
    
    //#line 6619 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x) - (((x10_double) (y))));
    
}

//#line 6624 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::minus(x10aux::ref<DoubleMatrix> x,
                                     x10aux::ref<IntMatrix> y) {
    
    //#line 6625 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 6626 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 6628 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6629 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6631 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6632 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__250>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__250)))Lib__closure__250(x, y)))));
    
    //#line 6640 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6644 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::minus(x10_double x,
                                     x10aux::ref<IntMatrix> y) {
    
    //#line 6645 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 6646 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 6648 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6649 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__251>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__251)))Lib__closure__251(x, y)))));
    
    //#line 6657 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6660 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::minus(x10aux::ref<DoubleMatrix> x,
                                     x10_int y) {
    
    //#line 6661 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6662 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6664 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6665 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__252>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__252)))Lib__closure__252(x, y)))));
    
    //#line 6673 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6700 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::dotTimes(x10_double x, x10_int y) {
    
    //#line 6701 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x) * (((x10_double) (y))));
    
}

//#line 6706 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotTimes(x10aux::ref<DoubleMatrix> x,
                                        x10aux::ref<IntMatrix> y) {
    
    //#line 6707 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 6708 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 6710 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6711 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6713 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6714 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__253>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__253)))Lib__closure__253(x, y)))));
    
    //#line 6722 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6726 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotTimes(x10_double x,
                                        x10aux::ref<IntMatrix> y) {
    
    //#line 6727 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 6728 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 6730 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6731 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__254>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__254)))Lib__closure__254(x, y)))));
    
    //#line 6739 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6742 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotTimes(x10aux::ref<DoubleMatrix> x,
                                        x10_int y) {
    
    //#line 6743 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6744 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6746 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6747 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__255>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__255)))Lib__closure__255(x, y)))));
    
    //#line 6755 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6782 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::dotDivide(x10_double x, x10_int y) {
    
    //#line 6783 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x) / (((x10_double) (y))));
    
}

//#line 6788 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotDivide(
  x10aux::ref<DoubleMatrix> x,
  x10aux::ref<IntMatrix> y) {
    
    //#line 6789 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 6790 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 6792 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6793 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6795 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6796 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__256>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__256)))Lib__closure__256(x, y)))));
    
    //#line 6804 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6808 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotDivide(
  x10_double x,
  x10aux::ref<IntMatrix> y) {
    
    //#line 6809 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 6810 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 6812 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6813 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__257>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__257)))Lib__closure__257(x, y)))));
    
    //#line 6821 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6824 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotDivide(
  x10aux::ref<DoubleMatrix> x,
  x10_int y) {
    
    //#line 6825 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6826 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6828 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6829 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__258>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__258)))Lib__closure__258(x, y)))));
    
    //#line 6837 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6864 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::plus(x10_double x, x10_double y) {
    
    //#line 6865 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x) + (y));
    
}

//#line 6870 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::plus(x10aux::ref<DoubleMatrix> x,
                                    x10aux::ref<DoubleMatrix> y) {
    
    //#line 6871 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 6872 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 6874 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6875 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6877 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6878 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__259>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__259)))Lib__closure__259(x, y)))));
    
    //#line 6886 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6890 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::plus(x10_double x,
                                    x10aux::ref<DoubleMatrix> y) {
    
    //#line 6891 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 6892 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 6894 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6895 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__260>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__260)))Lib__closure__260(x, y)))));
    
    //#line 6903 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6906 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::plus(x10aux::ref<DoubleMatrix> x,
                                    x10_double y) {
    
    //#line 6907 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6908 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6910 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6911 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__261>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__261)))Lib__closure__261(x, y)))));
    
    //#line 6919 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6946 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::minus(x10_double x, x10_double y) {
    
    //#line 6947 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x) - (y));
    
}

//#line 6952 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::minus(x10aux::ref<DoubleMatrix> x,
                                     x10aux::ref<DoubleMatrix> y) {
    
    //#line 6953 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 6954 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 6956 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6957 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6959 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6960 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__262>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__262)))Lib__closure__262(x, y)))));
    
    //#line 6968 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6972 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::minus(x10_double x,
                                     x10aux::ref<DoubleMatrix> y) {
    
    //#line 6973 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 6974 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 6976 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6977 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__263>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__263)))Lib__closure__263(x, y)))));
    
    //#line 6985 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 6988 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::minus(x10aux::ref<DoubleMatrix> x,
                                     x10_double y) {
    
    //#line 6989 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 6990 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 6992 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 6993 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__264>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__264)))Lib__closure__264(x, y)))));
    
    //#line 7001 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 7028 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::dotTimes(x10_double x, x10_double y) {
    
    //#line 7029 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x) * (y));
    
}

//#line 7034 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotTimes(x10aux::ref<DoubleMatrix> x,
                                        x10aux::ref<DoubleMatrix> y) {
    
    //#line 7035 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 7036 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 7038 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7039 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7041 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7042 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__265>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__265)))Lib__closure__265(x, y)))));
    
    //#line 7050 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 7054 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotTimes(x10_double x,
                                        x10aux::ref<DoubleMatrix> y) {
    
    //#line 7055 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 7056 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 7058 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7059 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__266>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__266)))Lib__closure__266(x, y)))));
    
    //#line 7067 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 7070 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotTimes(x10aux::ref<DoubleMatrix> x,
                                        x10_double y) {
    
    //#line 7071 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7072 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7074 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7075 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__267>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__267)))Lib__closure__267(x, y)))));
    
    //#line 7083 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 7110 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::dotDivide(x10_double x, x10_double y) {
    
    //#line 7111 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x) / (y));
    
}

//#line 7116 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotDivide(
  x10aux::ref<DoubleMatrix> x,
  x10aux::ref<DoubleMatrix> y) {
    
    //#line 7117 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 7118 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 7120 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7121 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7123 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7124 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__268>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__268)))Lib__closure__268(x, y)))));
    
    //#line 7132 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 7136 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotDivide(
  x10_double x,
  x10aux::ref<DoubleMatrix> y) {
    
    //#line 7137 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 7138 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 7140 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7141 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__269>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__269)))Lib__closure__269(x, y)))));
    
    //#line 7149 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 7152 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotDivide(
  x10aux::ref<DoubleMatrix> x,
  x10_double y) {
    
    //#line 7153 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7154 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7156 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7157 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__270>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__270)))Lib__closure__270(x, y)))));
    
    //#line 7165 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 7192 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::plus(x10_boolean x, x10_int y) {
    
    //#line 7193 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x10_int) ((x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))) + (y)));
    
}

//#line 7195 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::plus(x10_int x, x10_boolean y) {
    
    //#line 7196 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x10_int) ((x) + (y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0)))));
    
}

//#line 7200 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::plus(x10aux::ref<BooleanMatrix> x,
                                 x10aux::ref<IntMatrix> y) {
    
    //#line 7201 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 7202 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 7204 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7205 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7207 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7208 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__271>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__271)))Lib__closure__271(x, y)))));
    
    //#line 7216 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 7218 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::plus(x10aux::ref<IntMatrix> x,
                                 x10aux::ref<BooleanMatrix> y) {
    
    //#line 7219 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 7220 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 7222 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7223 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7225 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7226 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__272>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__272)))Lib__closure__272(x, y)))));
    
    //#line 7234 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 7239 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::plus(x10_boolean x,
                                 x10aux::ref<IntMatrix> y) {
    
    //#line 7240 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 7241 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 7243 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int xv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 7245 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7246 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__273>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__273)))Lib__closure__273(xv, y)))));
    
    //#line 7253 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 7255 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::plus(x10aux::ref<IntMatrix> x,
                                 x10_boolean y) {
    
    //#line 7256 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7257 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7259 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int yv = y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 7261 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7262 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__274>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__274)))Lib__closure__274(x, yv)))));
    
    //#line 7269 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 7280 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::minus(x10_boolean x, x10_int y) {
    
    //#line 7281 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x10_int) ((x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))) - (y)));
    
}

//#line 7283 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::minus(x10_int x, x10_boolean y) {
    
    //#line 7284 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x10_int) ((x) - (y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0)))));
    
}

//#line 7288 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::minus(x10aux::ref<BooleanMatrix> x,
                                  x10aux::ref<IntMatrix> y) {
    
    //#line 7289 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 7290 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 7292 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7293 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7295 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7296 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__275>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__275)))Lib__closure__275(x, y)))));
    
    //#line 7304 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 7306 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::minus(x10aux::ref<IntMatrix> x,
                                  x10aux::ref<BooleanMatrix> y) {
    
    //#line 7307 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 7308 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 7310 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7311 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7313 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7314 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__276>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__276)))Lib__closure__276(x, y)))));
    
    //#line 7322 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 7327 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::minus(x10_boolean x,
                                  x10aux::ref<IntMatrix> y) {
    
    //#line 7328 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 7329 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 7331 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int xv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 7333 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7334 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__277>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__277)))Lib__closure__277(xv, y)))));
    
    //#line 7341 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 7343 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::minus(x10aux::ref<IntMatrix> x,
                                  x10_boolean y) {
    
    //#line 7344 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7345 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7347 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int yv = y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 7349 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7350 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__278>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__278)))Lib__closure__278(x, yv)))));
    
    //#line 7357 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 7368 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::dotTimes(x10_boolean x, x10_int y) {
    
    //#line 7369 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x10_int) ((x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))) * (y)));
    
}

//#line 7371 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::dotTimes(x10_int x, x10_boolean y) {
    
    //#line 7372 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x10_int) ((x) * (y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0)))));
    
}

//#line 7376 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotTimes(x10aux::ref<BooleanMatrix> x,
                                     x10aux::ref<IntMatrix> y) {
    
    //#line 7377 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 7378 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 7380 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7381 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7383 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7384 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__279>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__279)))Lib__closure__279(x, y)))));
    
    //#line 7392 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 7394 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotTimes(x10aux::ref<IntMatrix> x,
                                     x10aux::ref<BooleanMatrix> y) {
    
    //#line 7395 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 7396 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 7398 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7399 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7401 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7402 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__280>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__280)))Lib__closure__280(x, y)))));
    
    //#line 7410 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 7415 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotTimes(x10_boolean x,
                                     x10aux::ref<IntMatrix> y) {
    
    //#line 7416 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 7417 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 7419 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int xv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 7421 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7422 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__281>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__281)))Lib__closure__281(xv, y)))));
    
    //#line 7429 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 7431 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotTimes(x10aux::ref<IntMatrix> x,
                                     x10_boolean y) {
    
    //#line 7432 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7433 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7435 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int yv = y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 7437 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7438 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__282>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__282)))Lib__closure__282(x, yv)))));
    
    //#line 7445 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 7456 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::dotDivide(x10_boolean x, x10_int y) {
    
    //#line 7457 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x10_int) ((x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))) / (y)));
    
}

//#line 7459 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::dotDivide(x10_int x, x10_boolean y) {
    
    //#line 7460 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x10_int) ((x) / (y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0)))));
    
}

//#line 7464 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotDivide(x10aux::ref<BooleanMatrix> x,
                                      x10aux::ref<IntMatrix> y) {
    
    //#line 7465 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 7466 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 7468 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7469 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7471 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7472 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__283>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__283)))Lib__closure__283(x, y)))));
    
    //#line 7480 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 7482 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotDivide(x10aux::ref<IntMatrix> x,
                                      x10aux::ref<BooleanMatrix> y) {
    
    //#line 7483 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 7484 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 7486 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7487 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7489 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7490 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__284>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__284)))Lib__closure__284(x, y)))));
    
    //#line 7498 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 7503 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotDivide(x10_boolean x,
                                      x10aux::ref<IntMatrix> y) {
    
    //#line 7504 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 7505 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 7507 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int xv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 7509 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7510 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__285>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__285)))Lib__closure__285(xv, y)))));
    
    //#line 7517 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 7519 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotDivide(x10aux::ref<IntMatrix> x,
                                      x10_boolean y) {
    
    //#line 7520 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7521 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7523 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int yv = y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 7525 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7526 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__286>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__286)))Lib__closure__286(x, yv)))));
    
    //#line 7533 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 7544 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::plus(x10_boolean x, x10_double y) {
    
    //#line 7545 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((((x10_double) (x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))))) + (y));
    
}

//#line 7547 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::plus(x10_double x, x10_boolean y) {
    
    //#line 7548 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x) + (((x10_double) (y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))))));
    
}

//#line 7552 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::plus(x10aux::ref<BooleanMatrix> x,
                                    x10aux::ref<DoubleMatrix> y) {
    
    //#line 7553 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 7554 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 7556 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7557 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7559 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7560 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__287>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__287)))Lib__closure__287(x, y)))));
    
    //#line 7568 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 7570 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::plus(x10aux::ref<DoubleMatrix> x,
                                    x10aux::ref<BooleanMatrix> y) {
    
    //#line 7571 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 7572 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 7574 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7575 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7577 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7578 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__288>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__288)))Lib__closure__288(x, y)))));
    
    //#line 7586 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 7591 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::plus(x10_boolean x,
                                    x10aux::ref<DoubleMatrix> y) {
    
    //#line 7592 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 7593 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 7595 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int xv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 7597 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7598 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__289>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__289)))Lib__closure__289(xv, y)))));
    
    //#line 7605 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 7607 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::plus(x10aux::ref<DoubleMatrix> x,
                                    x10_boolean y) {
    
    //#line 7608 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7609 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7611 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int yv = y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 7613 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7614 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__290>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__290)))Lib__closure__290(x, yv)))));
    
    //#line 7621 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 7632 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::minus(x10_boolean x, x10_double y) {
    
    //#line 7633 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((((x10_double) (x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))))) - (y));
    
}

//#line 7635 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::minus(x10_double x, x10_boolean y) {
    
    //#line 7636 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x) - (((x10_double) (y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))))));
    
}

//#line 7640 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::minus(x10aux::ref<BooleanMatrix> x,
                                     x10aux::ref<DoubleMatrix> y) {
    
    //#line 7641 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 7642 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 7644 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7645 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7647 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7648 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__291>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__291)))Lib__closure__291(x, y)))));
    
    //#line 7656 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 7658 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::minus(x10aux::ref<DoubleMatrix> x,
                                     x10aux::ref<BooleanMatrix> y) {
    
    //#line 7659 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 7660 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 7662 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7663 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7665 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7666 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__292>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__292)))Lib__closure__292(x, y)))));
    
    //#line 7674 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 7679 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::minus(x10_boolean x,
                                     x10aux::ref<DoubleMatrix> y) {
    
    //#line 7680 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 7681 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 7683 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int xv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 7685 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7686 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__293>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__293)))Lib__closure__293(xv, y)))));
    
    //#line 7693 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 7695 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::minus(x10aux::ref<DoubleMatrix> x,
                                     x10_boolean y) {
    
    //#line 7696 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7697 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7699 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int yv = y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 7701 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7702 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__294>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__294)))Lib__closure__294(x, yv)))));
    
    //#line 7709 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 7720 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::dotTimes(x10_boolean x, x10_double y) {
    
    //#line 7721 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((((x10_double) (x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))))) * (y));
    
}

//#line 7723 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::dotTimes(x10_double x, x10_boolean y) {
    
    //#line 7724 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x) * (((x10_double) (y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))))));
    
}

//#line 7728 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotTimes(x10aux::ref<BooleanMatrix> x,
                                        x10aux::ref<DoubleMatrix> y) {
    
    //#line 7729 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 7730 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 7732 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7733 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7735 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7736 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__295>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__295)))Lib__closure__295(x, y)))));
    
    //#line 7744 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 7746 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotTimes(x10aux::ref<DoubleMatrix> x,
                                        x10aux::ref<BooleanMatrix> y) {
    
    //#line 7747 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 7748 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 7750 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7751 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7753 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7754 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__296>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__296)))Lib__closure__296(x, y)))));
    
    //#line 7762 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 7767 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotTimes(x10_boolean x,
                                        x10aux::ref<DoubleMatrix> y) {
    
    //#line 7768 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 7769 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 7771 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int xv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 7773 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7774 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__297>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__297)))Lib__closure__297(xv, y)))));
    
    //#line 7781 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 7783 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotTimes(x10aux::ref<DoubleMatrix> x,
                                        x10_boolean y) {
    
    //#line 7784 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7785 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7787 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int yv = y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 7789 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7790 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__298>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__298)))Lib__closure__298(x, yv)))));
    
    //#line 7797 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 7808 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::dotDivide(x10_boolean x, x10_double y) {
    
    //#line 7809 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((((x10_double) (x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))))) / (y));
    
}

//#line 7811 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::dotDivide(x10_double x, x10_boolean y) {
    
    //#line 7812 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x) / (((x10_double) (y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0))))));
    
}

//#line 7816 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotDivide(
  x10aux::ref<BooleanMatrix> x,
  x10aux::ref<DoubleMatrix> y) {
    
    //#line 7817 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 7818 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 7820 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7821 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7823 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7824 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__299>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__299)))Lib__closure__299(x, y)))));
    
    //#line 7832 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 7834 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotDivide(
  x10aux::ref<DoubleMatrix> x,
  x10aux::ref<BooleanMatrix> y) {
    
    //#line 7835 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 7836 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 7838 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7839 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7841 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7842 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__300>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__300)))Lib__closure__300(x, y)))));
    
    //#line 7850 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 7855 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotDivide(
  x10_boolean x,
  x10aux::ref<DoubleMatrix> y) {
    
    //#line 7856 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 7857 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 7859 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int xv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 7861 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7862 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__301>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__301)))Lib__closure__301(xv, y)))));
    
    //#line 7869 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 7871 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotDivide(
  x10aux::ref<DoubleMatrix> x,
  x10_boolean y) {
    
    //#line 7872 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7873 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7875 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int yv = y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 7877 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7878 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__302>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__302)))Lib__closure__302(x, yv)))));
    
    //#line 7885 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 7895 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::plus(x10_boolean x, x10_boolean y) {
    
    //#line 7896 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int xv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 7897 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int yv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 7898 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x10_int) ((xv) + (yv)));
    
}

//#line 7902 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::plus(x10aux::ref<BooleanMatrix> x,
                                 x10aux::ref<BooleanMatrix> y) {
    
    //#line 7903 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 7904 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 7906 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7907 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7909 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7910 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__303>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__303)))Lib__closure__303(x, y)))));
    
    //#line 7920 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 7925 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::plus(x10_boolean x,
                                 x10aux::ref<BooleanMatrix> y) {
    
    //#line 7926 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 7927 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 7929 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int xv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 7931 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7932 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__304>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__304)))Lib__closure__304(y, xv)))));
    
    //#line 7941 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 7944 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::plus(x10aux::ref<BooleanMatrix> x,
                                 x10_boolean y) {
    
    //#line 7945 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7946 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7948 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int yv = y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 7950 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7951 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__305>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__305)))Lib__closure__305(x, yv)))));
    
    //#line 7960 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 7970 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::minus(x10_boolean x, x10_boolean y) {
    
    //#line 7971 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int xv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 7972 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int yv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 7973 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x10_int) ((xv) - (yv)));
    
}

//#line 7977 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::minus(x10aux::ref<BooleanMatrix> x,
                                  x10aux::ref<BooleanMatrix> y) {
    
    //#line 7978 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 7979 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 7981 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 7982 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 7984 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 7985 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__306>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__306)))Lib__closure__306(x, y)))));
    
    //#line 7995 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 8000 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::minus(x10_boolean x,
                                  x10aux::ref<BooleanMatrix> y) {
    
    //#line 8001 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 8002 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 8004 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int xv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 8006 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8007 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__307>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__307)))Lib__closure__307(y, xv)))));
    
    //#line 8016 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 8019 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::minus(x10aux::ref<BooleanMatrix> x,
                                  x10_boolean y) {
    
    //#line 8020 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 8021 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 8023 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int yv = y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 8025 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8026 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__308>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__308)))Lib__closure__308(x, yv)))));
    
    //#line 8035 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 8045 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::dotTimes(x10_boolean x, x10_boolean y) {
    
    //#line 8046 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int xv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 8047 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int yv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 8048 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x10_int) ((xv) * (yv)));
    
}

//#line 8052 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotTimes(x10aux::ref<BooleanMatrix> x,
                                     x10aux::ref<BooleanMatrix> y) {
    
    //#line 8053 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 8054 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 8056 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 8057 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 8059 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8060 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__309>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__309)))Lib__closure__309(x, y)))));
    
    //#line 8070 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 8075 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotTimes(x10_boolean x,
                                     x10aux::ref<BooleanMatrix> y) {
    
    //#line 8076 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 8077 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 8079 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int xv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 8081 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8082 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__310>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__310)))Lib__closure__310(y, xv)))));
    
    //#line 8091 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 8094 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotTimes(x10aux::ref<BooleanMatrix> x,
                                     x10_boolean y) {
    
    //#line 8095 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 8096 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 8098 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int yv = y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 8100 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8101 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__311>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__311)))Lib__closure__311(x, yv)))));
    
    //#line 8110 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 8120 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::dotDivide(x10_boolean x, x10_boolean y) {
    
    //#line 8121 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int xv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 8122 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int yv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 8123 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x10_int) ((xv) / (yv)));
    
}

//#line 8127 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotDivide(x10aux::ref<BooleanMatrix> x,
                                      x10aux::ref<BooleanMatrix> y) {
    
    //#line 8128 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 8129 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 8131 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 8132 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 8134 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8135 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__312>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__312)))Lib__closure__312(x, y)))));
    
    //#line 8145 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 8150 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotDivide(x10_boolean x,
                                      x10aux::ref<BooleanMatrix> y) {
    
    //#line 8151 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 8152 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 8154 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int xv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 8156 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8157 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__313>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__313)))Lib__closure__313(y, xv)))));
    
    //#line 8166 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 8169 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotDivide(x10aux::ref<BooleanMatrix> x,
                                      x10_boolean y) {
    
    //#line 8170 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 8171 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 8173 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int yv = y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 8175 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8176 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__314>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__314)))Lib__closure__314(x, yv)))));
    
    //#line 8185 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 8196 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::dotPower(x10_int x, x10_int y) {
    
    //#line 8197 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x10_int) (x10aux::math_utils::pow(((x10_double) (x)),((x10_double) (y)))));
    
}

//#line 8202 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotPower(x10aux::ref<IntMatrix> x,
                                     x10aux::ref<IntMatrix> y) {
    
    //#line 8203 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 8204 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 8206 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 8207 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 8209 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8210 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__315>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__315)))Lib__closure__315(x, y)))));
    
    //#line 8218 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 8222 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotPower(x10_int x,
                                     x10aux::ref<IntMatrix> y) {
    
    //#line 8223 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 8224 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 8226 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8227 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__316>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__316)))Lib__closure__316(x, y)))));
    
    //#line 8235 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 8238 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotPower(x10aux::ref<IntMatrix> x,
                                     x10_int y) {
    
    //#line 8239 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 8240 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 8242 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8243 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__317>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__317)))Lib__closure__317(x, y)))));
    
    //#line 8251 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 8278 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::dotPower(x10_int x, x10_double y) {
    
    //#line 8279 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return x10aux::math_utils::pow(((x10_double) (x)),y);
    
}

//#line 8284 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotPower(x10aux::ref<IntMatrix> x,
                                        x10aux::ref<DoubleMatrix> y) {
    
    //#line 8285 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 8286 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 8288 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 8289 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 8291 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8292 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__318>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__318)))Lib__closure__318(x, y)))));
    
    //#line 8300 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 8304 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotPower(x10_int x,
                                        x10aux::ref<DoubleMatrix> y) {
    
    //#line 8305 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 8306 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 8308 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8309 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__319>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__319)))Lib__closure__319(x, y)))));
    
    //#line 8317 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 8320 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotPower(x10aux::ref<IntMatrix> x,
                                        x10_double y) {
    
    //#line 8321 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 8322 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 8324 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8325 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__320>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__320)))Lib__closure__320(x, y)))));
    
    //#line 8333 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 8360 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::dotPower(x10_double x, x10_int y) {
    
    //#line 8361 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return x10aux::math_utils::pow(x,((x10_double) (y)));
    
}

//#line 8366 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotPower(x10aux::ref<DoubleMatrix> x,
                                        x10aux::ref<IntMatrix> y) {
    
    //#line 8367 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 8368 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 8370 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 8371 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 8373 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8374 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__321>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__321)))Lib__closure__321(x, y)))));
    
    //#line 8382 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 8386 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotPower(x10_double x,
                                        x10aux::ref<IntMatrix> y) {
    
    //#line 8387 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 8388 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 8390 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8391 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__322>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__322)))Lib__closure__322(x, y)))));
    
    //#line 8399 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 8402 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotPower(x10aux::ref<DoubleMatrix> x,
                                        x10_int y) {
    
    //#line 8403 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 8404 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 8406 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8407 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__323>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__323)))Lib__closure__323(x, y)))));
    
    //#line 8415 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 8442 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::dotPower(x10_double x, x10_double y) {
    
    //#line 8443 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return x10aux::math_utils::pow(x,y);
    
}

//#line 8448 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotPower(x10aux::ref<DoubleMatrix> x,
                                        x10aux::ref<DoubleMatrix> y) {
    
    //#line 8449 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 8450 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 8452 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 8453 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 8455 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8456 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__324>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__324)))Lib__closure__324(x, y)))));
    
    //#line 8464 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 8468 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotPower(x10_double x,
                                        x10aux::ref<DoubleMatrix> y) {
    
    //#line 8469 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 8470 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 8472 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8473 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__325>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__325)))Lib__closure__325(x, y)))));
    
    //#line 8481 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 8484 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotPower(x10aux::ref<DoubleMatrix> x,
                                        x10_double y) {
    
    //#line 8485 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 8486 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 8488 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8489 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__326>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__326)))Lib__closure__326(x, y)))));
    
    //#line 8497 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 8524 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::dotPower(x10_boolean x, x10_int y) {
    
    //#line 8525 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x10_int) (x10aux::math_utils::pow(((x10_double) (x
      ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0)))),((x10_double) (y)))));
    
}

//#line 8527 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::dotPower(x10_int x, x10_boolean y) {
    
    //#line 8528 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x10_int) (x10aux::math_utils::pow(((x10_double) (x)),((x10_double) (y
      ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0)))))));
    
}

//#line 8532 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotPower(x10aux::ref<BooleanMatrix> x,
                                     x10aux::ref<IntMatrix> y) {
    
    //#line 8533 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 8534 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 8536 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 8537 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 8539 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8540 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__327>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__327)))Lib__closure__327(x, y)))));
    
    //#line 8550 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 8552 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotPower(x10aux::ref<IntMatrix> x,
                                     x10aux::ref<BooleanMatrix> y) {
    
    //#line 8553 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 8554 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 8556 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 8557 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 8559 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8560 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__328>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__328)))Lib__closure__328(x, y)))));
    
    //#line 8570 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 8575 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotPower(x10_boolean x,
                                     x10aux::ref<IntMatrix> y) {
    
    //#line 8576 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 8577 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 8579 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int xv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 8581 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8582 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__329>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__329)))Lib__closure__329(xv, y)))));
    
    //#line 8589 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 8591 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotPower(x10aux::ref<IntMatrix> x,
                                     x10_boolean y) {
    
    //#line 8592 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 8593 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 8595 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int yv = y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 8597 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8598 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__330>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__330)))Lib__closure__330(x, yv)))));
    
    //#line 8605 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 8617 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::dotPower(x10_boolean x, x10_double y) {
    
    //#line 8618 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return x10aux::math_utils::pow(((x10_double) (x
      ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0)))),y);
    
}

//#line 8620 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_double Lib::dotPower(x10_double x, x10_boolean y) {
    
    //#line 8621 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return x10aux::math_utils::pow(x,((x10_double) (y
      ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0)))));
    
}

//#line 8625 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotPower(x10aux::ref<BooleanMatrix> x,
                                        x10aux::ref<DoubleMatrix> y) {
    
    //#line 8626 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 8627 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 8629 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 8630 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 8632 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8633 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__331>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__331)))Lib__closure__331(x, y)))));
    
    //#line 8643 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 8645 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotPower(x10aux::ref<DoubleMatrix> x,
                                        x10aux::ref<BooleanMatrix> y) {
    
    //#line 8646 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 8647 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 8649 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 8650 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 8652 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8653 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__332>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__332)))Lib__closure__332(x, y)))));
    
    //#line 8663 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 8668 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotPower(x10_boolean x,
                                        x10aux::ref<DoubleMatrix> y) {
    
    //#line 8669 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 8670 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 8672 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int xv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 8674 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8675 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__333>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__333)))Lib__closure__333(xv, y)))));
    
    //#line 8682 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 8684 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<DoubleMatrix> Lib::dotPower(x10aux::ref<DoubleMatrix> x,
                                        x10_boolean y) {
    
    //#line 8685 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 8686 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 8688 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int yv = y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 8690 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8691 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_double> > array =
      x10::array::Array<x10_double>::_make(r,
                                           x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(x10aux::ref<Lib__closure__334>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >(sizeof(Lib__closure__334)))Lib__closure__334(x, yv)))));
    
    //#line 8698 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return DoubleMatrix::_make(array, n, m);
    
}

//#line 8709 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10_int Lib::dotPower(x10_boolean x, x10_boolean y) {
    
    //#line 8710 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int xv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 8711 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int yv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 8712 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return ((x10_int) (x10aux::math_utils::pow(((x10_double) (xv)),((x10_double) (yv)))));
    
}

//#line 8716 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotPower(x10aux::ref<BooleanMatrix> x,
                                     x10aux::ref<BooleanMatrix> y) {
    
    //#line 8717 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10If_c
    if (((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(n),
                                 x10aux::nullCheck(y)->
                                   FMGL(n)))) ||
        ((!x10aux::struct_equals(x10aux::nullCheck(x)->
                                   FMGL(m),
                                 x10aux::nullCheck(y)->
                                   FMGL(m)))))
    {
        
        //#line 8718 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": polyglot.ast.Eval_c
        Lib::error(
          x10aux::string_utils::lit("At + op: Mismatch of Operand Dimensions."));
    }
    
    //#line 8720 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 8721 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 8723 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8724 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__335>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__335)))Lib__closure__335(x, y)))));
    
    //#line 8734 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 8739 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotPower(x10_boolean x,
                                     x10aux::ref<BooleanMatrix> y) {
    
    //#line 8740 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(y)->FMGL(n);
    
    //#line 8741 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(y)->FMGL(m);
    
    //#line 8743 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int xv = x ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 8745 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8746 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__336>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__336)))Lib__closure__336(y, xv)))));
    
    //#line 8755 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 8758 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10MethodDecl_c
x10aux::ref<IntMatrix> Lib::dotPower(x10aux::ref<BooleanMatrix> x,
                                     x10_boolean y) {
    
    //#line 8759 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int n = x10aux::nullCheck(x)->FMGL(n);
    
    //#line 8760 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int m = x10aux::nullCheck(x)->FMGL(m);
    
    //#line 8762 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10_int yv = y ? (x10_int)(((x10_int)1))
      : (x10_int)(((x10_int)0));
    
    //#line 8764 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Region> r = x10aux::nullCheck((x10::array::Region::makeRectangular(
                                                             ((x10_int)0),
                                                             ((x10_int) ((n) - (((x10_int)1)))))))->__times(
                                          x10::array::Region::makeRectangular(
                                            ((x10_int)0),
                                            ((x10_int) ((m) - (((x10_int)1))))));
    
    //#line 8765 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10LocalDecl_c
    x10aux::ref<x10::array::Array<x10_int> > array =
      x10::array::Array<x10_int>::_make(r,
                                        x10aux::class_cast_unchecked<x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> > >(x10aux::ref<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(x10aux::ref<Lib__closure__337>(new (x10aux::alloc<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >(sizeof(Lib__closure__337)))Lib__closure__337(x, yv)))));
    
    //#line 8774 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10Return_c
    return IntMatrix::_make(array, n, m);
    
}

//#line 4 "/media/MOHSENHD/Prog/Library/LesaniLib/src/lesani/x10src/shared/src/Lib.x10": x10.ast.X10ConstructorDecl_c
void Lib::_constructor() {
    this->x10::lang::Object::_constructor();
    {
     
    }
    
}
x10aux::ref<Lib> Lib::_make() {
    x10aux::ref<Lib> this_ = new (memset(x10aux::alloc<Lib>(), 0, sizeof(Lib))) Lib();
    this_->_constructor();
    return this_;
}


const x10aux::serialization_id_t Lib::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib::_deserializer<x10::lang::Reference>);

void Lib::_serialize_body(x10aux::serialization_buffer& buf) {
    x10::lang::Object::_serialize_body(buf);
    
}

void Lib::_deserialize_body(x10aux::deserialization_buffer& buf) {
    x10::lang::Object::_deserialize_body(buf);
    
}

x10aux::RuntimeType Lib::rtt;
void Lib::_initRTT() {
    if (rtt.initStageOne(&rtt)) return;
    const x10aux::RuntimeType* parents[1] = { x10aux::getRTT<x10::lang::Object>()};
    rtt.initStageTwo("Lib", 1, parents, 0, NULL, NULL);
}
x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__0>Lib__closure__0::_itable(&Lib__closure__0::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__0::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__0::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__0::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__0::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__0::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__1>Lib__closure__1::_itable(&Lib__closure__1::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__1::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__1::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__1::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__1::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__1::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__2>Lib__closure__2::_itable(&Lib__closure__2::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__2::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__2::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__2::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__2::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__2::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__3>Lib__closure__3::_itable(&Lib__closure__3::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__3::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__3::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__3::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__3::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__3::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__4>Lib__closure__4::_itable(&Lib__closure__4::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__4::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__4::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__4::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__4::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__4::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__5>Lib__closure__5::_itable(&Lib__closure__5::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__5::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__5::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__5::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__5::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__5::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__6>Lib__closure__6::_itable(&Lib__closure__6::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__6::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__6::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__6::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__6::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__6::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__7>Lib__closure__7::_itable(&Lib__closure__7::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__7::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__7::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__7::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__7::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__7::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__8>Lib__closure__8::_itable(&Lib__closure__8::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__8::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__8::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__8::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__8::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__8::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__9>Lib__closure__9::_itable(&Lib__closure__9::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__9::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__9::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__9::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__9::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__9::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__10>Lib__closure__10::_itable(&Lib__closure__10::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__10::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__10::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__10::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__10::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__10::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__11>Lib__closure__11::_itable(&Lib__closure__11::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__11::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__11::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__11::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__11::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__11::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__12>Lib__closure__12::_itable(&Lib__closure__12::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__12::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__12::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__12::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__12::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__12::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__13>Lib__closure__13::_itable(&Lib__closure__13::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__13::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__13::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__13::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__13::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__13::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__14>Lib__closure__14::_itable(&Lib__closure__14::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__14::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__14::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__14::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__14::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__14::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__15>Lib__closure__15::_itable(&Lib__closure__15::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__15::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__15::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__15::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__15::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__15::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__16>Lib__closure__16::_itable(&Lib__closure__16::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__16::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__16::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__16::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__16::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__16::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__17>Lib__closure__17::_itable(&Lib__closure__17::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__17::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__17::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__17::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__17::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__17::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__18>Lib__closure__18::_itable(&Lib__closure__18::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__18::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__18::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__18::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__18::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__18::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__19>Lib__closure__19::_itable(&Lib__closure__19::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__19::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__19::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__19::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__19::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__19::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__20>Lib__closure__20::_itable(&Lib__closure__20::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__20::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__20::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__20::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__20::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__20::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__21>Lib__closure__21::_itable(&Lib__closure__21::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__21::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__21::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__21::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__21::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__21::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__22>Lib__closure__22::_itable(&Lib__closure__22::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__22::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__22::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__22::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__22::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__22::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__23>Lib__closure__23::_itable(&Lib__closure__23::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__23::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__23::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__23::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__23::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__23::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__24>Lib__closure__24::_itable(&Lib__closure__24::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__24::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__24::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__24::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__24::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__24::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__25>Lib__closure__25::_itable(&Lib__closure__25::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__25::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__25::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__25::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__25::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__25::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__26>Lib__closure__26::_itable(&Lib__closure__26::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__26::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__26::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__26::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__26::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__26::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__27>Lib__closure__27::_itable(&Lib__closure__27::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__27::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__27::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__27::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__27::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__27::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__28>Lib__closure__28::_itable(&Lib__closure__28::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__28::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__28::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__28::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__28::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__28::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__29>Lib__closure__29::_itable(&Lib__closure__29::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__29::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__29::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__29::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__29::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__29::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__30>Lib__closure__30::_itable(&Lib__closure__30::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__30::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__30::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__30::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__30::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__30::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__31>Lib__closure__31::_itable(&Lib__closure__31::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__31::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__31::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__31::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__31::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__31::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__32>Lib__closure__32::_itable(&Lib__closure__32::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__32::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__32::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__32::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__32::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__32::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__33>Lib__closure__33::_itable(&Lib__closure__33::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__33::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__33::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__33::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__33::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__33::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__34>Lib__closure__34::_itable(&Lib__closure__34::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__34::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__34::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__34::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__34::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__34::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__35>Lib__closure__35::_itable(&Lib__closure__35::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__35::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__35::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__35::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__35::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__35::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__36>Lib__closure__36::_itable(&Lib__closure__36::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__36::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__36::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__36::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__36::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__36::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__37>Lib__closure__37::_itable(&Lib__closure__37::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__37::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__37::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__37::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__37::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__37::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__38>Lib__closure__38::_itable(&Lib__closure__38::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__38::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__38::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__38::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__38::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__38::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__39>Lib__closure__39::_itable(&Lib__closure__39::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__39::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__39::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__39::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__39::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__39::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__40>Lib__closure__40::_itable(&Lib__closure__40::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__40::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__40::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__40::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__40::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__40::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__41>Lib__closure__41::_itable(&Lib__closure__41::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__41::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__41::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__41::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__41::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__41::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__42>Lib__closure__42::_itable(&Lib__closure__42::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__42::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__42::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__42::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__42::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__42::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__43>Lib__closure__43::_itable(&Lib__closure__43::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__43::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__43::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__43::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__43::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__43::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__44>Lib__closure__44::_itable(&Lib__closure__44::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__44::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__44::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__44::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__44::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__44::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__45>Lib__closure__45::_itable(&Lib__closure__45::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__45::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__45::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__45::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__45::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__45::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__46>Lib__closure__46::_itable(&Lib__closure__46::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__46::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__46::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__46::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__46::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__46::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__47>Lib__closure__47::_itable(&Lib__closure__47::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__47::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__47::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__47::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__47::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__47::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__48>Lib__closure__48::_itable(&Lib__closure__48::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__48::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__48::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__48::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__48::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__48::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__49>Lib__closure__49::_itable(&Lib__closure__49::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__49::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__49::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__49::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__49::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__49::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__50>Lib__closure__50::_itable(&Lib__closure__50::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__50::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__50::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__50::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__50::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__50::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__51>Lib__closure__51::_itable(&Lib__closure__51::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__51::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__51::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__51::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__51::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__51::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__52>Lib__closure__52::_itable(&Lib__closure__52::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__52::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__52::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__52::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__52::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__52::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__53>Lib__closure__53::_itable(&Lib__closure__53::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__53::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__53::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__53::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__53::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__53::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__54>Lib__closure__54::_itable(&Lib__closure__54::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__54::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__54::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__54::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__54::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__54::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__55>Lib__closure__55::_itable(&Lib__closure__55::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__55::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__55::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__55::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__55::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__55::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__56>Lib__closure__56::_itable(&Lib__closure__56::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__56::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__56::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__56::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__56::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__56::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__57>Lib__closure__57::_itable(&Lib__closure__57::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__57::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__57::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__57::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__57::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__57::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__58>Lib__closure__58::_itable(&Lib__closure__58::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__58::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__58::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__58::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__58::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__58::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__59>Lib__closure__59::_itable(&Lib__closure__59::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__59::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__59::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__59::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__59::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__59::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__60>Lib__closure__60::_itable(&Lib__closure__60::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__60::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__60::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__60::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__60::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__60::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__61>Lib__closure__61::_itable(&Lib__closure__61::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__61::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__61::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__61::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__61::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__61::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__62>Lib__closure__62::_itable(&Lib__closure__62::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__62::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__62::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__62::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__62::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__62::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__63>Lib__closure__63::_itable(&Lib__closure__63::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__63::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__63::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__63::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__63::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__63::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__64>Lib__closure__64::_itable(&Lib__closure__64::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__64::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__64::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__64::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__64::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__64::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__65>Lib__closure__65::_itable(&Lib__closure__65::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__65::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__65::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__65::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__65::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__65::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__66>Lib__closure__66::_itable(&Lib__closure__66::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__66::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__66::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__66::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__66::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__66::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__67>Lib__closure__67::_itable(&Lib__closure__67::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__67::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__67::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__67::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__67::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__67::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__68>Lib__closure__68::_itable(&Lib__closure__68::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__68::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__68::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__68::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__68::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__68::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__69>Lib__closure__69::_itable(&Lib__closure__69::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__69::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__69::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__69::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__69::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__69::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__70>Lib__closure__70::_itable(&Lib__closure__70::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__70::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__70::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__70::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__70::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__70::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__71>Lib__closure__71::_itable(&Lib__closure__71::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__71::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__71::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__71::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__71::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__71::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__72>Lib__closure__72::_itable(&Lib__closure__72::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__72::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__72::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__72::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__72::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__72::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__73>Lib__closure__73::_itable(&Lib__closure__73::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__73::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__73::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__73::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__73::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__73::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__74>Lib__closure__74::_itable(&Lib__closure__74::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__74::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__74::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__74::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__74::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__74::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__75>Lib__closure__75::_itable(&Lib__closure__75::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__75::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__75::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__75::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__75::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__75::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__76>Lib__closure__76::_itable(&Lib__closure__76::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__76::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__76::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__76::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__76::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__76::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__77>Lib__closure__77::_itable(&Lib__closure__77::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__77::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__77::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__77::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__77::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__77::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__78>Lib__closure__78::_itable(&Lib__closure__78::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__78::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__78::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__78::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__78::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__78::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__79>Lib__closure__79::_itable(&Lib__closure__79::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__79::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__79::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__79::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__79::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__79::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__80>Lib__closure__80::_itable(&Lib__closure__80::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__80::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__80::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__80::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__80::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__80::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__81>Lib__closure__81::_itable(&Lib__closure__81::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__81::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__81::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__81::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__81::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__81::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__82>Lib__closure__82::_itable(&Lib__closure__82::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__82::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__82::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__82::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__82::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__82::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__83>Lib__closure__83::_itable(&Lib__closure__83::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__83::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__83::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__83::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__83::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__83::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__84>Lib__closure__84::_itable(&Lib__closure__84::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__84::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__84::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__84::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__84::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__84::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__85>Lib__closure__85::_itable(&Lib__closure__85::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__85::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__85::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__85::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__85::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__85::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__86>Lib__closure__86::_itable(&Lib__closure__86::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__86::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__86::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__86::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__86::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__86::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__87>Lib__closure__87::_itable(&Lib__closure__87::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__87::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__87::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__87::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__87::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__87::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__88>Lib__closure__88::_itable(&Lib__closure__88::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__88::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__88::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__88::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__88::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__88::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__89>Lib__closure__89::_itable(&Lib__closure__89::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__89::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__89::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__89::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__89::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__89::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__90>Lib__closure__90::_itable(&Lib__closure__90::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__90::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__90::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__90::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__90::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__90::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__91>Lib__closure__91::_itable(&Lib__closure__91::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__91::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__91::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__91::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__91::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__91::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__92>Lib__closure__92::_itable(&Lib__closure__92::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__92::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__92::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__92::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__92::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__92::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__93>Lib__closure__93::_itable(&Lib__closure__93::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__93::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__93::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__93::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__93::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__93::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__94>Lib__closure__94::_itable(&Lib__closure__94::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__94::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__94::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__94::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__94::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__94::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__95>Lib__closure__95::_itable(&Lib__closure__95::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__95::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__95::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__95::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__95::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__95::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__96>Lib__closure__96::_itable(&Lib__closure__96::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__96::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__96::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__96::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__96::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__96::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__97>Lib__closure__97::_itable(&Lib__closure__97::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__97::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__97::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__97::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__97::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__97::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__98>Lib__closure__98::_itable(&Lib__closure__98::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__98::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__98::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__98::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__98::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__98::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__99>Lib__closure__99::_itable(&Lib__closure__99::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__99::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__99::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__99::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__99::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__99::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__100>Lib__closure__100::_itable(&Lib__closure__100::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__100::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__100::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__100::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__100::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__100::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__101>Lib__closure__101::_itable(&Lib__closure__101::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__101::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__101::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__101::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__101::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__101::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__102>Lib__closure__102::_itable(&Lib__closure__102::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__102::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__102::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__102::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__102::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__102::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__103>Lib__closure__103::_itable(&Lib__closure__103::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__103::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__103::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__103::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__103::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__103::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__104>Lib__closure__104::_itable(&Lib__closure__104::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__104::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__104::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__104::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__104::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__104::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__105>Lib__closure__105::_itable(&Lib__closure__105::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__105::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__105::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__105::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__105::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__105::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__106>Lib__closure__106::_itable(&Lib__closure__106::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__106::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__106::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__106::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__106::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__106::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__107>Lib__closure__107::_itable(&Lib__closure__107::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__107::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__107::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__107::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__107::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__107::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__108>Lib__closure__108::_itable(&Lib__closure__108::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__108::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__108::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__108::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__108::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__108::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__109>Lib__closure__109::_itable(&Lib__closure__109::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__109::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__109::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__109::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__109::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__109::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__110>Lib__closure__110::_itable(&Lib__closure__110::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__110::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__110::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__110::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__110::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__110::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__111>Lib__closure__111::_itable(&Lib__closure__111::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__111::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__111::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__111::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__111::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__111::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__112>Lib__closure__112::_itable(&Lib__closure__112::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__112::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__112::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__112::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__112::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__112::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__113>Lib__closure__113::_itable(&Lib__closure__113::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__113::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__113::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__113::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__113::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__113::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__114>Lib__closure__114::_itable(&Lib__closure__114::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__114::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__114::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__114::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__114::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__114::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__115>Lib__closure__115::_itable(&Lib__closure__115::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__115::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__115::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__115::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__115::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__115::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__116>Lib__closure__116::_itable(&Lib__closure__116::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__116::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__116::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__116::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__116::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__116::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__117>Lib__closure__117::_itable(&Lib__closure__117::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__117::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__117::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__117::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__117::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__117::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__118>Lib__closure__118::_itable(&Lib__closure__118::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__118::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__118::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__118::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__118::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__118::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__119>Lib__closure__119::_itable(&Lib__closure__119::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__119::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__119::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__119::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__119::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__119::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__120>Lib__closure__120::_itable(&Lib__closure__120::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__120::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__120::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__120::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__120::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__120::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__121>Lib__closure__121::_itable(&Lib__closure__121::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__121::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__121::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__121::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__121::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__121::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__122>Lib__closure__122::_itable(&Lib__closure__122::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__122::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__122::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__122::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__122::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__122::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__123>Lib__closure__123::_itable(&Lib__closure__123::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__123::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__123::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__123::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__123::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__123::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__124>Lib__closure__124::_itable(&Lib__closure__124::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__124::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__124::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__124::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__124::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__124::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__125>Lib__closure__125::_itable(&Lib__closure__125::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__125::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__125::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__125::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__125::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__125::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__126>Lib__closure__126::_itable(&Lib__closure__126::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__126::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__126::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__126::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__126::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__126::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__127>Lib__closure__127::_itable(&Lib__closure__127::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__127::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__127::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__127::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__127::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__127::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__128>Lib__closure__128::_itable(&Lib__closure__128::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__128::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__128::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__128::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__128::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__128::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__129>Lib__closure__129::_itable(&Lib__closure__129::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__129::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__129::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__129::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__129::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__129::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__130>Lib__closure__130::_itable(&Lib__closure__130::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__130::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__130::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__130::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__130::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__130::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__131>Lib__closure__131::_itable(&Lib__closure__131::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__131::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__131::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__131::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__131::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__131::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__132>Lib__closure__132::_itable(&Lib__closure__132::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__132::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__132::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__132::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__132::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__132::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__133>Lib__closure__133::_itable(&Lib__closure__133::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__133::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__133::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__133::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__133::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__133::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__134>Lib__closure__134::_itable(&Lib__closure__134::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__134::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__134::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__134::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__134::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__134::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__135>Lib__closure__135::_itable(&Lib__closure__135::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__135::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__135::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__135::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__135::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__135::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__136>Lib__closure__136::_itable(&Lib__closure__136::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__136::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__136::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__136::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__136::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__136::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__137>Lib__closure__137::_itable(&Lib__closure__137::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__137::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__137::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__137::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__137::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__137::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__138>Lib__closure__138::_itable(&Lib__closure__138::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__138::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__138::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__138::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__138::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__138::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__139>Lib__closure__139::_itable(&Lib__closure__139::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__139::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__139::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__139::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__139::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__139::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__140>Lib__closure__140::_itable(&Lib__closure__140::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__140::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__140::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__140::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__140::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__140::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__141>Lib__closure__141::_itable(&Lib__closure__141::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__141::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__141::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__141::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__141::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__141::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__142>Lib__closure__142::_itable(&Lib__closure__142::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__142::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__142::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__142::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__142::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__142::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__143>Lib__closure__143::_itable(&Lib__closure__143::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__143::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__143::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__143::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__143::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__143::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__144>Lib__closure__144::_itable(&Lib__closure__144::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__144::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__144::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__144::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__144::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__144::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__145>Lib__closure__145::_itable(&Lib__closure__145::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__145::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__145::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__145::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__145::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__145::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__146>Lib__closure__146::_itable(&Lib__closure__146::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__146::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__146::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__146::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__146::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__146::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__147>Lib__closure__147::_itable(&Lib__closure__147::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__147::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__147::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__147::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__147::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__147::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__148>Lib__closure__148::_itable(&Lib__closure__148::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__148::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__148::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__148::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__148::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__148::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__149>Lib__closure__149::_itable(&Lib__closure__149::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__149::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__149::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__149::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__149::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__149::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__150>Lib__closure__150::_itable(&Lib__closure__150::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__150::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__150::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__150::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__150::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__150::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__151>Lib__closure__151::_itable(&Lib__closure__151::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__151::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__151::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__151::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__151::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__151::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__152>Lib__closure__152::_itable(&Lib__closure__152::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__152::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__152::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__152::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__152::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__152::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__153>Lib__closure__153::_itable(&Lib__closure__153::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__153::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__153::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__153::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__153::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__153::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__154>Lib__closure__154::_itable(&Lib__closure__154::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__154::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__154::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__154::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__154::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__154::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__155>Lib__closure__155::_itable(&Lib__closure__155::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__155::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__155::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__155::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__155::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__155::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__156>Lib__closure__156::_itable(&Lib__closure__156::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__156::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__156::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__156::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__156::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__156::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__157>Lib__closure__157::_itable(&Lib__closure__157::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__157::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__157::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__157::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__157::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__157::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__158>Lib__closure__158::_itable(&Lib__closure__158::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__158::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__158::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__158::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__158::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__158::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__159>Lib__closure__159::_itable(&Lib__closure__159::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__159::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__159::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__159::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__159::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__159::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__160>Lib__closure__160::_itable(&Lib__closure__160::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__160::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__160::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__160::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__160::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__160::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__161>Lib__closure__161::_itable(&Lib__closure__161::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__161::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__161::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__161::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__161::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__161::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__162>Lib__closure__162::_itable(&Lib__closure__162::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__162::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__162::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__162::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__162::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__162::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__163>Lib__closure__163::_itable(&Lib__closure__163::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__163::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__163::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__163::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__163::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__163::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__164>Lib__closure__164::_itable(&Lib__closure__164::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__164::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__164::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__164::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__164::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__164::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__165>Lib__closure__165::_itable(&Lib__closure__165::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__165::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__165::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__165::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__165::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__165::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__166>Lib__closure__166::_itable(&Lib__closure__166::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__166::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__166::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__166::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__166::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__166::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__167>Lib__closure__167::_itable(&Lib__closure__167::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__167::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__167::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__167::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__167::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__167::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__168>Lib__closure__168::_itable(&Lib__closure__168::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__168::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__168::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__168::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__168::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__168::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__169>Lib__closure__169::_itable(&Lib__closure__169::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__169::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__169::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__169::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__169::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__169::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__170>Lib__closure__170::_itable(&Lib__closure__170::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__170::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__170::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__170::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__170::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__170::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__171>Lib__closure__171::_itable(&Lib__closure__171::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__171::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__171::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__171::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__171::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__171::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__172>Lib__closure__172::_itable(&Lib__closure__172::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__172::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__172::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__172::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__172::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__172::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__173>Lib__closure__173::_itable(&Lib__closure__173::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__173::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__173::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__173::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__173::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__173::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__174>Lib__closure__174::_itable(&Lib__closure__174::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__174::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__174::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__174::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__174::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__174::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__175>Lib__closure__175::_itable(&Lib__closure__175::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__175::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__175::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__175::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__175::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__175::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__176>Lib__closure__176::_itable(&Lib__closure__176::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__176::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__176::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__176::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__176::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__176::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__177>Lib__closure__177::_itable(&Lib__closure__177::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__177::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__177::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__177::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__177::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__177::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__178>Lib__closure__178::_itable(&Lib__closure__178::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__178::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__178::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__178::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__178::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__178::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__179>Lib__closure__179::_itable(&Lib__closure__179::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__179::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__179::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__179::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__179::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__179::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__180>Lib__closure__180::_itable(&Lib__closure__180::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__180::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__180::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__180::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__180::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__180::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__181>Lib__closure__181::_itable(&Lib__closure__181::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__181::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__181::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__181::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__181::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__181::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__182>Lib__closure__182::_itable(&Lib__closure__182::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__182::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__182::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__182::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__182::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__182::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__183>Lib__closure__183::_itable(&Lib__closure__183::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__183::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__183::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__183::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__183::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__183::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__184>Lib__closure__184::_itable(&Lib__closure__184::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__184::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__184::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__184::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__184::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__184::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__185>Lib__closure__185::_itable(&Lib__closure__185::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__185::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__185::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__185::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__185::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__185::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__186>Lib__closure__186::_itable(&Lib__closure__186::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__186::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__186::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__186::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__186::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__186::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__187>Lib__closure__187::_itable(&Lib__closure__187::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__187::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__187::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__187::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__187::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__187::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__188>Lib__closure__188::_itable(&Lib__closure__188::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__188::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__188::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__188::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__188::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__188::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__189>Lib__closure__189::_itable(&Lib__closure__189::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__189::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__189::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__189::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__189::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__189::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__190>Lib__closure__190::_itable(&Lib__closure__190::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__190::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__190::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__190::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__190::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__190::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__191>Lib__closure__191::_itable(&Lib__closure__191::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__191::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__191::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__191::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__191::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__191::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__192>Lib__closure__192::_itable(&Lib__closure__192::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__192::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__192::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__192::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__192::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__192::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__193>Lib__closure__193::_itable(&Lib__closure__193::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__193::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__193::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__193::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__193::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__193::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__194>Lib__closure__194::_itable(&Lib__closure__194::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__194::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__194::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__194::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__194::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__194::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__195>Lib__closure__195::_itable(&Lib__closure__195::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__195::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__195::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__195::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__195::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__195::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__196>Lib__closure__196::_itable(&Lib__closure__196::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__196::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__196::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__196::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__196::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__196::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__197>Lib__closure__197::_itable(&Lib__closure__197::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__197::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__197::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__197::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__197::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__197::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__198>Lib__closure__198::_itable(&Lib__closure__198::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__198::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__198::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__198::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__198::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__198::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__199>Lib__closure__199::_itable(&Lib__closure__199::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__199::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__199::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__199::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__199::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__199::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__200>Lib__closure__200::_itable(&Lib__closure__200::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__200::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__200::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__200::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__200::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__200::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__201>Lib__closure__201::_itable(&Lib__closure__201::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__201::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__201::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__201::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__201::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__201::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__202>Lib__closure__202::_itable(&Lib__closure__202::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__202::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__202::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__202::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__202::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__202::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__203>Lib__closure__203::_itable(&Lib__closure__203::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__203::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__203::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__203::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__203::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__203::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__204>Lib__closure__204::_itable(&Lib__closure__204::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__204::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__204::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__204::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__204::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__204::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__205>Lib__closure__205::_itable(&Lib__closure__205::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__205::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__205::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__205::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__205::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__205::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__206>Lib__closure__206::_itable(&Lib__closure__206::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__206::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__206::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__206::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__206::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__206::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__207>Lib__closure__207::_itable(&Lib__closure__207::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__207::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__207::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__207::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__207::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__207::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__208>Lib__closure__208::_itable(&Lib__closure__208::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__208::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__208::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__208::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__208::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__208::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__209>Lib__closure__209::_itable(&Lib__closure__209::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__209::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__209::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__209::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__209::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__209::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__210>Lib__closure__210::_itable(&Lib__closure__210::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__210::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__210::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__210::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__210::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__210::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__211>Lib__closure__211::_itable(&Lib__closure__211::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__211::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__211::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__211::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__211::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__211::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__212>Lib__closure__212::_itable(&Lib__closure__212::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__212::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__212::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__212::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__212::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__212::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__213>Lib__closure__213::_itable(&Lib__closure__213::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__213::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__213::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__213::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__213::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__213::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__214>Lib__closure__214::_itable(&Lib__closure__214::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__214::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__214::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__214::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__214::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__214::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__215>Lib__closure__215::_itable(&Lib__closure__215::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__215::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__215::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__215::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__215::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__215::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__216>Lib__closure__216::_itable(&Lib__closure__216::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__216::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__216::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__216::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__216::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__216::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__217>Lib__closure__217::_itable(&Lib__closure__217::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__217::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__217::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__217::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__217::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__217::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__218>Lib__closure__218::_itable(&Lib__closure__218::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__218::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__218::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__218::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__218::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__218::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__219>Lib__closure__219::_itable(&Lib__closure__219::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__219::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__219::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__219::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__219::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__219::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__220>Lib__closure__220::_itable(&Lib__closure__220::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__220::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__220::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__220::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__220::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__220::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__221>Lib__closure__221::_itable(&Lib__closure__221::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__221::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__221::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__221::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__221::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__221::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean>::itable<Lib__closure__222>Lib__closure__222::_itable(&Lib__closure__222::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__222::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__222::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_boolean> >, &Lib__closure__222::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__222::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__222::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__223>Lib__closure__223::_itable(&Lib__closure__223::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__223::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__223::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__223::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__223::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__223::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__224>Lib__closure__224::_itable(&Lib__closure__224::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__224::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__224::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__224::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__224::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__224::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__225>Lib__closure__225::_itable(&Lib__closure__225::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__225::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__225::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__225::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__225::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__225::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__226>Lib__closure__226::_itable(&Lib__closure__226::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__226::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__226::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__226::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__226::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__226::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__227>Lib__closure__227::_itable(&Lib__closure__227::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__227::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__227::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__227::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__227::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__227::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__228>Lib__closure__228::_itable(&Lib__closure__228::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__228::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__228::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__228::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__228::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__228::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__229>Lib__closure__229::_itable(&Lib__closure__229::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__229::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__229::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__229::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__229::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__229::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__230>Lib__closure__230::_itable(&Lib__closure__230::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__230::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__230::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__230::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__230::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__230::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__231>Lib__closure__231::_itable(&Lib__closure__231::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__231::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__231::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__231::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__231::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__231::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__232>Lib__closure__232::_itable(&Lib__closure__232::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__232::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__232::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__232::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__232::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__232::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__233>Lib__closure__233::_itable(&Lib__closure__233::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__233::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__233::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__233::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__233::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__233::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__234>Lib__closure__234::_itable(&Lib__closure__234::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__234::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__234::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__234::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__234::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__234::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__235>Lib__closure__235::_itable(&Lib__closure__235::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__235::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__235::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__235::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__235::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__235::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__236>Lib__closure__236::_itable(&Lib__closure__236::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__236::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__236::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__236::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__236::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__236::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__237>Lib__closure__237::_itable(&Lib__closure__237::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__237::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__237::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__237::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__237::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__237::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__238>Lib__closure__238::_itable(&Lib__closure__238::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__238::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__238::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__238::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__238::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__238::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__239>Lib__closure__239::_itable(&Lib__closure__239::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__239::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__239::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__239::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__239::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__239::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__240>Lib__closure__240::_itable(&Lib__closure__240::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__240::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__240::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__240::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__240::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__240::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__241>Lib__closure__241::_itable(&Lib__closure__241::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__241::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__241::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__241::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__241::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__241::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__242>Lib__closure__242::_itable(&Lib__closure__242::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__242::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__242::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__242::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__242::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__242::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__243>Lib__closure__243::_itable(&Lib__closure__243::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__243::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__243::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__243::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__243::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__243::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__244>Lib__closure__244::_itable(&Lib__closure__244::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__244::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__244::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__244::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__244::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__244::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__245>Lib__closure__245::_itable(&Lib__closure__245::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__245::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__245::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__245::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__245::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__245::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__246>Lib__closure__246::_itable(&Lib__closure__246::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__246::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__246::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__246::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__246::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__246::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__247>Lib__closure__247::_itable(&Lib__closure__247::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__247::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__247::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__247::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__247::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__247::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__248>Lib__closure__248::_itable(&Lib__closure__248::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__248::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__248::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__248::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__248::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__248::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__249>Lib__closure__249::_itable(&Lib__closure__249::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__249::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__249::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__249::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__249::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__249::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__250>Lib__closure__250::_itable(&Lib__closure__250::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__250::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__250::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__250::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__250::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__250::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__251>Lib__closure__251::_itable(&Lib__closure__251::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__251::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__251::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__251::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__251::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__251::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__252>Lib__closure__252::_itable(&Lib__closure__252::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__252::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__252::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__252::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__252::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__252::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__253>Lib__closure__253::_itable(&Lib__closure__253::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__253::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__253::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__253::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__253::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__253::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__254>Lib__closure__254::_itable(&Lib__closure__254::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__254::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__254::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__254::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__254::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__254::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__255>Lib__closure__255::_itable(&Lib__closure__255::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__255::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__255::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__255::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__255::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__255::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__256>Lib__closure__256::_itable(&Lib__closure__256::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__256::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__256::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__256::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__256::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__256::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__257>Lib__closure__257::_itable(&Lib__closure__257::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__257::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__257::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__257::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__257::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__257::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__258>Lib__closure__258::_itable(&Lib__closure__258::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__258::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__258::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__258::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__258::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__258::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__259>Lib__closure__259::_itable(&Lib__closure__259::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__259::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__259::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__259::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__259::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__259::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__260>Lib__closure__260::_itable(&Lib__closure__260::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__260::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__260::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__260::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__260::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__260::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__261>Lib__closure__261::_itable(&Lib__closure__261::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__261::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__261::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__261::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__261::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__261::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__262>Lib__closure__262::_itable(&Lib__closure__262::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__262::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__262::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__262::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__262::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__262::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__263>Lib__closure__263::_itable(&Lib__closure__263::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__263::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__263::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__263::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__263::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__263::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__264>Lib__closure__264::_itable(&Lib__closure__264::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__264::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__264::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__264::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__264::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__264::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__265>Lib__closure__265::_itable(&Lib__closure__265::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__265::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__265::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__265::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__265::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__265::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__266>Lib__closure__266::_itable(&Lib__closure__266::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__266::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__266::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__266::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__266::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__266::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__267>Lib__closure__267::_itable(&Lib__closure__267::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__267::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__267::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__267::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__267::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__267::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__268>Lib__closure__268::_itable(&Lib__closure__268::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__268::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__268::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__268::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__268::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__268::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__269>Lib__closure__269::_itable(&Lib__closure__269::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__269::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__269::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__269::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__269::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__269::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__270>Lib__closure__270::_itable(&Lib__closure__270::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__270::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__270::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__270::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__270::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__270::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__271>Lib__closure__271::_itable(&Lib__closure__271::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__271::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__271::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__271::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__271::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__271::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__272>Lib__closure__272::_itable(&Lib__closure__272::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__272::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__272::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__272::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__272::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__272::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__273>Lib__closure__273::_itable(&Lib__closure__273::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__273::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__273::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__273::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__273::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__273::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__274>Lib__closure__274::_itable(&Lib__closure__274::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__274::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__274::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__274::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__274::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__274::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__275>Lib__closure__275::_itable(&Lib__closure__275::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__275::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__275::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__275::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__275::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__275::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__276>Lib__closure__276::_itable(&Lib__closure__276::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__276::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__276::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__276::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__276::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__276::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__277>Lib__closure__277::_itable(&Lib__closure__277::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__277::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__277::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__277::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__277::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__277::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__278>Lib__closure__278::_itable(&Lib__closure__278::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__278::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__278::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__278::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__278::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__278::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__279>Lib__closure__279::_itable(&Lib__closure__279::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__279::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__279::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__279::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__279::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__279::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__280>Lib__closure__280::_itable(&Lib__closure__280::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__280::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__280::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__280::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__280::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__280::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__281>Lib__closure__281::_itable(&Lib__closure__281::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__281::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__281::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__281::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__281::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__281::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__282>Lib__closure__282::_itable(&Lib__closure__282::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__282::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__282::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__282::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__282::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__282::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__283>Lib__closure__283::_itable(&Lib__closure__283::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__283::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__283::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__283::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__283::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__283::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__284>Lib__closure__284::_itable(&Lib__closure__284::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__284::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__284::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__284::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__284::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__284::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__285>Lib__closure__285::_itable(&Lib__closure__285::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__285::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__285::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__285::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__285::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__285::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__286>Lib__closure__286::_itable(&Lib__closure__286::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__286::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__286::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__286::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__286::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__286::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__287>Lib__closure__287::_itable(&Lib__closure__287::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__287::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__287::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__287::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__287::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__287::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__288>Lib__closure__288::_itable(&Lib__closure__288::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__288::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__288::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__288::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__288::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__288::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__289>Lib__closure__289::_itable(&Lib__closure__289::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__289::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__289::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__289::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__289::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__289::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__290>Lib__closure__290::_itable(&Lib__closure__290::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__290::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__290::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__290::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__290::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__290::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__291>Lib__closure__291::_itable(&Lib__closure__291::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__291::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__291::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__291::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__291::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__291::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__292>Lib__closure__292::_itable(&Lib__closure__292::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__292::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__292::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__292::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__292::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__292::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__293>Lib__closure__293::_itable(&Lib__closure__293::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__293::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__293::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__293::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__293::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__293::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__294>Lib__closure__294::_itable(&Lib__closure__294::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__294::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__294::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__294::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__294::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__294::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__295>Lib__closure__295::_itable(&Lib__closure__295::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__295::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__295::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__295::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__295::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__295::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__296>Lib__closure__296::_itable(&Lib__closure__296::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__296::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__296::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__296::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__296::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__296::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__297>Lib__closure__297::_itable(&Lib__closure__297::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__297::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__297::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__297::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__297::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__297::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__298>Lib__closure__298::_itable(&Lib__closure__298::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__298::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__298::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__298::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__298::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__298::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__299>Lib__closure__299::_itable(&Lib__closure__299::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__299::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__299::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__299::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__299::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__299::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__300>Lib__closure__300::_itable(&Lib__closure__300::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__300::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__300::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__300::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__300::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__300::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__301>Lib__closure__301::_itable(&Lib__closure__301::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__301::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__301::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__301::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__301::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__301::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__302>Lib__closure__302::_itable(&Lib__closure__302::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__302::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__302::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__302::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__302::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__302::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__303>Lib__closure__303::_itable(&Lib__closure__303::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__303::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__303::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__303::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__303::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__303::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__304>Lib__closure__304::_itable(&Lib__closure__304::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__304::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__304::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__304::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__304::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__304::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__305>Lib__closure__305::_itable(&Lib__closure__305::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__305::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__305::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__305::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__305::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__305::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__306>Lib__closure__306::_itable(&Lib__closure__306::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__306::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__306::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__306::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__306::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__306::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__307>Lib__closure__307::_itable(&Lib__closure__307::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__307::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__307::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__307::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__307::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__307::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__308>Lib__closure__308::_itable(&Lib__closure__308::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__308::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__308::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__308::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__308::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__308::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__309>Lib__closure__309::_itable(&Lib__closure__309::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__309::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__309::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__309::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__309::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__309::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__310>Lib__closure__310::_itable(&Lib__closure__310::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__310::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__310::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__310::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__310::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__310::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__311>Lib__closure__311::_itable(&Lib__closure__311::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__311::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__311::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__311::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__311::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__311::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__312>Lib__closure__312::_itable(&Lib__closure__312::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__312::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__312::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__312::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__312::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__312::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__313>Lib__closure__313::_itable(&Lib__closure__313::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__313::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__313::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__313::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__313::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__313::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__314>Lib__closure__314::_itable(&Lib__closure__314::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__314::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__314::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__314::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__314::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__314::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__315>Lib__closure__315::_itable(&Lib__closure__315::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__315::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__315::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__315::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__315::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__315::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__316>Lib__closure__316::_itable(&Lib__closure__316::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__316::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__316::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__316::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__316::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__316::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__317>Lib__closure__317::_itable(&Lib__closure__317::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__317::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__317::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__317::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__317::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__317::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__318>Lib__closure__318::_itable(&Lib__closure__318::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__318::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__318::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__318::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__318::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__318::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__319>Lib__closure__319::_itable(&Lib__closure__319::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__319::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__319::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__319::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__319::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__319::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__320>Lib__closure__320::_itable(&Lib__closure__320::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__320::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__320::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__320::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__320::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__320::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__321>Lib__closure__321::_itable(&Lib__closure__321::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__321::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__321::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__321::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__321::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__321::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__322>Lib__closure__322::_itable(&Lib__closure__322::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__322::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__322::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__322::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__322::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__322::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__323>Lib__closure__323::_itable(&Lib__closure__323::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__323::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__323::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__323::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__323::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__323::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__324>Lib__closure__324::_itable(&Lib__closure__324::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__324::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__324::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__324::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__324::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__324::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__325>Lib__closure__325::_itable(&Lib__closure__325::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__325::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__325::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__325::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__325::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__325::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__326>Lib__closure__326::_itable(&Lib__closure__326::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__326::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__326::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__326::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__326::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__326::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__327>Lib__closure__327::_itable(&Lib__closure__327::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__327::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__327::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__327::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__327::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__327::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__328>Lib__closure__328::_itable(&Lib__closure__328::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__328::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__328::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__328::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__328::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__328::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__329>Lib__closure__329::_itable(&Lib__closure__329::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__329::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__329::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__329::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__329::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__329::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__330>Lib__closure__330::_itable(&Lib__closure__330::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__330::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__330::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__330::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__330::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__330::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__331>Lib__closure__331::_itable(&Lib__closure__331::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__331::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__331::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__331::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__331::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__331::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__332>Lib__closure__332::_itable(&Lib__closure__332::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__332::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__332::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__332::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__332::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__332::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__333>Lib__closure__333::_itable(&Lib__closure__333::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__333::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__333::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__333::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__333::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__333::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double>::itable<Lib__closure__334>Lib__closure__334::_itable(&Lib__closure__334::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__334::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__334::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_double> >, &Lib__closure__334::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__334::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__334::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__335>Lib__closure__335::_itable(&Lib__closure__335::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__335::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__335::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__335::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__335::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__335::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__336>Lib__closure__336::_itable(&Lib__closure__336::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__336::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__336::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__336::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__336::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__336::_deserialize<x10::lang::Reference>);

x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int>::itable<Lib__closure__337>Lib__closure__337::_itable(&Lib__closure__337::apply, &x10::lang::Reference::equals, &x10::lang::Closure::hashCode, &Lib__closure__337::toString, &x10::lang::Closure::typeName);x10aux::itable_entry Lib__closure__337::_itables[2] = {x10aux::itable_entry(&x10aux::getRTT<x10::lang::Fun_0_1<x10aux::ref<x10::array::Point>, x10_int> >, &Lib__closure__337::_itable),x10aux::itable_entry(NULL, NULL)};

const x10aux::serialization_id_t Lib__closure__337::_serialization_id = 
    x10aux::DeserializationDispatcher::addDeserializer(Lib__closure__337::_deserialize<x10::lang::Reference>);

