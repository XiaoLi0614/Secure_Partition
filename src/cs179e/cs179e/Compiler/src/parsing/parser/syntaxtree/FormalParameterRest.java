//
// Generated by JTB 1.3.2
//

package parsing.parser.syntaxtree;


import parsing.ast.tree.Parameter;
import parsing.parser.visitor.GJNoArguVisitor;
import parsing.parser.visitor.GJVisitor;
import parsing.parser.visitor.GJVoidVisitor;
import parsing.parser.visitor.Visitor;

/**
 * Grammar production:
 * f0 -> ","
 * f1 -> FormalParameter()
 */
public class FormalParameterRest implements Node {
	public Parameter outParamater;

   public NodeToken f0;
   public FormalParameter f1;

   public FormalParameterRest(NodeToken n0, FormalParameter n1) {
      f0 = n0;
      f1 = n1;
   }

   public FormalParameterRest(FormalParameter n0) {
      f0 = new NodeToken(",");
      f1 = n0;
   }

   public void accept(Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

