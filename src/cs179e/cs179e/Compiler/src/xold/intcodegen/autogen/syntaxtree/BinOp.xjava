//
// Generated by JTB 1.3.2
//

package minijava.intermediatecodegen.syntaxtree;

import minijava.intermediatecodegen.tree.Exp;
import minijava.intermediatecodegen.tree.Node;
import minijava.intermediatecodegen.tree.Operator;

/**
 * Grammar production:
 * f0 -> Operator()
 * f1 -> Exp()
 * f2 -> Exp()
 */
public class BinOp implements Node {
   public Operator f0;
   public Exp f1;
   public Exp f2;

   public BinOp(Operator n0, minijava.intermediatecodegen.tree.Exp n1, Exp n2) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
   }

   public void accept(minijava.intermediatecodegen.visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(minijava.intermediatecodegen.visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(minijava.intermediatecodegen.visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(minijava.intermediatecodegen.visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

