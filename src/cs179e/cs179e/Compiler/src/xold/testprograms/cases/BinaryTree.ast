CompilationUnit
	mainClass: MainClass
		name: Identifier
			token:  "BinaryTree"
		parameterName: Identifier
			token:  "a"
		varDeclarations: List
		statements: List
			[0]: Print
				argument: MethodCall
					receiver: Allocation
						className: Identifier
							token:  "BT"
					methodName: Identifier
						token:  "Start"
					arguments: List
	classes: List
		[0]: Class
			name: Identifier
				token:  "BT"
			varDeclarations: List
			methodDeclarations: List
				[0]: Method
					returnType: IntType
					name: Identifier
						token:  "Start"
					parameters: List
					varDeclarations: List
						[0]: VarDeclaration
							type: Identifier
								token:  "Tree"
							identifier: Identifier
								token:  "root"
						[1]: VarDeclaration
							type: BooleanType
							identifier: Identifier
								token:  "ntb"
						[2]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "nti"
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "root"
							right: Allocation
								className: Identifier
									token:  "Tree"
						[1]: Assign
							identifier: Identifier
								token:  "ntb"
							right: MethodCall
								receiver: Identifier
									token:  "root"
								methodName: Identifier
									token:  "Init"
								arguments: List
									[0]: IntLiteral
										token:  "16"
						[2]: Assign
							identifier: Identifier
								token:  "ntb"
							right: MethodCall
								receiver: Identifier
									token:  "root"
								methodName: Identifier
									token:  "Print"
								arguments: List
						[3]: Print
							argument: IntLiteral
								token:  "100000000"
						[4]: Assign
							identifier: Identifier
								token:  "ntb"
							right: MethodCall
								receiver: Identifier
									token:  "root"
								methodName: Identifier
									token:  "Insert"
								arguments: List
									[0]: IntLiteral
										token:  "8"
						[5]: Assign
							identifier: Identifier
								token:  "ntb"
							right: MethodCall
								receiver: Identifier
									token:  "root"
								methodName: Identifier
									token:  "Print"
								arguments: List
						[6]: Assign
							identifier: Identifier
								token:  "ntb"
							right: MethodCall
								receiver: Identifier
									token:  "root"
								methodName: Identifier
									token:  "Insert"
								arguments: List
									[0]: IntLiteral
										token:  "24"
						[7]: Assign
							identifier: Identifier
								token:  "ntb"
							right: MethodCall
								receiver: Identifier
									token:  "root"
								methodName: Identifier
									token:  "Insert"
								arguments: List
									[0]: IntLiteral
										token:  "4"
						[8]: Assign
							identifier: Identifier
								token:  "ntb"
							right: MethodCall
								receiver: Identifier
									token:  "root"
								methodName: Identifier
									token:  "Insert"
								arguments: List
									[0]: IntLiteral
										token:  "12"
						[9]: Assign
							identifier: Identifier
								token:  "ntb"
							right: MethodCall
								receiver: Identifier
									token:  "root"
								methodName: Identifier
									token:  "Insert"
								arguments: List
									[0]: IntLiteral
										token:  "20"
						[10]: Assign
							identifier: Identifier
								token:  "ntb"
							right: MethodCall
								receiver: Identifier
									token:  "root"
								methodName: Identifier
									token:  "Insert"
								arguments: List
									[0]: IntLiteral
										token:  "28"
						[11]: Assign
							identifier: Identifier
								token:  "ntb"
							right: MethodCall
								receiver: Identifier
									token:  "root"
								methodName: Identifier
									token:  "Insert"
								arguments: List
									[0]: IntLiteral
										token:  "14"
						[12]: Assign
							identifier: Identifier
								token:  "ntb"
							right: MethodCall
								receiver: Identifier
									token:  "root"
								methodName: Identifier
									token:  "Print"
								arguments: List
						[13]: Print
							argument: MethodCall
								receiver: Identifier
									token:  "root"
								methodName: Identifier
									token:  "Search"
								arguments: List
									[0]: IntLiteral
										token:  "24"
						[14]: Print
							argument: MethodCall
								receiver: Identifier
									token:  "root"
								methodName: Identifier
									token:  "Search"
								arguments: List
									[0]: IntLiteral
										token:  "12"
						[15]: Print
							argument: MethodCall
								receiver: Identifier
									token:  "root"
								methodName: Identifier
									token:  "Search"
								arguments: List
									[0]: IntLiteral
										token:  "16"
						[16]: Print
							argument: MethodCall
								receiver: Identifier
									token:  "root"
								methodName: Identifier
									token:  "Search"
								arguments: List
									[0]: IntLiteral
										token:  "50"
						[17]: Print
							argument: MethodCall
								receiver: Identifier
									token:  "root"
								methodName: Identifier
									token:  "Search"
								arguments: List
									[0]: IntLiteral
										token:  "12"
						[18]: Assign
							identifier: Identifier
								token:  "ntb"
							right: MethodCall
								receiver: Identifier
									token:  "root"
								methodName: Identifier
									token:  "Delete"
								arguments: List
									[0]: IntLiteral
										token:  "12"
						[19]: Assign
							identifier: Identifier
								token:  "ntb"
							right: MethodCall
								receiver: Identifier
									token:  "root"
								methodName: Identifier
									token:  "Print"
								arguments: List
						[20]: Print
							argument: MethodCall
								receiver: Identifier
									token:  "root"
								methodName: Identifier
									token:  "Search"
								arguments: List
									[0]: IntLiteral
										token:  "12"
					returnExpression: IntLiteral
						token:  "0"
		[1]: Class
			name: Identifier
				token:  "Tree"
			varDeclarations: List
				[0]: VarDeclaration
					type: Identifier
						token:  "Tree"
					identifier: Identifier
						token:  "left"
				[1]: VarDeclaration
					type: Identifier
						token:  "Tree"
					identifier: Identifier
						token:  "right"
				[2]: VarDeclaration
					type: IntType
					identifier: Identifier
						token:  "key"
				[3]: VarDeclaration
					type: BooleanType
					identifier: Identifier
						token:  "has_left"
				[4]: VarDeclaration
					type: BooleanType
					identifier: Identifier
						token:  "has_right"
				[5]: VarDeclaration
					type: Identifier
						token:  "Tree"
					identifier: Identifier
						token:  "my_null"
			methodDeclarations: List
				[0]: Method
					returnType: BooleanType
					name: Identifier
						token:  "Init"
					parameters: List
						[0]: Parameter
							type: IntType
							name: Identifier
								token:  "v_key"
					varDeclarations: List
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "key"
							right: Identifier
								token:  "v_key"
						[1]: Assign
							identifier: Identifier
								token:  "has_left"
							right: FalseLiteral
						[2]: Assign
							identifier: Identifier
								token:  "has_right"
							right: FalseLiteral
					returnExpression: TrueLiteral
				[1]: Method
					returnType: BooleanType
					name: Identifier
						token:  "SetRight"
					parameters: List
						[0]: Parameter
							type: Identifier
								token:  "Tree"
							name: Identifier
								token:  "rn"
					varDeclarations: List
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "right"
							right: Identifier
								token:  "rn"
					returnExpression: TrueLiteral
				[2]: Method
					returnType: BooleanType
					name: Identifier
						token:  "SetLeft"
					parameters: List
						[0]: Parameter
							type: Identifier
								token:  "Tree"
							name: Identifier
								token:  "ln"
					varDeclarations: List
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "left"
							right: Identifier
								token:  "ln"
					returnExpression: TrueLiteral
				[3]: Method
					returnType: Identifier
						token:  "Tree"
					name: Identifier
						token:  "GetRight"
					parameters: List
					varDeclarations: List
					statements: List
					returnExpression: Identifier
						token:  "right"
				[4]: Method
					returnType: Identifier
						token:  "Tree"
					name: Identifier
						token:  "GetLeft"
					parameters: List
					varDeclarations: List
					statements: List
					returnExpression: Identifier
						token:  "left"
				[5]: Method
					returnType: IntType
					name: Identifier
						token:  "GetKey"
					parameters: List
					varDeclarations: List
					statements: List
					returnExpression: Identifier
						token:  "key"
				[6]: Method
					returnType: BooleanType
					name: Identifier
						token:  "SetKey"
					parameters: List
						[0]: Parameter
							type: IntType
							name: Identifier
								token:  "v_key"
					varDeclarations: List
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "key"
							right: Identifier
								token:  "v_key"
					returnExpression: TrueLiteral
				[7]: Method
					returnType: BooleanType
					name: Identifier
						token:  "GetHas_Right"
					parameters: List
					varDeclarations: List
					statements: List
					returnExpression: Identifier
						token:  "has_right"
				[8]: Method
					returnType: BooleanType
					name: Identifier
						token:  "GetHas_Left"
					parameters: List
					varDeclarations: List
					statements: List
					returnExpression: Identifier
						token:  "has_left"
				[9]: Method
					returnType: BooleanType
					name: Identifier
						token:  "SetHas_Left"
					parameters: List
						[0]: Parameter
							type: BooleanType
							name: Identifier
								token:  "val"
					varDeclarations: List
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "has_left"
							right: Identifier
								token:  "val"
					returnExpression: TrueLiteral
				[10]: Method
					returnType: BooleanType
					name: Identifier
						token:  "SetHas_Right"
					parameters: List
						[0]: Parameter
							type: BooleanType
							name: Identifier
								token:  "val"
					varDeclarations: List
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "has_right"
							right: Identifier
								token:  "val"
					returnExpression: TrueLiteral
				[11]: Method
					returnType: BooleanType
					name: Identifier
						token:  "Compare"
					parameters: List
						[0]: Parameter
							type: IntType
							name: Identifier
								token:  "num1"
						[1]: Parameter
							type: IntType
							name: Identifier
								token:  "num2"
					varDeclarations: List
						[0]: VarDeclaration
							type: BooleanType
							identifier: Identifier
								token:  "ntb"
						[1]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "nti"
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "ntb"
							right: FalseLiteral
						[1]: Assign
							identifier: Identifier
								token:  "nti"
							right: Plus
								operand1: Identifier
									token:  "num2"
								operand2: IntLiteral
									token:  "1"
						[2]: If
							condition: LessThan
								operand1: Identifier
									token:  "num1"
								operand2: Identifier
									token:  "num2"
							ifStatement: Assign
								identifier: Identifier
									token:  "ntb"
								right: FalseLiteral
							elseStatement: If
								condition: Not
									operand: LessThan
										operand1: Identifier
											token:  "num1"
										operand2: Identifier
											token:  "nti"
								ifStatement: Assign
									identifier: Identifier
										token:  "ntb"
									right: FalseLiteral
								elseStatement: Assign
									identifier: Identifier
										token:  "ntb"
									right: TrueLiteral
					returnExpression: Identifier
						token:  "ntb"
				[12]: Method
					returnType: BooleanType
					name: Identifier
						token:  "Insert"
					parameters: List
						[0]: Parameter
							type: IntType
							name: Identifier
								token:  "v_key"
					varDeclarations: List
						[0]: VarDeclaration
							type: Identifier
								token:  "Tree"
							identifier: Identifier
								token:  "new_node"
						[1]: VarDeclaration
							type: BooleanType
							identifier: Identifier
								token:  "ntb"
						[2]: VarDeclaration
							type: BooleanType
							identifier: Identifier
								token:  "cont"
						[3]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "key_aux"
						[4]: VarDeclaration
							type: Identifier
								token:  "Tree"
							identifier: Identifier
								token:  "current_node"
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "new_node"
							right: Allocation
								className: Identifier
									token:  "Tree"
						[1]: Assign
							identifier: Identifier
								token:  "ntb"
							right: MethodCall
								receiver: Identifier
									token:  "new_node"
								methodName: Identifier
									token:  "Init"
								arguments: List
									[0]: Identifier
										token:  "v_key"
						[2]: Assign
							identifier: Identifier
								token:  "current_node"
							right: This
						[3]: Assign
							identifier: Identifier
								token:  "cont"
							right: TrueLiteral
						[4]: While
							condition: Identifier
								token:  "cont"
							body: Block
								statements: List
									[0]: Assign
										identifier: Identifier
											token:  "key_aux"
										right: MethodCall
											receiver: Identifier
												token:  "current_node"
											methodName: Identifier
												token:  "GetKey"
											arguments: List
									[1]: If
										condition: LessThan
											operand1: Identifier
												token:  "v_key"
											operand2: Identifier
												token:  "key_aux"
										ifStatement: Block
											statements: List
												[0]: If
													condition: MethodCall
														receiver: Identifier
															token:  "current_node"
														methodName: Identifier
															token:  "GetHas_Left"
														arguments: List
													ifStatement: Assign
														identifier: Identifier
															token:  "current_node"
														right: MethodCall
															receiver: Identifier
																token:  "current_node"
															methodName: Identifier
																token:  "GetLeft"
															arguments: List
													elseStatement: Block
														statements: List
															[0]: Assign
																identifier: Identifier
																	token:  "cont"
																right: FalseLiteral
															[1]: Assign
																identifier: Identifier
																	token:  "ntb"
																right: MethodCall
																	receiver: Identifier
																		token:  "current_node"
																	methodName: Identifier
																		token:  "SetHas_Left"
																	arguments: List
																		[0]: TrueLiteral
															[2]: Assign
																identifier: Identifier
																	token:  "ntb"
																right: MethodCall
																	receiver: Identifier
																		token:  "current_node"
																	methodName: Identifier
																		token:  "SetLeft"
																	arguments: List
																		[0]: Identifier
																			token:  "new_node"
										elseStatement: Block
											statements: List
												[0]: If
													condition: MethodCall
														receiver: Identifier
															token:  "current_node"
														methodName: Identifier
															token:  "GetHas_Right"
														arguments: List
													ifStatement: Assign
														identifier: Identifier
															token:  "current_node"
														right: MethodCall
															receiver: Identifier
																token:  "current_node"
															methodName: Identifier
																token:  "GetRight"
															arguments: List
													elseStatement: Block
														statements: List
															[0]: Assign
																identifier: Identifier
																	token:  "cont"
																right: FalseLiteral
															[1]: Assign
																identifier: Identifier
																	token:  "ntb"
																right: MethodCall
																	receiver: Identifier
																		token:  "current_node"
																	methodName: Identifier
																		token:  "SetHas_Right"
																	arguments: List
																		[0]: TrueLiteral
															[2]: Assign
																identifier: Identifier
																	token:  "ntb"
																right: MethodCall
																	receiver: Identifier
																		token:  "current_node"
																	methodName: Identifier
																		token:  "SetRight"
																	arguments: List
																		[0]: Identifier
																			token:  "new_node"
					returnExpression: TrueLiteral
				[13]: Method
					returnType: BooleanType
					name: Identifier
						token:  "Delete"
					parameters: List
						[0]: Parameter
							type: IntType
							name: Identifier
								token:  "v_key"
					varDeclarations: List
						[0]: VarDeclaration
							type: Identifier
								token:  "Tree"
							identifier: Identifier
								token:  "current_node"
						[1]: VarDeclaration
							type: Identifier
								token:  "Tree"
							identifier: Identifier
								token:  "parent_node"
						[2]: VarDeclaration
							type: BooleanType
							identifier: Identifier
								token:  "cont"
						[3]: VarDeclaration
							type: BooleanType
							identifier: Identifier
								token:  "found"
						[4]: VarDeclaration
							type: BooleanType
							identifier: Identifier
								token:  "is_root"
						[5]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "key_aux"
						[6]: VarDeclaration
							type: BooleanType
							identifier: Identifier
								token:  "ntb"
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "current_node"
							right: This
						[1]: Assign
							identifier: Identifier
								token:  "parent_node"
							right: This
						[2]: Assign
							identifier: Identifier
								token:  "cont"
							right: TrueLiteral
						[3]: Assign
							identifier: Identifier
								token:  "found"
							right: FalseLiteral
						[4]: Assign
							identifier: Identifier
								token:  "is_root"
							right: TrueLiteral
						[5]: While
							condition: Identifier
								token:  "cont"
							body: Block
								statements: List
									[0]: Assign
										identifier: Identifier
											token:  "key_aux"
										right: MethodCall
											receiver: Identifier
												token:  "current_node"
											methodName: Identifier
												token:  "GetKey"
											arguments: List
									[1]: If
										condition: LessThan
											operand1: Identifier
												token:  "v_key"
											operand2: Identifier
												token:  "key_aux"
										ifStatement: If
											condition: MethodCall
												receiver: Identifier
													token:  "current_node"
												methodName: Identifier
													token:  "GetHas_Left"
												arguments: List
											ifStatement: Block
												statements: List
													[0]: Assign
														identifier: Identifier
															token:  "parent_node"
														right: Identifier
															token:  "current_node"
													[1]: Assign
														identifier: Identifier
															token:  "current_node"
														right: MethodCall
															receiver: Identifier
																token:  "current_node"
															methodName: Identifier
																token:  "GetLeft"
															arguments: List
											elseStatement: Assign
												identifier: Identifier
													token:  "cont"
												right: FalseLiteral
										elseStatement: If
											condition: LessThan
												operand1: Identifier
													token:  "key_aux"
												operand2: Identifier
													token:  "v_key"
											ifStatement: If
												condition: MethodCall
													receiver: Identifier
														token:  "current_node"
													methodName: Identifier
														token:  "GetHas_Right"
													arguments: List
												ifStatement: Block
													statements: List
														[0]: Assign
															identifier: Identifier
																token:  "parent_node"
															right: Identifier
																token:  "current_node"
														[1]: Assign
															identifier: Identifier
																token:  "current_node"
															right: MethodCall
																receiver: Identifier
																	token:  "current_node"
																methodName: Identifier
																	token:  "GetRight"
																arguments: List
												elseStatement: Assign
													identifier: Identifier
														token:  "cont"
													right: FalseLiteral
											elseStatement: Block
												statements: List
													[0]: If
														condition: Identifier
															token:  "is_root"
														ifStatement: If
															condition: And
																operand1: Not
																	operand: MethodCall
																		receiver: Identifier
																			token:  "current_node"
																		methodName: Identifier
																			token:  "GetHas_Right"
																		arguments: List
																operand2: Not
																	operand: MethodCall
																		receiver: Identifier
																			token:  "current_node"
																		methodName: Identifier
																			token:  "GetHas_Left"
																		arguments: List
															ifStatement: Assign
																identifier: Identifier
																	token:  "ntb"
																right: TrueLiteral
															elseStatement: Assign
																identifier: Identifier
																	token:  "ntb"
																right: MethodCall
																	receiver: This
																	methodName: Identifier
																		token:  "Remove"
																	arguments: List
																		[0]: Identifier
																			token:  "parent_node"
																		[1]: Identifier
																			token:  "current_node"
														elseStatement: Assign
															identifier: Identifier
																token:  "ntb"
															right: MethodCall
																receiver: This
																methodName: Identifier
																	token:  "Remove"
																arguments: List
																	[0]: Identifier
																		token:  "parent_node"
																	[1]: Identifier
																		token:  "current_node"
													[1]: Assign
														identifier: Identifier
															token:  "found"
														right: TrueLiteral
													[2]: Assign
														identifier: Identifier
															token:  "cont"
														right: FalseLiteral
									[2]: Assign
										identifier: Identifier
											token:  "is_root"
										right: FalseLiteral
					returnExpression: Identifier
						token:  "found"
				[14]: Method
					returnType: BooleanType
					name: Identifier
						token:  "Remove"
					parameters: List
						[0]: Parameter
							type: Identifier
								token:  "Tree"
							name: Identifier
								token:  "p_node"
						[1]: Parameter
							type: Identifier
								token:  "Tree"
							name: Identifier
								token:  "c_node"
					varDeclarations: List
						[0]: VarDeclaration
							type: BooleanType
							identifier: Identifier
								token:  "ntb"
						[1]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "auxkey1"
						[2]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "auxkey2"
					statements: List
						[0]: If
							condition: MethodCall
								receiver: Identifier
									token:  "c_node"
								methodName: Identifier
									token:  "GetHas_Left"
								arguments: List
							ifStatement: Assign
								identifier: Identifier
									token:  "ntb"
								right: MethodCall
									receiver: This
									methodName: Identifier
										token:  "RemoveLeft"
									arguments: List
										[0]: Identifier
											token:  "p_node"
										[1]: Identifier
											token:  "c_node"
							elseStatement: If
								condition: MethodCall
									receiver: Identifier
										token:  "c_node"
									methodName: Identifier
										token:  "GetHas_Right"
									arguments: List
								ifStatement: Assign
									identifier: Identifier
										token:  "ntb"
									right: MethodCall
										receiver: This
										methodName: Identifier
											token:  "RemoveRight"
										arguments: List
											[0]: Identifier
												token:  "p_node"
											[1]: Identifier
												token:  "c_node"
								elseStatement: Block
									statements: List
										[0]: Assign
											identifier: Identifier
												token:  "auxkey1"
											right: MethodCall
												receiver: Identifier
													token:  "c_node"
												methodName: Identifier
													token:  "GetKey"
												arguments: List
										[1]: Assign
											identifier: Identifier
												token:  "auxkey2"
											right: MethodCall
												receiver: MethodCall
													receiver: Identifier
														token:  "p_node"
													methodName: Identifier
														token:  "GetLeft"
													arguments: List
												methodName: Identifier
													token:  "GetKey"
												arguments: List
										[2]: If
											condition: MethodCall
												receiver: This
												methodName: Identifier
													token:  "Compare"
												arguments: List
													[0]: Identifier
														token:  "auxkey1"
													[1]: Identifier
														token:  "auxkey2"
											ifStatement: Block
												statements: List
													[0]: Assign
														identifier: Identifier
															token:  "ntb"
														right: MethodCall
															receiver: Identifier
																token:  "p_node"
															methodName: Identifier
																token:  "SetLeft"
															arguments: List
																[0]: Identifier
																	token:  "my_null"
													[1]: Assign
														identifier: Identifier
															token:  "ntb"
														right: MethodCall
															receiver: Identifier
																token:  "p_node"
															methodName: Identifier
																token:  "SetHas_Left"
															arguments: List
																[0]: FalseLiteral
											elseStatement: Block
												statements: List
													[0]: Assign
														identifier: Identifier
															token:  "ntb"
														right: MethodCall
															receiver: Identifier
																token:  "p_node"
															methodName: Identifier
																token:  "SetRight"
															arguments: List
																[0]: Identifier
																	token:  "my_null"
													[1]: Assign
														identifier: Identifier
															token:  "ntb"
														right: MethodCall
															receiver: Identifier
																token:  "p_node"
															methodName: Identifier
																token:  "SetHas_Right"
															arguments: List
																[0]: FalseLiteral
					returnExpression: TrueLiteral
				[15]: Method
					returnType: BooleanType
					name: Identifier
						token:  "RemoveRight"
					parameters: List
						[0]: Parameter
							type: Identifier
								token:  "Tree"
							name: Identifier
								token:  "p_node"
						[1]: Parameter
							type: Identifier
								token:  "Tree"
							name: Identifier
								token:  "c_node"
					varDeclarations: List
						[0]: VarDeclaration
							type: BooleanType
							identifier: Identifier
								token:  "ntb"
					statements: List
						[0]: While
							condition: MethodCall
								receiver: Identifier
									token:  "c_node"
								methodName: Identifier
									token:  "GetHas_Right"
								arguments: List
							body: Block
								statements: List
									[0]: Assign
										identifier: Identifier
											token:  "ntb"
										right: MethodCall
											receiver: Identifier
												token:  "c_node"
											methodName: Identifier
												token:  "SetKey"
											arguments: List
												[0]: MethodCall
													receiver: MethodCall
														receiver: Identifier
															token:  "c_node"
														methodName: Identifier
															token:  "GetRight"
														arguments: List
													methodName: Identifier
														token:  "GetKey"
													arguments: List
									[1]: Assign
										identifier: Identifier
											token:  "p_node"
										right: Identifier
											token:  "c_node"
									[2]: Assign
										identifier: Identifier
											token:  "c_node"
										right: MethodCall
											receiver: Identifier
												token:  "c_node"
											methodName: Identifier
												token:  "GetRight"
											arguments: List
						[1]: Assign
							identifier: Identifier
								token:  "ntb"
							right: MethodCall
								receiver: Identifier
									token:  "p_node"
								methodName: Identifier
									token:  "SetRight"
								arguments: List
									[0]: Identifier
										token:  "my_null"
						[2]: Assign
							identifier: Identifier
								token:  "ntb"
							right: MethodCall
								receiver: Identifier
									token:  "p_node"
								methodName: Identifier
									token:  "SetHas_Right"
								arguments: List
									[0]: FalseLiteral
					returnExpression: TrueLiteral
				[16]: Method
					returnType: BooleanType
					name: Identifier
						token:  "RemoveLeft"
					parameters: List
						[0]: Parameter
							type: Identifier
								token:  "Tree"
							name: Identifier
								token:  "p_node"
						[1]: Parameter
							type: Identifier
								token:  "Tree"
							name: Identifier
								token:  "c_node"
					varDeclarations: List
						[0]: VarDeclaration
							type: BooleanType
							identifier: Identifier
								token:  "ntb"
					statements: List
						[0]: While
							condition: MethodCall
								receiver: Identifier
									token:  "c_node"
								methodName: Identifier
									token:  "GetHas_Left"
								arguments: List
							body: Block
								statements: List
									[0]: Assign
										identifier: Identifier
											token:  "ntb"
										right: MethodCall
											receiver: Identifier
												token:  "c_node"
											methodName: Identifier
												token:  "SetKey"
											arguments: List
												[0]: MethodCall
													receiver: MethodCall
														receiver: Identifier
															token:  "c_node"
														methodName: Identifier
															token:  "GetLeft"
														arguments: List
													methodName: Identifier
														token:  "GetKey"
													arguments: List
									[1]: Assign
										identifier: Identifier
											token:  "p_node"
										right: Identifier
											token:  "c_node"
									[2]: Assign
										identifier: Identifier
											token:  "c_node"
										right: MethodCall
											receiver: Identifier
												token:  "c_node"
											methodName: Identifier
												token:  "GetLeft"
											arguments: List
						[1]: Assign
							identifier: Identifier
								token:  "ntb"
							right: MethodCall
								receiver: Identifier
									token:  "p_node"
								methodName: Identifier
									token:  "SetLeft"
								arguments: List
									[0]: Identifier
										token:  "my_null"
						[2]: Assign
							identifier: Identifier
								token:  "ntb"
							right: MethodCall
								receiver: Identifier
									token:  "p_node"
								methodName: Identifier
									token:  "SetHas_Left"
								arguments: List
									[0]: FalseLiteral
					returnExpression: TrueLiteral
				[17]: Method
					returnType: IntType
					name: Identifier
						token:  "Search"
					parameters: List
						[0]: Parameter
							type: IntType
							name: Identifier
								token:  "v_key"
					varDeclarations: List
						[0]: VarDeclaration
							type: BooleanType
							identifier: Identifier
								token:  "cont"
						[1]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "ifound"
						[2]: VarDeclaration
							type: Identifier
								token:  "Tree"
							identifier: Identifier
								token:  "current_node"
						[3]: VarDeclaration
							type: IntType
							identifier: Identifier
								token:  "key_aux"
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "current_node"
							right: This
						[1]: Assign
							identifier: Identifier
								token:  "cont"
							right: TrueLiteral
						[2]: Assign
							identifier: Identifier
								token:  "ifound"
							right: IntLiteral
								token:  "0"
						[3]: While
							condition: Identifier
								token:  "cont"
							body: Block
								statements: List
									[0]: Assign
										identifier: Identifier
											token:  "key_aux"
										right: MethodCall
											receiver: Identifier
												token:  "current_node"
											methodName: Identifier
												token:  "GetKey"
											arguments: List
									[1]: If
										condition: LessThan
											operand1: Identifier
												token:  "v_key"
											operand2: Identifier
												token:  "key_aux"
										ifStatement: If
											condition: MethodCall
												receiver: Identifier
													token:  "current_node"
												methodName: Identifier
													token:  "GetHas_Left"
												arguments: List
											ifStatement: Assign
												identifier: Identifier
													token:  "current_node"
												right: MethodCall
													receiver: Identifier
														token:  "current_node"
													methodName: Identifier
														token:  "GetLeft"
													arguments: List
											elseStatement: Assign
												identifier: Identifier
													token:  "cont"
												right: FalseLiteral
										elseStatement: If
											condition: LessThan
												operand1: Identifier
													token:  "key_aux"
												operand2: Identifier
													token:  "v_key"
											ifStatement: If
												condition: MethodCall
													receiver: Identifier
														token:  "current_node"
													methodName: Identifier
														token:  "GetHas_Right"
													arguments: List
												ifStatement: Assign
													identifier: Identifier
														token:  "current_node"
													right: MethodCall
														receiver: Identifier
															token:  "current_node"
														methodName: Identifier
															token:  "GetRight"
														arguments: List
												elseStatement: Assign
													identifier: Identifier
														token:  "cont"
													right: FalseLiteral
											elseStatement: Block
												statements: List
													[0]: Assign
														identifier: Identifier
															token:  "ifound"
														right: IntLiteral
															token:  "1"
													[1]: Assign
														identifier: Identifier
															token:  "cont"
														right: FalseLiteral
					returnExpression: Identifier
						token:  "ifound"
				[18]: Method
					returnType: BooleanType
					name: Identifier
						token:  "Print"
					parameters: List
					varDeclarations: List
						[0]: VarDeclaration
							type: Identifier
								token:  "Tree"
							identifier: Identifier
								token:  "current_node"
						[1]: VarDeclaration
							type: BooleanType
							identifier: Identifier
								token:  "ntb"
					statements: List
						[0]: Assign
							identifier: Identifier
								token:  "current_node"
							right: This
						[1]: Assign
							identifier: Identifier
								token:  "ntb"
							right: MethodCall
								receiver: This
								methodName: Identifier
									token:  "RecPrint"
								arguments: List
									[0]: Identifier
										token:  "current_node"
					returnExpression: TrueLiteral
				[19]: Method
					returnType: BooleanType
					name: Identifier
						token:  "RecPrint"
					parameters: List
						[0]: Parameter
							type: Identifier
								token:  "Tree"
							name: Identifier
								token:  "node"
					varDeclarations: List
						[0]: VarDeclaration
							type: BooleanType
							identifier: Identifier
								token:  "ntb"
					statements: List
						[0]: If
							condition: MethodCall
								receiver: Identifier
									token:  "node"
								methodName: Identifier
									token:  "GetHas_Left"
								arguments: List
							ifStatement: Block
								statements: List
									[0]: Assign
										identifier: Identifier
											token:  "ntb"
										right: MethodCall
											receiver: This
											methodName: Identifier
												token:  "RecPrint"
											arguments: List
												[0]: MethodCall
													receiver: Identifier
														token:  "node"
													methodName: Identifier
														token:  "GetLeft"
													arguments: List
							elseStatement: Assign
								identifier: Identifier
									token:  "ntb"
								right: TrueLiteral
						[1]: Print
							argument: MethodCall
								receiver: Identifier
									token:  "node"
								methodName: Identifier
									token:  "GetKey"
								arguments: List
						[2]: If
							condition: MethodCall
								receiver: Identifier
									token:  "node"
								methodName: Identifier
									token:  "GetHas_Right"
								arguments: List
							ifStatement: Block
								statements: List
									[0]: Assign
										identifier: Identifier
											token:  "ntb"
										right: MethodCall
											receiver: This
											methodName: Identifier
												token:  "RecPrint"
											arguments: List
												[0]: MethodCall
													receiver: Identifier
														token:  "node"
													methodName: Identifier
														token:  "GetRight"
													arguments: List
							elseStatement: Assign
								identifier: Identifier
									token:  "ntb"
								right: TrueLiteral
					returnExpression: TrueLiteral
