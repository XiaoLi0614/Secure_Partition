const empty_QS

func Main [in 0, out 0, local 1]
	$t0 = $a0
	$t1 = $a1
	$t2 = $a2
	$t3 = $a3
	$t0 = HeapAllocZ(8)
	if $t0 goto :null1
	Error("null pointer")
null1:
	local[0] = $t1
	$a0 = $t0
	$a1 = 10
	call :QS.Start
	$t1 = local[0]
	$t1 = $v0
	PrintIntS($t1)
	ret


func QS.Start [in 0, out 0, local 1]
	$t0 = $a0
	$t1 = $a1
	$t2 = $a2
	$t3 = $a3
	local[0] = $t0
	$a0 = $t0
	$a1 = $t1
	call :QS.Init
	$t0 = local[0]
	$t2 = $v0
	local[0] = $t0
	$a0 = $t0
	call :QS.Print
	$t0 = local[0]
	$t2 = $v0
	PrintIntS(9999)
	$t1 = [$t0+4]
	$t2 = Sub($t1 1)
	local[0] = $t0
	$a0 = $t0
	$a1 = 0
	$a2 = $t2
	call :QS.Sort
	$t0 = local[0]
	$t2 = $v0
	$a0 = $t0
	call :QS.Print
	$t2 = $v0
	$v0 = 0
	ret


func QS.Sort [in 0, out 0, local 4]
	$t0 = $a0
	$t1 = $a1
	$t2 = $a2
	$t3 = $a3
	local[0] = $s0
	$t3 = 0
	$t4 = LtS($t1 $t2)
	if0 $t4 goto :if1_else
	$t4 = [$t0]
	if $t4 goto :null2
	Error("null pointer")
null2:
	$t5 = [$t4]
	$t5 = Lt($t2 $t5)
	if $t5 goto :bounds1
	Error("array index out of bounds")
bounds1:
	$t5 = MulS($t2 4)
	$t5 = Add($t5 $t4)
	$t4 = [$t5+4]
	$t5 = Sub($t1 1)
	$t6 = $t2
	$t7 = 1
while1_top:
	if0 $t7 goto :while1_end
	$s0 = 1
while2_top:
	if0 $s0 goto :while2_end
	$t5 = Add($t5 1)
	$s1 = [$t0]
	if $s1 goto :null3
	Error("null pointer")
null3:
	$s2 = [$s1]
	$s2 = Lt($t5 $s2)
	if $s2 goto :bounds2
	Error("array index out of bounds")
bounds2:
	$s2 = MulS($t5 4)
	$s2 = Add($s2 $s1)
	$s1 = [$s2+4]
	$s2 = LtS($s1 $t4)
	if $s2 goto :if2_else
	$s0 = 0
	goto :if2_end
if2_else:
	$s0 = 1
if2_end:
	goto :while2_top
while2_end:
	$s0 = 1
while3_top:
	if0 $s0 goto :while3_end
	$t6 = Sub($t6 1)
	$s2 = [$t0]
	if $s2 goto :null4
	Error("null pointer")
null4:
	$s3 = [$s2]
	$s3 = Lt($t6 $s3)
	if $s3 goto :bounds3
	Error("array index out of bounds")
bounds3:
	$s3 = MulS($t6 4)
	$s3 = Add($s3 $s2)
	$s1 = [$s3+4]
	$s3 = LtS($t4 $s1)
	if $s3 goto :if3_else
	$s0 = 0
	goto :if3_end
if3_else:
	$s0 = 1
if3_end:
	goto :while3_top
while3_end:
	$s0 = [$t0]
	if $s0 goto :null5
	Error("null pointer")
null5:
	$s3 = [$s0]
	$s3 = Lt($t5 $s3)
	if $s3 goto :bounds4
	Error("array index out of bounds")
bounds4:
	$s3 = MulS($t5 4)
	$s3 = Add($s3 $s0)
	$t3 = [$s3+4]
	$s3 = [$t0]
	if $s3 goto :null6
	Error("null pointer")
null6:
	$s0 = [$s3]
	$s0 = Lt($t5 $s0)
	if $s0 goto :bounds5
	Error("array index out of bounds")
bounds5:
	$s0 = MulS($t5 4)
	$s0 = Add($s0 $s3)
	$s3 = [$t0]
	if $s3 goto :null7
	Error("null pointer")
null7:
	$s1 = [$s3]
	$s1 = Lt($t6 $s1)
	if $s1 goto :bounds6
	Error("array index out of bounds")
bounds6:
	$s1 = MulS($t6 4)
	$s1 = Add($s1 $s3)
	$s3 = [$s1+4]
	[$s0+4] = $s3
	$s3 = [$t0]
	if $s3 goto :null8
	Error("null pointer")
null8:
	$s0 = [$s3]
	$s0 = Lt($t6 $s0)
	if $s0 goto :bounds7
	Error("array index out of bounds")
bounds7:
	$s0 = MulS($t6 4)
	$s0 = Add($s0 $s3)
	[$s0+4] = $t3
	$s0 = Add($t5 1)
	$s3 = LtS($t6 $s0)
	if0 $s3 goto :if4_else
	$t7 = 0
	goto :if4_end
if4_else:
	$t7 = 1
if4_end:
	goto :while1_top
while1_end:
	$t7 = [$t0]
	if $t7 goto :null9
	Error("null pointer")
null9:
	$t4 = [$t7]
	$t4 = Lt($t6 $t4)
	if $t4 goto :bounds8
	Error("array index out of bounds")
bounds8:
	$t4 = MulS($t6 4)
	$t4 = Add($t4 $t7)
	$t7 = [$t0]
	if $t7 goto :null10
	Error("null pointer")
null10:
	$t6 = [$t7]
	$t6 = Lt($t5 $t6)
	if $t6 goto :bounds9
	Error("array index out of bounds")
bounds9:
	$t6 = MulS($t5 4)
	$t6 = Add($t6 $t7)
	$t7 = [$t6+4]
	[$t4+4] = $t7
	$t7 = [$t0]
	if $t7 goto :null11
	Error("null pointer")
null11:
	$t4 = [$t7]
	$t4 = Lt($t5 $t4)
	if $t4 goto :bounds10
	Error("array index out of bounds")
bounds10:
	$t4 = MulS($t5 4)
	$t4 = Add($t4 $t7)
	$t7 = [$t0]
	if $t7 goto :null12
	Error("null pointer")
null12:
	$t6 = [$t7]
	$t6 = Lt($t2 $t6)
	if $t6 goto :bounds11
	Error("array index out of bounds")
bounds11:
	$t6 = MulS($t2 4)
	$t6 = Add($t6 $t7)
	$t7 = [$t6+4]
	[$t4+4] = $t7
	$t7 = [$t0]
	if $t7 goto :null13
	Error("null pointer")
null13:
	$t4 = [$t7]
	$t4 = Lt($t2 $t4)
	if $t4 goto :bounds12
	Error("array index out of bounds")
bounds12:
	$t4 = MulS($t2 4)
	$t4 = Add($t4 $t7)
	[$t4+4] = $t3
	$t4 = Sub($t5 1)
	local[1] = $t5
	local[2] = $t2
	local[3] = $t0
	$a0 = $t0
	$a1 = $t1
	$a2 = $t4
	call :QS.Sort
	$t5 = local[1]
	$t2 = local[2]
	$t0 = local[3]
	$t3 = $v0
	$t4 = Add($t5 1)
	$a0 = $t0
	$a1 = $t4
	$a2 = $t2
	call :QS.Sort
	$t3 = $v0
	goto :if1_end
if1_else:
	$t3 = 0
if1_end:
	$v0 = 0
	local[0] = $s0
	ret


func QS.Print [in 0, out 0, local 0]
	$t0 = $a0
	$t1 = $a1
	$t2 = $a2
	$t3 = $a3
	$t1 = 0
while4_top:
	$t2 = [$t0+4]
	$t3 = LtS($t1 $t2)
	if0 $t3 goto :while4_end
	$t3 = [$t0]
	if $t3 goto :null14
	Error("null pointer")
null14:
	$t2 = [$t3]
	$t2 = Lt($t1 $t2)
	if $t2 goto :bounds13
	Error("array index out of bounds")
bounds13:
	$t2 = MulS($t1 4)
	$t2 = Add($t2 $t3)
	$t3 = [$t2+4]
	PrintIntS($t3)
	$t1 = Add($t1 1)
	goto :while4_top
while4_end:
	$v0 = 0
	ret


func QS.Init [in 0, out 0, local 2]
	$t0 = $a0
	$t1 = $a1
	$t2 = $a2
	$t3 = $a3
	[$t0+4] = $t1
	local[0] = $t2
	local[1] = $t0
	$a0 = $t1
	call :AllocArray
	$t2 = local[0]
	$t0 = local[1]
	$t2 = $v0
	[$t0] = $t2
	$t2 = [$t0]
	if $t2 goto :null15
	Error("null pointer")
null15:
	$t1 = [$t2]
	$t1 = Lt(0 $t1)
	if $t1 goto :bounds14
	Error("array index out of bounds")
bounds14:
	$t1 = MulS(0 4)
	$t1 = Add($t1 $t2)
	[$t1+4] = 20
	$t1 = [$t0]
	if $t1 goto :null16
	Error("null pointer")
null16:
	$t2 = [$t1]
	$t2 = Lt(1 $t2)
	if $t2 goto :bounds15
	Error("array index out of bounds")
bounds15:
	$t2 = MulS(1 4)
	$t2 = Add($t2 $t1)
	[$t2+4] = 7
	$t2 = [$t0]
	if $t2 goto :null17
	Error("null pointer")
null17:
	$t1 = [$t2]
	$t1 = Lt(2 $t1)
	if $t1 goto :bounds16
	Error("array index out of bounds")
bounds16:
	$t1 = MulS(2 4)
	$t1 = Add($t1 $t2)
	[$t1+4] = 12
	$t1 = [$t0]
	if $t1 goto :null18
	Error("null pointer")
null18:
	$t2 = [$t1]
	$t2 = Lt(3 $t2)
	if $t2 goto :bounds17
	Error("array index out of bounds")
bounds17:
	$t2 = MulS(3 4)
	$t2 = Add($t2 $t1)
	[$t2+4] = 18
	$t2 = [$t0]
	if $t2 goto :null19
	Error("null pointer")
null19:
	$t1 = [$t2]
	$t1 = Lt(4 $t1)
	if $t1 goto :bounds18
	Error("array index out of bounds")
bounds18:
	$t1 = MulS(4 4)
	$t1 = Add($t1 $t2)
	[$t1+4] = 2
	$t1 = [$t0]
	if $t1 goto :null20
	Error("null pointer")
null20:
	$t2 = [$t1]
	$t2 = Lt(5 $t2)
	if $t2 goto :bounds19
	Error("array index out of bounds")
bounds19:
	$t2 = MulS(5 4)
	$t2 = Add($t2 $t1)
	[$t2+4] = 11
	$t2 = [$t0]
	if $t2 goto :null21
	Error("null pointer")
null21:
	$t1 = [$t2]
	$t1 = Lt(6 $t1)
	if $t1 goto :bounds20
	Error("array index out of bounds")
bounds20:
	$t1 = MulS(6 4)
	$t1 = Add($t1 $t2)
	[$t1+4] = 6
	$t1 = [$t0]
	if $t1 goto :null22
	Error("null pointer")
null22:
	$t2 = [$t1]
	$t2 = Lt(7 $t2)
	if $t2 goto :bounds21
	Error("array index out of bounds")
bounds21:
	$t2 = MulS(7 4)
	$t2 = Add($t2 $t1)
	[$t2+4] = 9
	$t2 = [$t0]
	if $t2 goto :null23
	Error("null pointer")
null23:
	$t1 = [$t2]
	$t1 = Lt(8 $t1)
	if $t1 goto :bounds22
	Error("array index out of bounds")
bounds22:
	$t1 = MulS(8 4)
	$t1 = Add($t1 $t2)
	[$t1+4] = 19
	$t1 = [$t0]
	if $t1 goto :null24
	Error("null pointer")
null24:
	$t0 = [$t1]
	$t0 = Lt(9 $t0)
	if $t0 goto :bounds23
	Error("array index out of bounds")
bounds23:
	$t0 = MulS(9 4)
	$t0 = Add($t0 $t1)
	[$t0+4] = 5
	$v0 = 0
	ret


func AllocArray [in 0, out 0, local 0]
	$t0 = $a0
	$t1 = $a1
	$t2 = $a2
	$t3 = $a3
	$t1 = MulS($t0 4)
	$t1 = Add($t1 4)
	$t2 = HeapAllocZ($t1)
	[$t2] = $t0
	$v0 = $t2
	ret


