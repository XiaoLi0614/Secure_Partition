//
// Generated by JTB 1.3.2
//

package jsrc.px10.syntaxanalyser.syntaxtree;

/**
 * Grammar production:
 * f0 -> "."
 * f1 -> "coord"
 * f2 -> "("
 * f3 -> Expression()
 * f4 -> ")"
 * f5 -> "["
 * f6 -> IntegerLiteral()
 * f7 -> "]"
 */
public class DotCoord implements Node {
   public NodeToken f0;
   public NodeToken f1;
   public NodeToken f2;
   public Expression f3;
   public NodeToken f4;
   public NodeToken f5;
   public IntegerLiteral f6;
   public NodeToken f7;

   public DotCoord(NodeToken n0, NodeToken n1, NodeToken n2, Expression n3, NodeToken n4, NodeToken n5, IntegerLiteral n6, NodeToken n7) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
      f4 = n4;
      f5 = n5;
      f6 = n6;
      f7 = n7;
   }

   public DotCoord(Expression n0, IntegerLiteral n1) {
      f0 = new NodeToken(".");
      f1 = new NodeToken("coord");
      f2 = new NodeToken("(");
      f3 = n0;
      f4 = new NodeToken(")");
      f5 = new NodeToken("[");
      f6 = n1;
      f7 = new NodeToken("]");
   }

   public void accept(jsrc.px10.syntaxanalyser.visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(jsrc.px10.syntaxanalyser.visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(jsrc.px10.syntaxanalyser.visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(jsrc.px10.syntaxanalyser.visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

