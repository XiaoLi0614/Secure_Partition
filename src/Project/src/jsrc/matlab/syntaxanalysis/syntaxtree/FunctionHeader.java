//
// Generated by JTB 1.3.2
//

package jsrc.matlab.syntaxanalysis.syntaxtree;

/**
 * Grammar production:
 * f0 -> "function"
 * f1 -> [ OutputClause() ]
 * f2 -> Identifier()
 * f3 -> "("
 * f4 -> ( IdentifierList() )?
 * f5 -> ")"
 * f6 -> ( ";" )?
 */
public class FunctionHeader implements Node {
   public NodeToken f0;
   public NodeOptional f1;
   public Identifier f2;
   public NodeToken f3;
   public NodeOptional f4;
   public NodeToken f5;
   public NodeOptional f6;

   public FunctionHeader(NodeToken n0, NodeOptional n1, Identifier n2, NodeToken n3, NodeOptional n4, NodeToken n5, NodeOptional n6) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
      f4 = n4;
      f5 = n5;
      f6 = n6;
   }

   public FunctionHeader(NodeOptional n0, Identifier n1, NodeOptional n2, NodeOptional n3) {
      f0 = new NodeToken("function");
      f1 = n0;
      f2 = n1;
      f3 = new NodeToken("(");
      f4 = n2;
      f5 = new NodeToken(")");
      f6 = n3;
   }

   public void accept(jsrc.matlab.syntaxanalysis.visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(jsrc.matlab.syntaxanalysis.visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(jsrc.matlab.syntaxanalysis.visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(jsrc.matlab.syntaxanalysis.visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

